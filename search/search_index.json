{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"C%2B%2B/Type-Traits/","text":"\u8403\u53d6\u673a \u5177\u4f53\u7684\u6765\u8bf4\uff0ctraits\u5c31\u662f\u901a\u8fc7\u5b9a\u4e49\u4e00\u4e9b\u7ed3\u6784\u4f53\u6216\u7c7b\uff0c\u5e76\u5229\u7528\u6a21\u677f\u7c7b\u7279\u5316\u548c\u504f\u7279\u5316\u7684\u80fd\u529b\uff0c\u7ed9\u7c7b\u578b\u8d4b\u4e88\u4e00\u4e9b\u7279\u6027\uff0c\u8fd9\u4e9b\u7279\u6027\u6839\u636e\u7c7b\u578b\u7684\u4e0d\u540c\u800c\u5f02\u3002\u5728\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e9btraits\u6765\u5224\u65ad\u4e00\u4e2a\u7c7b\u578b\u7684\u4e00\u4e9b\u7279\u6027\uff0c\u5f15\u53d1C++\u7684\u51fd\u6570\u91cd\u8f7d\u673a\u5236\uff0c\u5b9e\u73b0\u540c\u4e00\u79cd\u64cd\u4f5c\u56e0\u7c7b\u578b\u4e0d\u540c\u800c\u5f02\u7684\u6548\u679c\u3002 cplusplus\uff1a This header defines a series of classes to obtain type information on compile-time. The header contains: Helper classes: Standard classes to assist in creating compile-time constants. Type traits: Classes to obtain characteristics of types in the form of compile-time constant values. Type transformations: Classes to obtain new types by applying specific transformations to existing types. \u611f\u89c9\u5c31\u662f\u7528traits\u6765\u95ee\u5230\u5404\u79cd\u5404\u6837\u7684type \u4f8b\uff1a \u73b0\u5728\u5b9a\u4e49\u4e00\u4e2atype_traits\u53ef\u4ee5\u83b7\u5f97\u7c7b\u578b\u7684\u5982\u4e0b\u5c5e\u6027\uff1a 1.\u662f\u5426\u5b58\u5728non-trivial default constructor 2.\u662f\u5426\u5b58\u5728non-trivial copy constructor 3.\u662f\u5426\u5b58\u5728non-trivial assignment operator 4.\u662f\u5426\u5b58\u5728non-trivial destructor struct __true_type { }; struct __false_type { }; template <class _Tp> struct __type_traits { typedef __false_type has_trivial_default_constructor; typedef __false_type has_trivial_copy_constructor; typedef __false_type has_trivial_assignment_operator; typedef __false_type has_trivial_destructor; }; template <> struct __type_traits<int> { typedef __true_type has_trivial_default_constructor; typedef __true_type has_trivial_copy_constructor; typedef __true_type has_trivial_assignment_operator; typedef __true_type has_trivial_destructor; }; template <> struct __type_traits<char> { typedef __true_type has_trivial_default_constructor; typedef __true_type has_trivial_copy_constructor; typedef __true_type has_trivial_assignment_operator; typedef __true_type has_trivial_destructor; }; \u504f\u7279\u5316\u7248\u672c template <class _Tp> struct __type_traits<_Tp*> { typedef __true_type has_trivial_default_constructor; typedef __true_type has_trivial_copy_constructor; typedef __true_type has_trivial_assignment_operator; typedef __true_type has_trivial_destructor; typedef __true_type is_POD_type; }; \u7279\u5316\u7248\u672c\uff0c\u6bd4\u5982\u81ea\u5b9a\u4e49\u7c7b\u578b struct __type_traits<Shape> { typedef __false_type has_trivial_default_constructor; typedef __true_type has_trivial_copy_constructor; typedef __true_type has_trivial_assignment_operator; typedef __true_type has_trivial_destructor; typedef __true_type is_POD_type; }; \u5047\u8bbe\u73b0\u5728\u7528\u4e2a\u6a21\u677f\u51fd\u6570fun\u9700\u8981\u6839\u636e\u7c7b\u578bT\u662f\u5426\u6709non-trivial constructor\u6765\u8fdb\u884c\u4e0d\u540c\u7684\u64cd\u4f5c\uff0c\u53ef\u4ee5\u8fd9\u6837\u6765\u5b9e\u73b0\uff1a template<class T> void fun() { typedef typename __type_traits<T>::has_trivial_constructor _Trivial_constructor __fun(_Trivial_constructor()); // \u6839\u636e\u5f97\u5230\u7684_Trivial_constructor\u6765\u8c03\u7528\u76f8\u5e94\u7684\u51fd\u6570 } // \u4e24\u4e2a\u91cd\u8f7d\u7684\u51fd\u6570 void _fun(_true_type) { cout<<\"fun(_true_type)called\"<<endl; } void _fun(_false_type) { cout<<\"fun(_false_type) called\"<<endl; } //\u6d4b\u8bd5\u4ee3\u7801 int main() { fun<char>(); fun<int>(); fun<char *>(); fun<double>(); }","title":"Type Traits"},{"location":"C%2B%2B/Utils/","text":"\u51fd\u6570\u7684\u8fd4\u56de\u503c\u548c\u4e34\u65f6\u5bf9\u8c61 \u4f20\u5f15\u7528\u548c\u8fd4\u56de\u5f15\u7528\uff0c\u5c06\u53c2\u6570\u58f0\u660e\u4e3a\u5f15\u7528\u662f\u4e3a\u4e86\u63d0\u9ad8\u6548\u7387\uff0c\u8fd4\u56de\u503c\u5982\u679c\u662f\u4e34\u65f6\u5bf9\u8c61\u5219\u4e0d\u80fd\u8fd4\u56de\u5f15\u7528\u3002\u4e0d\u8981\u8fd4\u56de\u6307\u5411\u5c40\u90e8\u53d8\u91cf\u6216\u8005\u4e34\u65f6\u5bf9\u8c61\u7684\u5f15\u7528\u3002 this this\u6307\u9488\u662f\u7a7a\u7684\u76f8\u5f53\u4e8e\u6210\u5458\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662fNULL\uff0c\u90a3\u4e48\u53ea\u8981\u6210\u5458\u51fd\u6570\u6ca1\u6709\u4f7f\u7528\u5230\u6210\u5458\u53d8\u91cf\uff0c\u4e5f\u662f\u53ef\u4ee5\u6b63\u5e38\u8c03\u7528\u6210\u5458\u51fd\u6570\u3002 \u9759\u6001\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u4f7f\u7528 this \u6307\u9488\uff0c\u56e0\u4e3a\u9759\u6001\u6210\u5458\u51fd\u6570\u76f8\u5f53\u4e8e\u662f\u5171\u4eab\u7684\u53d8\u91cf\uff0c\u4e0d\u5c5e\u4e8e\u67d0\u4e2a\u5bf9\u8c61\u7684\u53d8\u91cf\u3002","title":"Utils"},{"location":"C%2B%2B/Utils/#_1","text":"\u4f20\u5f15\u7528\u548c\u8fd4\u56de\u5f15\u7528\uff0c\u5c06\u53c2\u6570\u58f0\u660e\u4e3a\u5f15\u7528\u662f\u4e3a\u4e86\u63d0\u9ad8\u6548\u7387\uff0c\u8fd4\u56de\u503c\u5982\u679c\u662f\u4e34\u65f6\u5bf9\u8c61\u5219\u4e0d\u80fd\u8fd4\u56de\u5f15\u7528\u3002\u4e0d\u8981\u8fd4\u56de\u6307\u5411\u5c40\u90e8\u53d8\u91cf\u6216\u8005\u4e34\u65f6\u5bf9\u8c61\u7684\u5f15\u7528\u3002","title":"\u51fd\u6570\u7684\u8fd4\u56de\u503c\u548c\u4e34\u65f6\u5bf9\u8c61"},{"location":"C%2B%2B/Utils/#this","text":"this\u6307\u9488\u662f\u7a7a\u7684\u76f8\u5f53\u4e8e\u6210\u5458\u51fd\u6570\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662fNULL\uff0c\u90a3\u4e48\u53ea\u8981\u6210\u5458\u51fd\u6570\u6ca1\u6709\u4f7f\u7528\u5230\u6210\u5458\u53d8\u91cf\uff0c\u4e5f\u662f\u53ef\u4ee5\u6b63\u5e38\u8c03\u7528\u6210\u5458\u51fd\u6570\u3002 \u9759\u6001\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u4f7f\u7528 this \u6307\u9488\uff0c\u56e0\u4e3a\u9759\u6001\u6210\u5458\u51fd\u6570\u76f8\u5f53\u4e8e\u662f\u5171\u4eab\u7684\u53d8\u91cf\uff0c\u4e0d\u5c5e\u4e8e\u67d0\u4e2a\u5bf9\u8c61\u7684\u53d8\u91cf\u3002","title":"this"},{"location":"C%2B%2B/class%E4%B9%8B%E9%97%B4%E7%9A%84%E5%87%A0%E7%A7%8D%E5%85%B3%E7%B3%BB/","text":"\u7c7b\u7684\u7ec4\u5408 \u7c7bA\u5177\u6709\u7c7bB\u7684\u5c5e\u6027 class Person { public: Person(int _age, string _name) :age(_age), name(_name) {} ~Person() {}; void print() { cout << name<<\" \" << age << endl; } private: int age; string name; }; class Teacher { public: Teacher(Person* _person) :person(_person) {} ~Teacher() {}; void print() { this->person->print(); } private: Person* person; }; int main() { Person p(40, \"lisan\"); Teacher teacher(&p); teacher.print(); system(\"pause\"); return 0; }","title":"Class\u4e4b\u95f4\u7684\u51e0\u79cd\u5173\u7cfb"},{"location":"C%2B%2B/class%E4%B9%8B%E9%97%B4%E7%9A%84%E5%87%A0%E7%A7%8D%E5%85%B3%E7%B3%BB/#_1","text":"\u7c7bA\u5177\u6709\u7c7bB\u7684\u5c5e\u6027 class Person { public: Person(int _age, string _name) :age(_age), name(_name) {} ~Person() {}; void print() { cout << name<<\" \" << age << endl; } private: int age; string name; }; class Teacher { public: Teacher(Person* _person) :person(_person) {} ~Teacher() {}; void print() { this->person->print(); } private: Person* person; }; int main() { Person p(40, \"lisan\"); Teacher teacher(&p); teacher.print(); system(\"pause\"); return 0; }","title":"\u7c7b\u7684\u7ec4\u5408"},{"location":"C%2B%2B/const/","text":"C++\u4e2d\u7684const \u975e\u7c7b\u6210\u5458\u7684const \u2460const\u53d8\u91cf\u9ed8\u8ba4\u662f\u5185\u90e8\u8fde\u63a5\u7684\uff0c\u56e0\u6b64\u5728\u4e0d\u540c\u7684\u7f16\u8bd1\u5355\u5143\u4e2d\u53ef\u4ee5\u6709\u540c\u540d\u7684const \u53d8\u91cf\u5b9a\u4e49\u3002 \u2461\u7f16\u8bd1\u65f6\u5e38\u91cf\uff0c\u56e0\u6b64\u53ef\u4ee5\u50cf#define\u4e00\u6837\u4f7f\u7528\uff0c\u800c\u4e14\u56e0\u4e3a\u4e0a\u9762\u4e00\u70b9\uff0c\u53ef\u4ee5\u5728\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49const\u53d8\u91cf\uff0c\u5305\u542b\u7684\u4e0d\u540c\u7684cpp\u6587\u4ef6\uff08\u7f16\u8bd1\u5355\u5143\uff09\u4e2d\u4f7f\u7528\u800c\u4e0d\u5f15\u8d77\u547d\u540d\u51b2\u7a81\u3002 \u2462\u7f16\u8bd1\u5668\u9ed8\u8ba4\u4e0d\u4e3aconst\u53d8\u91cf\u5206\u914d\u5185\u5b58\uff0c\u9664\u975e\uff1a1. \u4f7f\u7528 extern \u7533\u660e\uff0c 2\uff1a\u7a0b\u5e8f\u4e2d\u6709\u5f15\u7528const \u53d8\u91cf\u7684\u5730\u5740\u3002 \u2463c++\u4e2d\u4e34\u65f6\u5bf9\u8c61/\u5185\u7f6e\u53d8\u91cf\u9ed8\u8ba4\u5177\u6709const\u5c5e\u6027\u3002 \u7c7b\u4e2d\u7684const \u2460\u4e0ec\u8bed\u8a00\u4e2d\u7684const\u4e00\u6837\uff0c\u53ea\u662f\u8fd0\u884c\u65f6\u5e38\u91cf\uff0c\u4e0d\u80fd\u4f5c\u4e3a\u6570\u7ec4\u7ef4\u6570\u4f7f\u7528\uff0c\u5373\u4e0d\u80fd\u53d6\u4ee3#define\u3002 \u5728\u7c7b\u4e2d\u4f7f\u7528\u4e0b\u9762\u4e24\u79cd\u65b9\u5f0f\u53d6\u4ee3#define\uff1a 1\uff1astatic const... 2 : enum{....}//enum \u4e0d\u5360\u5b58\u50a8\u7a7a\u95f4\u3002 \u2461 \u7c7b\u4e2d\u7684const \u53d8\u91cf\u5360\u7528\u5b58\u50a8\u7a7a\u95f4 \u3002 \u2462 \u7c7b\u4e2d\u7684const\u6210\u5458\u53d8\u91cf\u9700\u8981\u5728\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5217\u8868\u4e2d\u521d\u59cb\u5316 \u3002 class CExample { public: CExample():m_a(1),m_b(2){/*m_a = 1; compile error*/} CExample(const CExample&c):m_a(1){/*m_a = 1; compile error*/} ~CExample(){} private: const int m_a; int m_b; }; \u7c7b\u4e2d\u7684const\u6210\u5458\u53d8\u91cf\u90fd\u8981\u653e\u5728\u521d\u59cb\u5316\u5217\u8868\u4e2d\u521d\u59cb\u5316\u3002 \u2463 const \u5bf9\u8c61 \uff1a\u5728\u8be5\u5bf9\u8c61\u751f\u547d\u5468\u671f\u5185\uff0c \u5fc5\u987b\u4fdd\u8bc1\u6ca1\u6709\u4efb\u4f55\u6210\u5458\u53d8\u91cf\u88ab\u6539\u53d8 \u3002 const\u5bf9\u8c61\u53ea\u80fd\u8c03\u7528const\u6210\u5458\u51fd\u6570 \u3002 \u2464 const\u6210\u5458\u51fd\u6570 \uff1a void fun() const ... \u4e0d\u4ec5 \u80fd\u88abconst\u5bf9\u8c61\u8c03\u7528\uff0c\u4e5f\u80fd\u88ab\u975econst\u5bf9\u8c61\u8c03\u7528 \uff0c\u56e0\u6b64\uff0c\u5982\u679c\u786e\u8ba4\u4e00\u4e2a\u4efb\u4f55\u6210\u5458\u51fd\u6570\u4e0d\u6539\u53d8\u4efb\u4f55\u6210\u5458\u53d8\u91cf\uff0c\u5e94\u8be5\u4e60\u60ef\u6027\u5c06\u8be5\u51fd\u6570\u5b9a\u4e49\u6210const\u7c7b\u578b\u3002 const\u548c#define\u7684\u533a\u522b const\u5206\u914d\u5185\u5b58\u7684\u65f6\u673a\uff0c\u662f\u7f16\u8bd1\u5668\u7f16\u8bd1\u671f\u95f4\uff0c\u4e0e#define\u76f8\u540c C++\u4e2d\u7684const\u5e38\u91cf\u7c7b\u4f3c\u4e8e\u5b8f\u5b9a\u4e49#define const int c=5 \u7b49\u4ef7\u4e8e #define c 5 1) \u7f16\u8bd1\u5668\u5904\u7406\u65b9\u5f0f\u4e0d\u540c define\u5b8f\u662f\u5728\u9884\u5904\u7406\u9636\u6bb5\u5c55\u5f00\u3002 const\u5e38\u91cf\u662f\u7f16\u8bd1\u8fd0\u884c\u9636\u6bb5\u4f7f\u7528\u3002 2) \u7c7b\u578b\u548c\u5b89\u5168\u68c0\u67e5\u4e0d\u540c define\u5b8f\u6ca1\u6709\u7c7b\u578b\uff0c\u4e0d\u505a\u4efb\u4f55\u7c7b\u578b\u68c0\u67e5 \uff0c\u4ec5\u4ec5\u662f\u5c55\u5f00\u3002 const\u5e38\u91cf\u6709\u5177\u4f53\u7684\u7c7b\u578b\uff0c\u5728\u7f16\u8bd1\u9636\u6bb5\u4f1a\u6267\u884c\u7c7b\u578b\u68c0\u67e5 \u3002 \u6ce8\u610f\uff1a\u5c3d\u91cf\u4ee5const\u66ff\u6362#define \u9876\u5c42const\u4e0e\u5e95\u5c42const\uff1f \u6307\u5411\u5e38\u91cf\u7684\u6307\u9488\uff1a \u4e0d\u80fd\u6539\u53d8\u6307\u5411\u7684\u5185\u5bb9\u3002const\u653e\u5728\u7c7b\u578b\u540d\u524d\u540e\u90fd\u53ef\u4ee5\uff0cconst int \u548c int const\u662f\u7b49\u4ef7\u7684\u3002\u58f0\u660e\u6307\u5411\u5e38\u91cf\u7684\u6307\u9488\u4e5f\u5c31\u662f \u5e95\u5c42const \u3002 \u4f46\u662f\u6307\u5411\u5e38\u91cf\u7684\u6307\u9488\u4e0d\u4ee3\u8868\u6307\u5411\u7684\u5185\u5bb9\u4e00\u5b9a\u662f\u5e38\u91cf\uff0c\u53ea\u662f\u4e0d\u80fd\u6539\u53d8\u6307\u5411\u7684\u5185\u5bb9\u3002 int num = 1; int const *p_num = &num; const int* p_num = &num; \u6307\u9488\u5e38\u91cf\uff1a \u6307\u9488\u672c\u8eab\u662f\u5e38\u91cf\uff0c \u58f0\u660e\u65f6\u5fc5\u987b\u521d\u59cb\u5316 \uff0c\u5b58\u50a8\u7684\u5730\u5740\u4e0d\u80fd\u6539\u53d8\u3002\u58f0\u660e\u65f6const\u5fc5\u987b\u653e\u5728\u6307\u9488\u7b26\u53f7 \u540e\u9762\u3002\u58f0\u660e\u5e38\u91cf\u6307\u9488\u5c31\u662f \u9876\u5c42const *\u3002 int num = 1; int *const p_num = &num; //\u9876\u5c42const \"effective c++\"\u7b2c\u4e09\u6761\u8bb2\u5230\uff1a \u53ea\u9700\u8981\u5224\u65adconst\u662f\u5728 * \u7684\u5de6\u8fb9\u8fd8\u662f\u53f3\u8fb9\u5373\u53ef\u3002\u5de6\u8fb9\u5219\u662f\u4fee\u9970\u88ab\u6307\u7269\uff0c\u5373\u88ab\u6307\u7269\u662f\u5e38\u91cf\uff0c\u4e0d\u53ef\u4ee5\u4fee\u6539\u5b83\u7684\u503c\uff1b\u53f3\u8fb9\u5219\u662f\u4fee\u9970\u6307\u9488\uff0c\u5373\u6307\u9488\u662f\u5e38\u91cf\uff0c\u4e0d\u53ef\u4ee5\u4fee\u6539\u5b83\u7684\u6307\u5411\uff1b\u5728\u5de6\u53f3\u4e24\u8fb9\uff0c\u5219\u88ab\u6307\u7269\u548c\u6307\u9488\u90fd\u662f\u5e38\u91cf\uff0c\u90fd\u4e0d\u53ef\u4ee5\u4fee\u6539\u3002 const\u5728 * \u5de6\u8fb9\uff0c\u53d8\u91cf\u4e3aconst const\u5728 * \u53f3\u8fb9\uff0c\u6307\u9488\u4e3aconst int *p =&x;//p\u4e3a\u6307\u9488,\u6307\u9488\u6307\u5411int\u7c7b\u578b x const int *p = &x; //\u6307\u9488p,\u6307\u9488\u6307\u5411const int\u7c7b\u578b\u7684x int *const p = &x; //\u6307\u9488\u662fconst p \u5730\u5740\u4e3a\u5e38\u91cf\uff0c\u8bf4\u660e\u6307\u9488\u6307\u5411\u7684\u5bf9\u8c61\u4e0d\u80fd\u6539\u53d8 const int *const p =&x; //\u6307\u9488\u662fconst p\uff0c\u6307\u5411cosnt int\u7c7b\u578b\u7684x \u51fd\u6570\u4f20\u9012\u4e2d\u7684const\uff1a \u666e\u901a\u5f62\u53c2 \u52a0\u4e0d\u52a0const\u9650\u5b9a\u7b26\u5bf9\u5b9e\u53c2\u6ca1\u6709\u5f71\u54cd\uff0c \u5f15\u7528\u5f62\u53c2\u548c\u6307\u9488\u5f62\u53c2 \u524d\u9762\u6ca1\u6709const\u9650\u5b9a\u7b26\u65f6\uff0c\u5b9e\u53c2\u5fc5\u987b\u662f\u975econst\u7684\uff0c\u800c\u524d\u9762\u6709const\u9650\u5b9a\u7b26\u65f6\u5bf9\u5b9e\u53c2\u4e5f\u6ca1\u6709\u4ec0\u4e48\u5f71\u54cd\u3002 \u539f\u56e0\u5728\u4e8e\u5b9e\u53c2\u7684\u4f20\u9012\u65b9\u5f0f\u4e0d\u540c\uff0c\u51fd\u6570\u4e2d\u7684\u5f62\u53c2\u662f\u666e\u901a\u5f62\u53c2\u7684\u65f6\uff0c\u51fd\u6570\u53ea\u662f\u64cd\u7eb5\u7684\u5b9e\u53c2\u7684\u526f\u672c\uff0c\u800c\u65e0\u6cd5\u53bb\u4fee\u6539\u5b9e\u53c2\uff0c\u5b9e\u53c2\u4f1a\u60f3\uff0c\u4f60\u5f62\u53c2\u53cd\u6b63\u6539\u53d8\u4e0d\u4e86\u6211\u7684\u503c\uff0c\u90a3\u4e48\u4f60\u6709\u6ca1\u6709const\u8fd8\u6709\u4ec0\u4e48\u610f\u4e49\u5417\uff1f\u5f15\u7528\u5f62\u53c2\u548c\u6307\u9488\u5f62\u53c2\u5c31\u4e0b\u4e0d\u540c\u4e86\uff0c\u51fd\u6570\u662f\u5bf9\u5b9e\u53c2\u76f4\u63a5\u64cd\u7eb5\uff0c\u6ca1\u6709const\u7684\u5f62\u53c2\u65f6\u5b9e\u53c2\u7684\u503c\u662f\u53ef\u4ee5\u6539\u53d8\u7684\u3002 const\u6210\u5458\u51fd\u6570 \u5728\u7c7b\u7684\u6210\u5458\u51fd\u6570\u540e\u9762\u52a0\u4e0aconst\uff0c\u8868\u660e\u8fd9\u4e2a\u51fd\u6570\u4e0d\u4f1a\u5bf9\u8fd9\u4e2a\u7c7b\u5bf9\u8c61\u7684\u6570\u636e\u6210\u5458\u4f5c\u4efb\u4f55\u6539\u53d8\u3002 \u8bbe\u8ba1\u7c7b\u65f6\u7684\u4e00\u4e2a\u539f\u5219\uff0c \u5bf9\u4e0d\u6539\u53d8\u6570\u636e\u6210\u5458\u7684\u6210\u5458\u51fd\u6570\u90fd\u8981\u5728\u540e\u9762\u52a0\u4e0aconst \u3002 \u6240\u4ee5 const \u5173\u952e\u5b57\u5bf9\u6210\u5458\u51fd\u6570\u7684\u884c\u4e3a\u4f5c\u4e86\u66f4\u52a0\u660e\u786e\u7684\u9650\u5b9a\uff1a \uff081\uff09\u6709 const \u4fee\u9970\u7684\u6210\u5458\u51fd\u6570\uff08\u6307 const \u653e\u5728\u51fd\u6570\u53c2\u6570\u8868\u7684\u540e\u9762\uff0c\u800c\u4e0d\u662f\u5728\u51fd\u6570\u524d\u9762\u6216\u8005\u53c2\u6570\u8868\u5185\uff09\uff0c\u53ea\u80fd\u8bfb\u53d6\u6570\u636e\u6210\u5458\uff0c\u4e0d\u80fd\u6539\u53d8\u6570\u636e\u6210\u5458\uff1b\u6ca1\u6709 const \u4fee\u9970\u7684\u6210\u5458\u51fd\u6570\uff0c\u5bf9\u6570\u636e\u6210\u5458\u5219\u662f\u53ef\u8bfb\u53ef\u5199\u7684\u3002 \uff082\uff09\u9664\u6b64\u4e4b\u5916\uff0c\u5728\u7c7b\u7684\u6210\u5458\u51fd\u6570\u540e\u9762\u52a0 const \u8fd8\u6709\u4ec0\u4e48\u597d\u5904\u5462\uff1f\u90a3\u5c31\u662f\u5e38\u91cf\uff08\u5373 const\uff09\u5bf9\u8c61\u53ef\u4ee5\u8c03\u7528 const \u6210\u5458\u51fd\u6570\uff0c\u800c\u4e0d\u80fd\u8c03\u7528\u975econst\u4fee\u9970\u7684\u51fd\u6570\u3002 \u6ce8\u610f\uff1a \u4e24\u4e2a\u6210\u5458\u51fd\u6570\u5982\u679c\u53ea\u662f\u5e38\u91cf\u6027\u4e0d\u540c\uff0c\u662f\u53ef\u4ee5\u88ab\u91cd\u8f7d\u7684\uff0c\u7531\u7c7b\u5bf9\u8c61\u7684\u5e38\u91cf\u6027\u51b3\u5b9a\u8c03\u7528\u54ea\u4e00\u4e2a\u51fd\u6570\u3002 class A { public: A(int N = 0); void Fun(); private: int n; }; A::A(int N):n(N){} void A::Fun() { cout << n << endl; } int _tmain(int argc, _TCHAR* argv[]) { A a; a.Fun(); const A &b = a; b.Fun();//const\u5f15\u7528\u7684\u5bf9\u8c61\u8c03\u7528\u975econst\u6210\u5458\u51fd\u6570 //const A a; //a.Fun();//const\u5bf9\u8c61\u8c03\u7528\u975econst\u6210\u5458\u51fd\u6570 cin.get(); return 0; } \u5f53\u4f7f\u7528const\u5bf9\u8c61\u8c03\u7528\u975econst\u6210\u5458\u51fd\u6570\u65f6\u7f16\u8bd1\u4f1a\u62a5\u9519\uff1aerror C2662: 'A::Fun' : cannot convert 'this' pointer from 'const A' to 'A &' \u62a5\u9519\u539f\u56e0\uff1a\u56e0\u4e3aconst\u5bf9\u8c61\u5728\u8c03\u7528\u6210\u5458\u51fd\u6570\u65f6\u4f1a\u9690\u542b\u7684\u628a\u5b9e\u53c2\u628a\u4e2d this\u4fee\u6539\u6210const class * const this\uff0c\u4ee5\u5bfc\u81f4\u975econst\u6210\u5458\u51fd\u6570\u5728\u63a5\u6536\u65f6\u8fd8\u662f\u4f7f\u7528\u4e86class const this\u63a5\u6536\uff0c\u7ed3\u679c\u5c31\u662f\u628aconst\u7684\u6307\u9488\u8d4b\u7ed9\u975econst\u7684\u6307\u9488 \u4fee\u6b63\u65b9\u6cd5\uff1a\u4ee5\u524d\u9519\u8bef\u53ea\u9700\u5728\u5bf9\u8c61\u7684\u6210\u5458\u51fd\u6570\u540e\u9762\u52a0\u4e0aconst\u5373\u53ef > \u7c7b\u4e2d\u7684const\u6210\u5458\u53d8\u91cf\u90fd\u8981\u653e\u5728\u521d\u59cb\u5316\u5217\u8868\u4e4b\u4e2d\u8fdb\u884c \u3000\u3000> const\u6570\u636e\u6210\u5458 \u3000\u3000> \u5f15\u7528\u6570\u636e\u6210\u5458 \u3000\u3000> \u5bf9\u8c61\u6570\u636e\u6210\u5458\uff08\u5185\u7f6e\u7c7b\uff09 const\u6210\u5458\u51fd\u6570 \u3000\u3000> void print() const => const \u7c7b\u540d * const this \u3000\u3000> \u5728\u5176\u5185\u90e8\u662f\u4e0d\u80fd\u4fee\u6539\u6570\u636e\u6210\u5458 \u3000\u3000> \u4e5f\u4e0d\u80fd\u8c03\u7528\u975econst\u6210\u5458\u51fd\u6570 \u3000\u3000> const\u5bf9\u8c61\u53ea\u80fd\u8c03\u7528const\u6210\u5458\u51fd\u6570,\u5fc5\u987b\u8981\u63d0\u4f9b\u4e00\u4e2aconst\u7248\u672c\u7684\u6210\u5458\u51fd\u6570 Reference https://www.cnblogs.com/cthon/p/9166715.html","title":"Const"},{"location":"C%2B%2B/const/#cconst","text":"\u975e\u7c7b\u6210\u5458\u7684const \u2460const\u53d8\u91cf\u9ed8\u8ba4\u662f\u5185\u90e8\u8fde\u63a5\u7684\uff0c\u56e0\u6b64\u5728\u4e0d\u540c\u7684\u7f16\u8bd1\u5355\u5143\u4e2d\u53ef\u4ee5\u6709\u540c\u540d\u7684const \u53d8\u91cf\u5b9a\u4e49\u3002 \u2461\u7f16\u8bd1\u65f6\u5e38\u91cf\uff0c\u56e0\u6b64\u53ef\u4ee5\u50cf#define\u4e00\u6837\u4f7f\u7528\uff0c\u800c\u4e14\u56e0\u4e3a\u4e0a\u9762\u4e00\u70b9\uff0c\u53ef\u4ee5\u5728\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49const\u53d8\u91cf\uff0c\u5305\u542b\u7684\u4e0d\u540c\u7684cpp\u6587\u4ef6\uff08\u7f16\u8bd1\u5355\u5143\uff09\u4e2d\u4f7f\u7528\u800c\u4e0d\u5f15\u8d77\u547d\u540d\u51b2\u7a81\u3002 \u2462\u7f16\u8bd1\u5668\u9ed8\u8ba4\u4e0d\u4e3aconst\u53d8\u91cf\u5206\u914d\u5185\u5b58\uff0c\u9664\u975e\uff1a1. \u4f7f\u7528 extern \u7533\u660e\uff0c 2\uff1a\u7a0b\u5e8f\u4e2d\u6709\u5f15\u7528const \u53d8\u91cf\u7684\u5730\u5740\u3002 \u2463c++\u4e2d\u4e34\u65f6\u5bf9\u8c61/\u5185\u7f6e\u53d8\u91cf\u9ed8\u8ba4\u5177\u6709const\u5c5e\u6027\u3002 \u7c7b\u4e2d\u7684const \u2460\u4e0ec\u8bed\u8a00\u4e2d\u7684const\u4e00\u6837\uff0c\u53ea\u662f\u8fd0\u884c\u65f6\u5e38\u91cf\uff0c\u4e0d\u80fd\u4f5c\u4e3a\u6570\u7ec4\u7ef4\u6570\u4f7f\u7528\uff0c\u5373\u4e0d\u80fd\u53d6\u4ee3#define\u3002 \u5728\u7c7b\u4e2d\u4f7f\u7528\u4e0b\u9762\u4e24\u79cd\u65b9\u5f0f\u53d6\u4ee3#define\uff1a 1\uff1astatic const... 2 : enum{....}//enum \u4e0d\u5360\u5b58\u50a8\u7a7a\u95f4\u3002 \u2461 \u7c7b\u4e2d\u7684const \u53d8\u91cf\u5360\u7528\u5b58\u50a8\u7a7a\u95f4 \u3002 \u2462 \u7c7b\u4e2d\u7684const\u6210\u5458\u53d8\u91cf\u9700\u8981\u5728\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5217\u8868\u4e2d\u521d\u59cb\u5316 \u3002 class CExample { public: CExample():m_a(1),m_b(2){/*m_a = 1; compile error*/} CExample(const CExample&c):m_a(1){/*m_a = 1; compile error*/} ~CExample(){} private: const int m_a; int m_b; }; \u7c7b\u4e2d\u7684const\u6210\u5458\u53d8\u91cf\u90fd\u8981\u653e\u5728\u521d\u59cb\u5316\u5217\u8868\u4e2d\u521d\u59cb\u5316\u3002 \u2463 const \u5bf9\u8c61 \uff1a\u5728\u8be5\u5bf9\u8c61\u751f\u547d\u5468\u671f\u5185\uff0c \u5fc5\u987b\u4fdd\u8bc1\u6ca1\u6709\u4efb\u4f55\u6210\u5458\u53d8\u91cf\u88ab\u6539\u53d8 \u3002 const\u5bf9\u8c61\u53ea\u80fd\u8c03\u7528const\u6210\u5458\u51fd\u6570 \u3002 \u2464 const\u6210\u5458\u51fd\u6570 \uff1a void fun() const ... \u4e0d\u4ec5 \u80fd\u88abconst\u5bf9\u8c61\u8c03\u7528\uff0c\u4e5f\u80fd\u88ab\u975econst\u5bf9\u8c61\u8c03\u7528 \uff0c\u56e0\u6b64\uff0c\u5982\u679c\u786e\u8ba4\u4e00\u4e2a\u4efb\u4f55\u6210\u5458\u51fd\u6570\u4e0d\u6539\u53d8\u4efb\u4f55\u6210\u5458\u53d8\u91cf\uff0c\u5e94\u8be5\u4e60\u60ef\u6027\u5c06\u8be5\u51fd\u6570\u5b9a\u4e49\u6210const\u7c7b\u578b\u3002 const\u548c#define\u7684\u533a\u522b const\u5206\u914d\u5185\u5b58\u7684\u65f6\u673a\uff0c\u662f\u7f16\u8bd1\u5668\u7f16\u8bd1\u671f\u95f4\uff0c\u4e0e#define\u76f8\u540c C++\u4e2d\u7684const\u5e38\u91cf\u7c7b\u4f3c\u4e8e\u5b8f\u5b9a\u4e49#define const int c=5 \u7b49\u4ef7\u4e8e #define c 5 1) \u7f16\u8bd1\u5668\u5904\u7406\u65b9\u5f0f\u4e0d\u540c define\u5b8f\u662f\u5728\u9884\u5904\u7406\u9636\u6bb5\u5c55\u5f00\u3002 const\u5e38\u91cf\u662f\u7f16\u8bd1\u8fd0\u884c\u9636\u6bb5\u4f7f\u7528\u3002 2) \u7c7b\u578b\u548c\u5b89\u5168\u68c0\u67e5\u4e0d\u540c define\u5b8f\u6ca1\u6709\u7c7b\u578b\uff0c\u4e0d\u505a\u4efb\u4f55\u7c7b\u578b\u68c0\u67e5 \uff0c\u4ec5\u4ec5\u662f\u5c55\u5f00\u3002 const\u5e38\u91cf\u6709\u5177\u4f53\u7684\u7c7b\u578b\uff0c\u5728\u7f16\u8bd1\u9636\u6bb5\u4f1a\u6267\u884c\u7c7b\u578b\u68c0\u67e5 \u3002 \u6ce8\u610f\uff1a\u5c3d\u91cf\u4ee5const\u66ff\u6362#define","title":"C++\u4e2d\u7684const"},{"location":"C%2B%2B/const/#constconst","text":"\u6307\u5411\u5e38\u91cf\u7684\u6307\u9488\uff1a \u4e0d\u80fd\u6539\u53d8\u6307\u5411\u7684\u5185\u5bb9\u3002const\u653e\u5728\u7c7b\u578b\u540d\u524d\u540e\u90fd\u53ef\u4ee5\uff0cconst int \u548c int const\u662f\u7b49\u4ef7\u7684\u3002\u58f0\u660e\u6307\u5411\u5e38\u91cf\u7684\u6307\u9488\u4e5f\u5c31\u662f \u5e95\u5c42const \u3002 \u4f46\u662f\u6307\u5411\u5e38\u91cf\u7684\u6307\u9488\u4e0d\u4ee3\u8868\u6307\u5411\u7684\u5185\u5bb9\u4e00\u5b9a\u662f\u5e38\u91cf\uff0c\u53ea\u662f\u4e0d\u80fd\u6539\u53d8\u6307\u5411\u7684\u5185\u5bb9\u3002 int num = 1; int const *p_num = &num; const int* p_num = &num; \u6307\u9488\u5e38\u91cf\uff1a \u6307\u9488\u672c\u8eab\u662f\u5e38\u91cf\uff0c \u58f0\u660e\u65f6\u5fc5\u987b\u521d\u59cb\u5316 \uff0c\u5b58\u50a8\u7684\u5730\u5740\u4e0d\u80fd\u6539\u53d8\u3002\u58f0\u660e\u65f6const\u5fc5\u987b\u653e\u5728\u6307\u9488\u7b26\u53f7 \u540e\u9762\u3002\u58f0\u660e\u5e38\u91cf\u6307\u9488\u5c31\u662f \u9876\u5c42const *\u3002 int num = 1; int *const p_num = &num; //\u9876\u5c42const \"effective c++\"\u7b2c\u4e09\u6761\u8bb2\u5230\uff1a \u53ea\u9700\u8981\u5224\u65adconst\u662f\u5728 * \u7684\u5de6\u8fb9\u8fd8\u662f\u53f3\u8fb9\u5373\u53ef\u3002\u5de6\u8fb9\u5219\u662f\u4fee\u9970\u88ab\u6307\u7269\uff0c\u5373\u88ab\u6307\u7269\u662f\u5e38\u91cf\uff0c\u4e0d\u53ef\u4ee5\u4fee\u6539\u5b83\u7684\u503c\uff1b\u53f3\u8fb9\u5219\u662f\u4fee\u9970\u6307\u9488\uff0c\u5373\u6307\u9488\u662f\u5e38\u91cf\uff0c\u4e0d\u53ef\u4ee5\u4fee\u6539\u5b83\u7684\u6307\u5411\uff1b\u5728\u5de6\u53f3\u4e24\u8fb9\uff0c\u5219\u88ab\u6307\u7269\u548c\u6307\u9488\u90fd\u662f\u5e38\u91cf\uff0c\u90fd\u4e0d\u53ef\u4ee5\u4fee\u6539\u3002 const\u5728 * \u5de6\u8fb9\uff0c\u53d8\u91cf\u4e3aconst const\u5728 * \u53f3\u8fb9\uff0c\u6307\u9488\u4e3aconst int *p =&x;//p\u4e3a\u6307\u9488,\u6307\u9488\u6307\u5411int\u7c7b\u578b x const int *p = &x; //\u6307\u9488p,\u6307\u9488\u6307\u5411const int\u7c7b\u578b\u7684x int *const p = &x; //\u6307\u9488\u662fconst p \u5730\u5740\u4e3a\u5e38\u91cf\uff0c\u8bf4\u660e\u6307\u9488\u6307\u5411\u7684\u5bf9\u8c61\u4e0d\u80fd\u6539\u53d8 const int *const p =&x; //\u6307\u9488\u662fconst p\uff0c\u6307\u5411cosnt int\u7c7b\u578b\u7684x","title":"\u9876\u5c42const\u4e0e\u5e95\u5c42const\uff1f"},{"location":"C%2B%2B/const/#const","text":"\u666e\u901a\u5f62\u53c2 \u52a0\u4e0d\u52a0const\u9650\u5b9a\u7b26\u5bf9\u5b9e\u53c2\u6ca1\u6709\u5f71\u54cd\uff0c \u5f15\u7528\u5f62\u53c2\u548c\u6307\u9488\u5f62\u53c2 \u524d\u9762\u6ca1\u6709const\u9650\u5b9a\u7b26\u65f6\uff0c\u5b9e\u53c2\u5fc5\u987b\u662f\u975econst\u7684\uff0c\u800c\u524d\u9762\u6709const\u9650\u5b9a\u7b26\u65f6\u5bf9\u5b9e\u53c2\u4e5f\u6ca1\u6709\u4ec0\u4e48\u5f71\u54cd\u3002 \u539f\u56e0\u5728\u4e8e\u5b9e\u53c2\u7684\u4f20\u9012\u65b9\u5f0f\u4e0d\u540c\uff0c\u51fd\u6570\u4e2d\u7684\u5f62\u53c2\u662f\u666e\u901a\u5f62\u53c2\u7684\u65f6\uff0c\u51fd\u6570\u53ea\u662f\u64cd\u7eb5\u7684\u5b9e\u53c2\u7684\u526f\u672c\uff0c\u800c\u65e0\u6cd5\u53bb\u4fee\u6539\u5b9e\u53c2\uff0c\u5b9e\u53c2\u4f1a\u60f3\uff0c\u4f60\u5f62\u53c2\u53cd\u6b63\u6539\u53d8\u4e0d\u4e86\u6211\u7684\u503c\uff0c\u90a3\u4e48\u4f60\u6709\u6ca1\u6709const\u8fd8\u6709\u4ec0\u4e48\u610f\u4e49\u5417\uff1f\u5f15\u7528\u5f62\u53c2\u548c\u6307\u9488\u5f62\u53c2\u5c31\u4e0b\u4e0d\u540c\u4e86\uff0c\u51fd\u6570\u662f\u5bf9\u5b9e\u53c2\u76f4\u63a5\u64cd\u7eb5\uff0c\u6ca1\u6709const\u7684\u5f62\u53c2\u65f6\u5b9e\u53c2\u7684\u503c\u662f\u53ef\u4ee5\u6539\u53d8\u7684\u3002","title":"\u51fd\u6570\u4f20\u9012\u4e2d\u7684const\uff1a"},{"location":"C%2B%2B/const/#const_1","text":"\u5728\u7c7b\u7684\u6210\u5458\u51fd\u6570\u540e\u9762\u52a0\u4e0aconst\uff0c\u8868\u660e\u8fd9\u4e2a\u51fd\u6570\u4e0d\u4f1a\u5bf9\u8fd9\u4e2a\u7c7b\u5bf9\u8c61\u7684\u6570\u636e\u6210\u5458\u4f5c\u4efb\u4f55\u6539\u53d8\u3002 \u8bbe\u8ba1\u7c7b\u65f6\u7684\u4e00\u4e2a\u539f\u5219\uff0c \u5bf9\u4e0d\u6539\u53d8\u6570\u636e\u6210\u5458\u7684\u6210\u5458\u51fd\u6570\u90fd\u8981\u5728\u540e\u9762\u52a0\u4e0aconst \u3002 \u6240\u4ee5 const \u5173\u952e\u5b57\u5bf9\u6210\u5458\u51fd\u6570\u7684\u884c\u4e3a\u4f5c\u4e86\u66f4\u52a0\u660e\u786e\u7684\u9650\u5b9a\uff1a \uff081\uff09\u6709 const \u4fee\u9970\u7684\u6210\u5458\u51fd\u6570\uff08\u6307 const \u653e\u5728\u51fd\u6570\u53c2\u6570\u8868\u7684\u540e\u9762\uff0c\u800c\u4e0d\u662f\u5728\u51fd\u6570\u524d\u9762\u6216\u8005\u53c2\u6570\u8868\u5185\uff09\uff0c\u53ea\u80fd\u8bfb\u53d6\u6570\u636e\u6210\u5458\uff0c\u4e0d\u80fd\u6539\u53d8\u6570\u636e\u6210\u5458\uff1b\u6ca1\u6709 const \u4fee\u9970\u7684\u6210\u5458\u51fd\u6570\uff0c\u5bf9\u6570\u636e\u6210\u5458\u5219\u662f\u53ef\u8bfb\u53ef\u5199\u7684\u3002 \uff082\uff09\u9664\u6b64\u4e4b\u5916\uff0c\u5728\u7c7b\u7684\u6210\u5458\u51fd\u6570\u540e\u9762\u52a0 const \u8fd8\u6709\u4ec0\u4e48\u597d\u5904\u5462\uff1f\u90a3\u5c31\u662f\u5e38\u91cf\uff08\u5373 const\uff09\u5bf9\u8c61\u53ef\u4ee5\u8c03\u7528 const \u6210\u5458\u51fd\u6570\uff0c\u800c\u4e0d\u80fd\u8c03\u7528\u975econst\u4fee\u9970\u7684\u51fd\u6570\u3002 \u6ce8\u610f\uff1a \u4e24\u4e2a\u6210\u5458\u51fd\u6570\u5982\u679c\u53ea\u662f\u5e38\u91cf\u6027\u4e0d\u540c\uff0c\u662f\u53ef\u4ee5\u88ab\u91cd\u8f7d\u7684\uff0c\u7531\u7c7b\u5bf9\u8c61\u7684\u5e38\u91cf\u6027\u51b3\u5b9a\u8c03\u7528\u54ea\u4e00\u4e2a\u51fd\u6570\u3002 class A { public: A(int N = 0); void Fun(); private: int n; }; A::A(int N):n(N){} void A::Fun() { cout << n << endl; } int _tmain(int argc, _TCHAR* argv[]) { A a; a.Fun(); const A &b = a; b.Fun();//const\u5f15\u7528\u7684\u5bf9\u8c61\u8c03\u7528\u975econst\u6210\u5458\u51fd\u6570 //const A a; //a.Fun();//const\u5bf9\u8c61\u8c03\u7528\u975econst\u6210\u5458\u51fd\u6570 cin.get(); return 0; } \u5f53\u4f7f\u7528const\u5bf9\u8c61\u8c03\u7528\u975econst\u6210\u5458\u51fd\u6570\u65f6\u7f16\u8bd1\u4f1a\u62a5\u9519\uff1aerror C2662: 'A::Fun' : cannot convert 'this' pointer from 'const A' to 'A &' \u62a5\u9519\u539f\u56e0\uff1a\u56e0\u4e3aconst\u5bf9\u8c61\u5728\u8c03\u7528\u6210\u5458\u51fd\u6570\u65f6\u4f1a\u9690\u542b\u7684\u628a\u5b9e\u53c2\u628a\u4e2d this\u4fee\u6539\u6210const class * const this\uff0c\u4ee5\u5bfc\u81f4\u975econst\u6210\u5458\u51fd\u6570\u5728\u63a5\u6536\u65f6\u8fd8\u662f\u4f7f\u7528\u4e86class const this\u63a5\u6536\uff0c\u7ed3\u679c\u5c31\u662f\u628aconst\u7684\u6307\u9488\u8d4b\u7ed9\u975econst\u7684\u6307\u9488 \u4fee\u6b63\u65b9\u6cd5\uff1a\u4ee5\u524d\u9519\u8bef\u53ea\u9700\u5728\u5bf9\u8c61\u7684\u6210\u5458\u51fd\u6570\u540e\u9762\u52a0\u4e0aconst\u5373\u53ef > \u7c7b\u4e2d\u7684const\u6210\u5458\u53d8\u91cf\u90fd\u8981\u653e\u5728\u521d\u59cb\u5316\u5217\u8868\u4e4b\u4e2d\u8fdb\u884c \u3000\u3000> const\u6570\u636e\u6210\u5458 \u3000\u3000> \u5f15\u7528\u6570\u636e\u6210\u5458 \u3000\u3000> \u5bf9\u8c61\u6570\u636e\u6210\u5458\uff08\u5185\u7f6e\u7c7b\uff09 const\u6210\u5458\u51fd\u6570 \u3000\u3000> void print() const => const \u7c7b\u540d * const this \u3000\u3000> \u5728\u5176\u5185\u90e8\u662f\u4e0d\u80fd\u4fee\u6539\u6570\u636e\u6210\u5458 \u3000\u3000> \u4e5f\u4e0d\u80fd\u8c03\u7528\u975econst\u6210\u5458\u51fd\u6570 \u3000\u3000> const\u5bf9\u8c61\u53ea\u80fd\u8c03\u7528const\u6210\u5458\u51fd\u6570,\u5fc5\u987b\u8981\u63d0\u4f9b\u4e00\u4e2aconst\u7248\u672c\u7684\u6210\u5458\u51fd\u6570","title":"const\u6210\u5458\u51fd\u6570"},{"location":"C%2B%2B/const/#reference","text":"https://www.cnblogs.com/cthon/p/9166715.html","title":"Reference"},{"location":"C%2B%2B/static/","text":"Static \u7c7b\u7684\u9759\u6001\u6210\u5458\u662f\u6240\u6709\u5bf9\u8c61\u5171\u4eab\u7684\uff0c\u4e00\u5f00\u59cb\u5c31\u5206\u914d\u4e86\uff0c\u4ee5\u540e\u56fa\u5b9a\u800c\u4e0d\u4f1a\u518d\u5206\u914d\u7a7a\u95f4\u3002 \u9759\u6001\u51fd\u6570\u4e0d\u5141\u8bb8\u8c03\u7528\u7c7b\u7684\u666e\u901a\u53d8\u91cf\uff0c\u53ea\u80fd\u8bbf\u95ee\u7c7b\u7684\u9759\u6001\u53d8\u91cf \u5168\u5c40\u53d8\u91cf\u3001\u9759\u6001\u5168\u5c40\u53d8\u91cf\u3001\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u2014\u2014\u5185\u5b58\u7684\u5168\u5c40\u6570\u636e\u533a\uff0c\u5c40\u90e8\u53d8\u91cf\u2014\u2014\u6808\u533a \u5168\u5c40\u53d8\u91cf\u5728\u6574\u4e2a\u5de5\u7a0b\u6587\u4ef6\u4e2d\u90fd\u6709\u6548 \u9759\u6001\u5168\u5c40\u53d8\u91cf\u53ea\u5728\u5b9a\u4e49\u5b83\u7684\u6587\u4ef6\u6709\u6548 \u9759\u6001\u5c40\u90e8\u53d8\u91cf\u53ea\u5728\u5b9a\u4e49\u5b83\u7684\u51fd\u6570\u5185\u6709\u6548\uff0c\u53ea\u5206\u914d\u4e00\u6b21\u5185\u5b58\uff0c\u51fd\u6570\u8fd4\u56de\u540e\u53d8\u91cf\u4e0d\u4f1a\u6d88\u5931\u3002 \u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u5982\u679c\u6ca1\u6709\u624b\u52a8\u521d\u59cb\u5316\uff0c\u5219\u7f16\u8bd1\u5668\u521d\u59cb\u5316\u4e3a0\uff0c\u5c40\u90e8\u53d8\u91cf\u4e0d\u77e5\u9053 staic\u6210\u5458\u53d8\u91cf \u5728\u7c7b\u5916\u521d\u59cb\u5316 \u56e0\u4e3a\u9759\u6001\u6210\u5458\u5c5e\u4e8e\u6574\u4e2a\u7c7b\uff0c\u800c\u4e0d\u5c5e\u4e8e\u67d0\u4e2a\u5bf9\u8c61\uff0c\u5982\u679c\u5728\u7c7b\u5185\u521d\u59cb\u5316\uff0c\u4f1a\u5bfc\u81f4\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u5305\u542b\u8be5\u9759\u6001\u6210\u5458\uff0c\u8fd9\u5c31\u77db\u76fe\u4e86\u3002 \u4ec0\u4e48\u5728\u7c7b\u5185\u521d\u59cb\u5316\uff1f \u9759\u6001\u5e38\u91cf\u6210\u5458 class A { private: static int count = 0; // \u9759\u6001\u6210\u5458\u4e0d\u80fd\u5728\u7c7b\u5185\u521d\u59cb\u5316 }; \u8fd9\u6837\u4e5f\u4e0d\u884c class A { private: const int count = 0; // \u5e38\u91cf\u6210\u5458\u4e5f\u4e0d\u80fd\u5728\u7c7b\u5185\u521d\u59cb\u5316 }; \u4f46\u662f\u8fd9\u6837\u53ef\u4ee5 class A { private: static const int count = 0; // \u9759\u6001\u6574\u578b\u5e38\u91cf\u6210\u5458\u53ef\u4ee5\u5728\u7c7b\u5185\u521d\u59cb\u5316\uff0c\u4f46\u662f static const float count\u5c31\u4e0d\u884c\u4e86 }; > \u7c7b\u4e2d\u7684static\u6570\u636e\u6210\u5458\u9700\u8981\u5728\u7c7b\u4e4b\u5916\u8fdb\u884c\u521d\u59cb\u5316 > \u88ab\u7c7b\u6216\u7c7b\u521b\u5efa\u7684\u5bf9\u8c61\u5171\u4eab \u3000\u3000> \u5168\u5c40/\u9759\u6001\u533a \u9759\u6001\u6210\u5458\u51fd\u6570 \u3000\u3000> \u5b83\u7684\u5f62\u53c2\u5217\u8868\u4e4b\u4e2d\u6ca1\u6709\u9690\u542b\u7684this\u6307\u9488 \u3000\u3000> \u4e0d\u80fd\u8c03\u7528\u975e\u9759\u6001\u7684\u6570\u636e\u6210\u5458 \u3000\u3000> \u4e0d\u80fd\u8c03\u7528\u975e\u9759\u6001\u7684\u6210\u5458\u51fd\u6570 \u3000\u3000> \u53ea\u80fd\u8c03\u7528\u9759\u6001\u7684\u6210\u5458 \u3000\u3000> \u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u7c7b\u540d\u8c03\u7528 Reference https://blog.csdn.net/qq_16209077/article/details/52602601","title":"Static"},{"location":"C%2B%2B/static/#static","text":"\u7c7b\u7684\u9759\u6001\u6210\u5458\u662f\u6240\u6709\u5bf9\u8c61\u5171\u4eab\u7684\uff0c\u4e00\u5f00\u59cb\u5c31\u5206\u914d\u4e86\uff0c\u4ee5\u540e\u56fa\u5b9a\u800c\u4e0d\u4f1a\u518d\u5206\u914d\u7a7a\u95f4\u3002 \u9759\u6001\u51fd\u6570\u4e0d\u5141\u8bb8\u8c03\u7528\u7c7b\u7684\u666e\u901a\u53d8\u91cf\uff0c\u53ea\u80fd\u8bbf\u95ee\u7c7b\u7684\u9759\u6001\u53d8\u91cf \u5168\u5c40\u53d8\u91cf\u3001\u9759\u6001\u5168\u5c40\u53d8\u91cf\u3001\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u2014\u2014\u5185\u5b58\u7684\u5168\u5c40\u6570\u636e\u533a\uff0c\u5c40\u90e8\u53d8\u91cf\u2014\u2014\u6808\u533a \u5168\u5c40\u53d8\u91cf\u5728\u6574\u4e2a\u5de5\u7a0b\u6587\u4ef6\u4e2d\u90fd\u6709\u6548 \u9759\u6001\u5168\u5c40\u53d8\u91cf\u53ea\u5728\u5b9a\u4e49\u5b83\u7684\u6587\u4ef6\u6709\u6548 \u9759\u6001\u5c40\u90e8\u53d8\u91cf\u53ea\u5728\u5b9a\u4e49\u5b83\u7684\u51fd\u6570\u5185\u6709\u6548\uff0c\u53ea\u5206\u914d\u4e00\u6b21\u5185\u5b58\uff0c\u51fd\u6570\u8fd4\u56de\u540e\u53d8\u91cf\u4e0d\u4f1a\u6d88\u5931\u3002 \u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u53d8\u91cf\u5982\u679c\u6ca1\u6709\u624b\u52a8\u521d\u59cb\u5316\uff0c\u5219\u7f16\u8bd1\u5668\u521d\u59cb\u5316\u4e3a0\uff0c\u5c40\u90e8\u53d8\u91cf\u4e0d\u77e5\u9053 staic\u6210\u5458\u53d8\u91cf \u5728\u7c7b\u5916\u521d\u59cb\u5316 \u56e0\u4e3a\u9759\u6001\u6210\u5458\u5c5e\u4e8e\u6574\u4e2a\u7c7b\uff0c\u800c\u4e0d\u5c5e\u4e8e\u67d0\u4e2a\u5bf9\u8c61\uff0c\u5982\u679c\u5728\u7c7b\u5185\u521d\u59cb\u5316\uff0c\u4f1a\u5bfc\u81f4\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u5305\u542b\u8be5\u9759\u6001\u6210\u5458\uff0c\u8fd9\u5c31\u77db\u76fe\u4e86\u3002 \u4ec0\u4e48\u5728\u7c7b\u5185\u521d\u59cb\u5316\uff1f \u9759\u6001\u5e38\u91cf\u6210\u5458 class A { private: static int count = 0; // \u9759\u6001\u6210\u5458\u4e0d\u80fd\u5728\u7c7b\u5185\u521d\u59cb\u5316 }; \u8fd9\u6837\u4e5f\u4e0d\u884c class A { private: const int count = 0; // \u5e38\u91cf\u6210\u5458\u4e5f\u4e0d\u80fd\u5728\u7c7b\u5185\u521d\u59cb\u5316 }; \u4f46\u662f\u8fd9\u6837\u53ef\u4ee5 class A { private: static const int count = 0; // \u9759\u6001\u6574\u578b\u5e38\u91cf\u6210\u5458\u53ef\u4ee5\u5728\u7c7b\u5185\u521d\u59cb\u5316\uff0c\u4f46\u662f static const float count\u5c31\u4e0d\u884c\u4e86 }; > \u7c7b\u4e2d\u7684static\u6570\u636e\u6210\u5458\u9700\u8981\u5728\u7c7b\u4e4b\u5916\u8fdb\u884c\u521d\u59cb\u5316 > \u88ab\u7c7b\u6216\u7c7b\u521b\u5efa\u7684\u5bf9\u8c61\u5171\u4eab \u3000\u3000> \u5168\u5c40/\u9759\u6001\u533a \u9759\u6001\u6210\u5458\u51fd\u6570 \u3000\u3000> \u5b83\u7684\u5f62\u53c2\u5217\u8868\u4e4b\u4e2d\u6ca1\u6709\u9690\u542b\u7684this\u6307\u9488 \u3000\u3000> \u4e0d\u80fd\u8c03\u7528\u975e\u9759\u6001\u7684\u6570\u636e\u6210\u5458 \u3000\u3000> \u4e0d\u80fd\u8c03\u7528\u975e\u9759\u6001\u7684\u6210\u5458\u51fd\u6570 \u3000\u3000> \u53ea\u80fd\u8c03\u7528\u9759\u6001\u7684\u6210\u5458 \u3000\u3000> \u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u7c7b\u540d\u8c03\u7528","title":"Static"},{"location":"C%2B%2B/static/#reference","text":"https://blog.csdn.net/qq_16209077/article/details/52602601","title":"Reference"},{"location":"C%2B%2B/struct/","text":"struct inflatable hat\uff1b inflatable woopie_cushion inflatable mainframe struct inflatable goose\uff1b //C\u8bed\u8a00\u7ed3\u6784\u4f53\u5bf9\u8c61\u58f0\u660e\uff0c\u4e0eC++\u7ed3\u6784\u4f53\u58f0\u660e\u90fd\u53ef\u4ee5 inflatable Vincent\uff1b //\u53ea\u6709C++\u7ed3\u6784\u4f53\u58f0\u660e\u53ef\u4ee5\u7528 \u7531\u4e8ehat\u7684\u7c7b\u578b\u662finflatable\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u6210\u5458\u8fd0\u7b97\u7b26\uff08.\uff09\u6765\u8bbf\u95ee\u5404\u4e2a\u6210\u5458\u3002\u4f8b\u5982\uff0chat.volume\u6307\u7684\u662f\u7ed3\u6784\u7684volume\u6210\u5458\uff0chat.privce,\u6307\u7684\u662fprice\u6210\u5458\u3002 \u6307\u5411\u7ed3\u6784\u4f53\u53d8\u91cf\u7684\u6307\u9488 \u8981\u6ce8\u610f\u7684\u662f\uff0c\u53ea\u6709\u201c\u6307\u9488\u53d8\u91cf\u540d\u201d\u540e\u9762\u624d\u80fd\u52a0\u201c->\u201d\uff0c\u5343\u4e07\u4e0d\u8981\u5728\u6210\u5458\u540d\u540e\u9762\u52a0\u201c->\u201d \u4ee5\u4e0b 3 \u79cd\u5f62\u5f0f\u662f\u7b49\u4ef7\u7684\uff1a \u2022 \u7ed3\u6784\u4f53\u53d8\u91cf.\u6210\u5458\u540d \u2022 (*\u6307\u9488\u53d8\u91cf).\u6210\u5458\u540d \u2022 \u6307\u9488\u53d8\u91cf->\u6210\u5458\u540d","title":"Struct"},{"location":"C%2B%2B/struct/#struct","text":"inflatable hat\uff1b inflatable woopie_cushion inflatable mainframe struct inflatable goose\uff1b //C\u8bed\u8a00\u7ed3\u6784\u4f53\u5bf9\u8c61\u58f0\u660e\uff0c\u4e0eC++\u7ed3\u6784\u4f53\u58f0\u660e\u90fd\u53ef\u4ee5 inflatable Vincent\uff1b //\u53ea\u6709C++\u7ed3\u6784\u4f53\u58f0\u660e\u53ef\u4ee5\u7528 \u7531\u4e8ehat\u7684\u7c7b\u578b\u662finflatable\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u6210\u5458\u8fd0\u7b97\u7b26\uff08.\uff09\u6765\u8bbf\u95ee\u5404\u4e2a\u6210\u5458\u3002\u4f8b\u5982\uff0chat.volume\u6307\u7684\u662f\u7ed3\u6784\u7684volume\u6210\u5458\uff0chat.privce,\u6307\u7684\u662fprice\u6210\u5458\u3002 \u6307\u5411\u7ed3\u6784\u4f53\u53d8\u91cf\u7684\u6307\u9488 \u8981\u6ce8\u610f\u7684\u662f\uff0c\u53ea\u6709\u201c\u6307\u9488\u53d8\u91cf\u540d\u201d\u540e\u9762\u624d\u80fd\u52a0\u201c->\u201d\uff0c\u5343\u4e07\u4e0d\u8981\u5728\u6210\u5458\u540d\u540e\u9762\u52a0\u201c->\u201d \u4ee5\u4e0b 3 \u79cd\u5f62\u5f0f\u662f\u7b49\u4ef7\u7684\uff1a \u2022 \u7ed3\u6784\u4f53\u53d8\u91cf.\u6210\u5458\u540d \u2022 (*\u6307\u9488\u53d8\u91cf).\u6210\u5458\u540d \u2022 \u6307\u9488\u53d8\u91cf->\u6210\u5458\u540d","title":"struct"},{"location":"C%2B%2B/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84C%2B%2B%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/","text":"1.\u5728\u6709\u7ee7\u627f\u5173\u7cfb\u7684\u7236\u5b50\u7c7b\u4e2d\uff0c\u6784\u5efa\u548c\u6790\u6784\u4e00\u4e2a\u5b50\u7c7b\u5bf9\u8c61\u65f6\uff0c\u7236\u5b50\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u7684\u6267\u884c\u987a\u5e8f\u5206\u522b\u662f\u600e\u6837\u7684\uff1f A\uff1a\u6784\u9020\u4ece\u4e0a\u81f3\u4e0b\uff0c\u6790\u6784\u4ece\u4e0b\u800c\u4e0a\u3002 2.\u5728\u6709\u7ee7\u627f\u5173\u7cfb\u7684\u7c7b\u4f53\u7cfb\u4e2d\uff0c\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u4e00\u5b9a\u8981\u7533\u660e\u4e3a virtual \u5417\uff1f\u5982\u679c\u4e0d\u7533\u660e\u4e3a virtual \u4f1a\u600e\u6837\uff1f A\uff1a\u6784\u9020\u51fd\u6570\u4e0d\u9700\u8981\uff0c\u6790\u6784\u51fd\u6570\u4e00\u5b9a\u8981\u3002 3.\u4ec0\u4e48\u662f C++ \u591a\u6001\uff1fC++ \u591a\u6001\u7684\u5b9e\u73b0\u539f\u7406\u662f\u4ec0\u4e48\uff1f A\uff1aC++\u4e2d\u865a\u51fd\u6570\u7684\u4f5c\u7528\u4e3b\u8981\u662f\u4e3a\u4e86\u5b9e\u73b0\u591a\u6001\u3002\u5728\u7ee7\u627f\u5c42\u6b21\u4e2d\uff0c\u7236\u7c7b\u7684\u6307\u9488\u53ef\u4ee5\u5177\u6709\u591a\u79cd\u5f62\u6001\u2014\u2014\u5f53\u5b83\u6307\u5411\u67d0\u4e2a\u5b50\u7c7b\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u901a\u8fc7\u5b83\u80fd\u591f\u8c03\u7528\u5230\u5b50\u7c7b\u6539\u5199\u7684\u51fd\u6570\uff0c\u800c\u4e0d\u662f\u7236\u7c7b\u672c\u8eab\u3002 \u8fd9\u662f\u8fd0\u884c\u671f\u591a\u6001\uff0c\u5373\u7236\u7c7b\u6307\u9488\u53ea\u6709\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u624d\u80fd\u77e5\u9053\u6240\u6307\u7684\u771f\u6b63\u7c7b\u578b\u662f\u4ec0\u4e48\u3002 4.\u4ec0\u4e48\u662f\u865a\u51fd\u6570\uff1f\u865a\u51fd\u6570\u7684\u5b9e\u73b0\u539f\u7406\u662f\u4ec0\u4e48\uff1f 5.\u4ec0\u4e48\u662f\u865a\u8868\uff1f\u865a\u8868\u7684\u5185\u5b58\u7ed3\u6784\u5e03\u5c40\u5982\u4f55\uff1f\u865a\u8868\u7684\u7b2c\u4e00\u9879\uff08\u6216\u7b2c\u4e8c\u9879\uff09\u662f\u4ec0\u4e48\uff1f 6.\u83f1\u5f62\u7ee7\u627f\uff08\u7c7b D \u540c\u65f6\u7ee7\u627f B \u548c C\uff0cB \u548c C\u53c8\u7ee7\u627f\u81eaA\uff09\u4f53\u7cfb\u4e0b\uff0c\u865a\u8868\u5728\u5404\u4e2a\u7c7b\u4e2d\u7684\u5e03\u5c40\u5982\u4f55\uff1f\u5982\u679c\u7c7bB\u548c\u7c7bC\u540c\u65f6\u6709\u4e00\u4e2a\u6210\u5458\u53d8\u4e86m\uff0cm\u5982\u4f55\u5728D\u5bf9\u8c61\u7684\u5185\u5b58\u5730\u5740\u4e0a\u5206\u5e03\u7684\uff1f\u662f\u5426\u4f1a\u76f8\u4e92\u8986\u76d6\uff1f class\u4e0estruct\u7684\u533a\u522b \u4f7f\u7528 class \u65f6\uff0c\u7c7b\u4e2d\u7684\u6210\u5458\u9ed8\u8ba4\u90fd\u662f private \u5c5e\u6027\u7684\uff1b\u800c\u4f7f\u7528 struct \u65f6\uff0c\u7ed3\u6784\u4f53\u4e2d\u7684\u6210\u5458\u9ed8\u8ba4\u90fd\u662f public \u5c5e\u6027\u7684\u3002 class \u7ee7\u627f\u9ed8\u8ba4\u662f private \u7ee7\u627f\uff0c\u800c struct \u7ee7\u627f\u9ed8\u8ba4\u662f public \u7ee7\u627f\u3002 class \u53ef\u4ee5\u4f7f\u7528\u6a21\u677f\uff0c\u800c struct \u4e0d\u80fd\u3002 \u53e6\u5916\uff0c\u65f6\u81f3\u4eca\u65e5\uff0c\u4f60\u4e00\u5b9a\u8981\u719f\u6089 C++11/14/17 \u5e38\u7528\u7684\u8bed\u8a00\u7279\u6027\u548c\u7c7b\u5e93\uff0c\u8fd9\u91cc\u7b80\u5355\u5730\u5217\u4e00\u4e0b\uff1a \u7edf\u4e00\u7684\u7c7b\u6210\u5458\u521d\u59cb\u5316\u8bed\u6cd5\u4e0estd::initializer_list \u6ce8\u89e3\u6807\u7b7e\uff08attributes\uff09 final/override/=default/=delete \u8bed\u6cd5auto \u5173\u952e\u5b57Range-based \u5faa\u73af\u8bed\u6cd5\u7ed3\u6784\u5316\u7ed1\u5b9astl \u5bb9\u5668\u65b0\u589e\u7684\u5b9e\u7528\u65b9\u6cd5 std::thread \u7ebf\u7a0b\u5c40\u90e8\u5b58\u50a8 thread_local \u7ebf\u7a0b\u540c\u6b65\u539f\u8bed std::mutex\u3001std::condition_variable \u7b49 \u539f\u5b50\u64cd\u4f5c\u7c7b \u667a\u80fd\u6307\u9488\u7c7b std::bind/std::function extern Dynamic_cast \u4e00\u822c\u8ba4\u4e3a\u5b50\u7c7b\u5bf9\u8c61\u5927\u5c0f>=\u7236\u7c7b\u5bf9\u8c61\u5927\u5c0f\u3002\u56e0\u4e3a\u5b50\u7c7b\u53ef\u4ee5\u6269\u5c55\u7236\u7c7b\uff0c\u53ef\u4ee5\u589e\u52a0\u6210\u5458\u53d8\u91cf\u3002\u5982\u679c\u4e00\u4e2a\u5b50\u7c7b\u589e\u52a0\u4e86\u6210\u5458\u53d8\u91cf\uff0c\u90a3\u4e48\u5b83\u7684\u5bf9\u8c61\u7684\u5185\u5b58\u7a7a\u95f4\u4f1a\u5927\u4e8e\u7236\u7c7b\u5bf9\u8c61\u3002\u8fd9\u65f6\u4e00\u4e2a\u5b9e\u9645\u6307\u5411\u7236\u7c7b\u7684\u6307\u9488\uff0c\u5982\u679c\u88ab\u5f3a\u5236\u8f6c\u5316\u4e3a\u5b50\u7c7b\u5bf9\u8c61\u6307\u9488\uff0c\u5f53\u4f7f\u7528\u8fd9\u4e2a\u6307\u9488\u65f6\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8d8a\u754c\u8bbf\u95ee\u975e\u6cd5\u5185\u5b58\u3002\u76f8\u53cd\uff0c\u4e3a\u4f55\u5b50\u7c7b\u6307\u9488\u53ef\u4ee5\u8f6c\u6362\u4e3a\u7236\u7c7b\u6307\u9488\uff1f\u56e0\u4e3a\u7236\u7c7b\u6307\u9488\u9700\u8981\u7684\uff0c\u5b50\u7c7b\u5bf9\u8c61\u90fd\u6709\uff0c\u4e0d\u4f1a\u51fa\u73b0\u975e\u6cd5\u5185\u5b58\u8bbf\u95ee\u3002 \u8fd9\u5c31\u662fdynamic_cast\u4e0d\u4e00\u5b9a\u6210\u529f\u7684\u539f\u56e0\u3002\u5982\u679c\u4e00\u4e2a\u5b9e\u9645\u6307\u5411\u5b50\u7c7b\u5bf9\u8c61\u7684\u6307\u9488\u88ab\u8f6c\u6362\u6210\u4e86\u7236\u7c7b\u6307\u9488\uff0c\u7136\u540e\u518d\u7528dynamic_cast\u8f6c\u6362\u56de\u6765\uff0c\u4e00\u5b9a\u80fd\u6210\u529f\uff0c\u800c\u4e00\u4e2a\u5b9e\u9645\u6307\u5411\u7236\u7c7b\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u88abdynamic_cast\u8f6c\u6362\u4e3a\u5b50\u7c7b\u6307\u9488\uff0c\u4e00\u5b9a\u4f1a\u5931\u8d25\u3002 this this\u6307\u9488\u7684\u4e00\u822c\u5f62\u5f0f\u4e3a\uff08\u5047\u5982\u7c7b\u7c7b\u578b\u662fA\uff0c\u5f53\u7136\u4e0e\u7c7b\u7c7b\u578b\u76f8\u5173\uff09\uff1aA * const \uff0c\u4e5f\u5c31\u662f\u8bf4this\u6307\u9488\u662f\u4e00\u4e2a\u5e38\u91cf\u6307\u9488\uff08\u6307\u9488\u7684\u5730\u5740\u503c\u4e3a\u5e38\u91cf\uff09 \u5728\u7c7b\u7684\u975econst\u6210\u5458\u51fd\u6570\u4e2d\uff0cthis\u7684\u7c7b\u578b\u4e3a\u4e00\u822c\u5f62\u5f0f\uff0c\u5373 A * const \u5728\u7c7b\u7684const\u6210\u5458\u51fd\u7075\u6570\uff0cthis\u7684\u7c7b\u578b\u4e3a\uff1aconst A * const\uff0c\u5373\u6307\u5411\u5e38\u91cf\u5bf9\u8c61\u7684\u5e38\u91cf\u6307\u9488 const_cast\u8f6c\u6362\u662f\u53bb\u6389\u6240\u6307\u5411\u5bf9\u8c61\u7684\u5e38\u91cf\u6027\uff0c\u4f7f\u5f97const\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u4fee\u6539\u6570\u636e\u6210\u5458\u6216\u8c03\u7528\u975econst\u6210\u5458\u51fd\u6570\uff08\u672c\u6765\u662f\u4e0d\u5141\u8bb8\u7684\uff09\uff1b\u4f46\u4e0d\u63a8\u8350\u7528\u8fd9\u6837\u7684\u65b9\u6cd5\uff0c\u5982\u679c\u53ea\u662f\u4fee\u6539\u6570\u636e\u6210\u5458\uff0c\u8bf7\u7528mutable\u5173\u952e\u5b57\u3002","title":"\u4ece\u96f6\u5f00\u59cb\u7684C++\u95ee\u9898\u603b\u7ed3"},{"location":"C%2B%2B/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84C%2B%2B%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/#extern","text":"","title":"extern"},{"location":"C%2B%2B/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84C%2B%2B%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/#dynamic_cast","text":"\u4e00\u822c\u8ba4\u4e3a\u5b50\u7c7b\u5bf9\u8c61\u5927\u5c0f>=\u7236\u7c7b\u5bf9\u8c61\u5927\u5c0f\u3002\u56e0\u4e3a\u5b50\u7c7b\u53ef\u4ee5\u6269\u5c55\u7236\u7c7b\uff0c\u53ef\u4ee5\u589e\u52a0\u6210\u5458\u53d8\u91cf\u3002\u5982\u679c\u4e00\u4e2a\u5b50\u7c7b\u589e\u52a0\u4e86\u6210\u5458\u53d8\u91cf\uff0c\u90a3\u4e48\u5b83\u7684\u5bf9\u8c61\u7684\u5185\u5b58\u7a7a\u95f4\u4f1a\u5927\u4e8e\u7236\u7c7b\u5bf9\u8c61\u3002\u8fd9\u65f6\u4e00\u4e2a\u5b9e\u9645\u6307\u5411\u7236\u7c7b\u7684\u6307\u9488\uff0c\u5982\u679c\u88ab\u5f3a\u5236\u8f6c\u5316\u4e3a\u5b50\u7c7b\u5bf9\u8c61\u6307\u9488\uff0c\u5f53\u4f7f\u7528\u8fd9\u4e2a\u6307\u9488\u65f6\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8d8a\u754c\u8bbf\u95ee\u975e\u6cd5\u5185\u5b58\u3002\u76f8\u53cd\uff0c\u4e3a\u4f55\u5b50\u7c7b\u6307\u9488\u53ef\u4ee5\u8f6c\u6362\u4e3a\u7236\u7c7b\u6307\u9488\uff1f\u56e0\u4e3a\u7236\u7c7b\u6307\u9488\u9700\u8981\u7684\uff0c\u5b50\u7c7b\u5bf9\u8c61\u90fd\u6709\uff0c\u4e0d\u4f1a\u51fa\u73b0\u975e\u6cd5\u5185\u5b58\u8bbf\u95ee\u3002 \u8fd9\u5c31\u662fdynamic_cast\u4e0d\u4e00\u5b9a\u6210\u529f\u7684\u539f\u56e0\u3002\u5982\u679c\u4e00\u4e2a\u5b9e\u9645\u6307\u5411\u5b50\u7c7b\u5bf9\u8c61\u7684\u6307\u9488\u88ab\u8f6c\u6362\u6210\u4e86\u7236\u7c7b\u6307\u9488\uff0c\u7136\u540e\u518d\u7528dynamic_cast\u8f6c\u6362\u56de\u6765\uff0c\u4e00\u5b9a\u80fd\u6210\u529f\uff0c\u800c\u4e00\u4e2a\u5b9e\u9645\u6307\u5411\u7236\u7c7b\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u88abdynamic_cast\u8f6c\u6362\u4e3a\u5b50\u7c7b\u6307\u9488\uff0c\u4e00\u5b9a\u4f1a\u5931\u8d25\u3002","title":"Dynamic_cast"},{"location":"C%2B%2B/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84C%2B%2B%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/#this","text":"this\u6307\u9488\u7684\u4e00\u822c\u5f62\u5f0f\u4e3a\uff08\u5047\u5982\u7c7b\u7c7b\u578b\u662fA\uff0c\u5f53\u7136\u4e0e\u7c7b\u7c7b\u578b\u76f8\u5173\uff09\uff1aA * const \uff0c\u4e5f\u5c31\u662f\u8bf4this\u6307\u9488\u662f\u4e00\u4e2a\u5e38\u91cf\u6307\u9488\uff08\u6307\u9488\u7684\u5730\u5740\u503c\u4e3a\u5e38\u91cf\uff09 \u5728\u7c7b\u7684\u975econst\u6210\u5458\u51fd\u6570\u4e2d\uff0cthis\u7684\u7c7b\u578b\u4e3a\u4e00\u822c\u5f62\u5f0f\uff0c\u5373 A * const \u5728\u7c7b\u7684const\u6210\u5458\u51fd\u7075\u6570\uff0cthis\u7684\u7c7b\u578b\u4e3a\uff1aconst A * const\uff0c\u5373\u6307\u5411\u5e38\u91cf\u5bf9\u8c61\u7684\u5e38\u91cf\u6307\u9488 const_cast\u8f6c\u6362\u662f\u53bb\u6389\u6240\u6307\u5411\u5bf9\u8c61\u7684\u5e38\u91cf\u6027\uff0c\u4f7f\u5f97const\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u4fee\u6539\u6570\u636e\u6210\u5458\u6216\u8c03\u7528\u975econst\u6210\u5458\u51fd\u6570\uff08\u672c\u6765\u662f\u4e0d\u5141\u8bb8\u7684\uff09\uff1b\u4f46\u4e0d\u63a8\u8350\u7528\u8fd9\u6837\u7684\u65b9\u6cd5\uff0c\u5982\u679c\u53ea\u662f\u4fee\u6539\u6570\u636e\u6210\u5458\uff0c\u8bf7\u7528mutable\u5173\u952e\u5b57\u3002","title":"this"},{"location":"C%2B%2B/%E5%86%85%E5%AD%98%E5%AF%B9%E9%BD%90/","text":"C++\u7684\u5185\u5b58\u5206\u5e03 \u4ee3\u7801\u533a\uff1a\u51fd\u6570\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801 \u5168\u5c40\u6570\u636e\u533a\uff1a\u5168\u5c40\u53d8\u91cf\u548cstatic\u53d8\u91cf \u5806\uff1a\u52a8\u6001\u5185\u5b58\u5206\u914d \u6808\uff1a\u5c40\u90e8\u53d8\u91cf \u5e38\u91cf\u533a\uff1a\u5b57\u7b26/\u6587\u5b57\u5e38\u91cf C++\u5185\u5b58\u5bf9\u9f50 \u4ec0\u4e48\u662f\u5185\u5b58\u5bf9\u9f50\uff1fwhat //32\u4f4d\u7cfb\u7edf #include<stdio.h> struct{ int x; char y; }s; int main() { printf(\"%d\\n\",sizeof(s); // \u8f93\u51fa8 return 0; } 32\u4f4d\u4e0b\uff0cint4\u5b57\u8282\uff0cchar1\u5b57\u8282\uff0c\u653e\u5230\u7ed3\u6784\u4f53\u4e2d\u5e94\u8be5\u662f5\u5b57\u8282\u3002\u4f46\u5b9e\u9645\u4e0a\u662f8\u5b57\u8282\u3002\u8fd9\u5c31\u662f\u5185\u5b58\u5bf9\u9f50 \u4e3a\u4ec0\u4e48\u8981\u5185\u5b58\u5bf9\u9f50\uff1fwhy \u5c3d\u7ba1\u5185\u5b58\u662f\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff0c\u4f46\u662f\u5927\u90e8\u5206\u5904\u7406\u5668\u5e76\u4e0d\u662f\u6309\u5b57\u8282\u5757\u6765\u5b58\u53d6\u5185\u5b58\u7684.\u5b83\u4e00\u822c\u4f1a\u4ee5\u53cc\u5b57\u8282,\u56db\u5b57\u8282,8\u5b57\u8282,16\u5b57\u8282\u751a\u81f332\u5b57\u8282\u4e3a\u5355\u4f4d\u6765\u5b58\u53d6\u5185\u5b58\uff0c\u6211\u4eec\u5c06\u4e0a\u8ff0\u8fd9\u4e9b\u5b58\u53d6\u5355\u4f4d\u79f0\u4e3a \u5185\u5b58\u5b58\u53d6\u7c92\u5ea6 \u3002 \u73b0\u5728\u8003\u86514\u5b57\u8282\u5b58\u53d6\u7c92\u5ea6\u7684\u5904\u7406\u5668\u53d6int\u7c7b\u578b\u53d8\u91cf\uff0832\u4f4d\u7cfb\u7edf\uff09\uff0c\u8be5\u5904\u7406\u5668 \u53ea\u80fd\u4ece\u5730\u5740\u4e3a4\u7684\u500d\u6570 \u7684\u5185\u5b58\u5f00\u59cb\u8bfb\u53d6\u6570\u636e\u3002 \u5047\u5982 \u6ca1\u6709\u5185\u5b58\u5bf9\u9f50\u673a\u5236\uff0c\u6570\u636e\u53ef\u4ee5\u4efb\u610f\u5b58\u653e \uff0c\u73b0\u5728\u4e00\u4e2aint\u53d8\u91cf\u5b58\u653e\u5728\u4ece\u5730\u57401\u5f00\u59cb\u7684\u8054\u7cfb\u56db\u4e2a\u5b57\u8282\u5730\u5740\u4e2d\uff0c\u8be5\u5904\u7406\u5668\u53bb\u53d6\u6570\u636e\u65f6\uff0c\u8981\u5148\u4ece0\u5730\u5740\u5f00\u59cb\u8bfb\u53d6\u7b2c\u4e00\u4e2a4\u5b57\u8282\u5757,\u5254\u9664\u4e0d\u60f3\u8981\u7684\u5b57\u8282\uff080\u5730\u5740\uff09,\u7136\u540e\u4ece\u5730\u57404\u5f00\u59cb\u8bfb\u53d6\u4e0b\u4e00\u4e2a4\u5b57\u8282\u5757,\u540c\u6837\u5254\u9664\u4e0d\u8981\u7684\u6570\u636e\uff085\uff0c6\uff0c7\u5730\u5740\uff09,\u6700\u540e\u7559\u4e0b\u7684\u4e24\u5757\u6570\u636e\u5408\u5e76\u653e\u5165\u5bc4\u5b58\u5668.\u8fd9\u9700\u8981\u505a\u5f88\u591a\u5de5\u4f5c\u3002 \u6709\u4e86\u5185\u5b58\u5bf9\u9f50 \uff0cint\u7c7b\u578b\u6570\u636e \u53ea\u80fd\u5b58\u653e\u5728\u6309\u7167\u5bf9\u9f50\u89c4\u5219\u7684\u5185\u5b58 \u4e2d\uff0c\u6bd4\u5982\u8bf40\u5730\u5740\u5f00\u59cb\u7684\u5185\u5b58\u3002\u90a3\u4e48\u73b0\u5728\u8be5\u5904\u7406\u5668\u5728\u53d6\u6570\u636e\u65f6\u4e00\u6b21\u6027\u5c31\u80fd\u5c06\u6570\u636e\u8bfb\u51fa\u6765\u4e86\uff0c\u800c\u4e14\u4e0d\u9700\u8981\u505a\u989d\u5916\u7684\u64cd\u4f5c\uff0c\u63d0\u9ad8\u4e86\u6548\u7387\u3002 \u5185\u5b58\u5bf9\u9f50\u89c4\u5219 \u6bcf\u4e2a\u7279\u5b9a\u5e73\u53f0\u4e0a\u7684\u7f16\u8bd1\u5668\u90fd\u6709\u81ea\u5df1\u7684\u9ed8\u8ba4\u201c\u5bf9\u9f50\u7cfb\u6570\u201d\uff08\u4e5f\u53eb\u5bf9\u9f50\u6a21\u6570\uff09\u3002gcc\u4e2d\u9ed8\u8ba4 #pragma pack(4) \uff0c\u53ef\u4ee5\u901a\u8fc7\u9884\u7f16\u8bd1\u547d\u4ee4#pragma pack(n)\uff0cn = 1,2,4,8,16\u6765\u6539\u53d8\u8fd9\u4e00\u7cfb\u6570\u3002","title":"\u5185\u5b58\u5bf9\u9f50"},{"location":"C%2B%2B/%E5%86%85%E5%AD%98%E5%AF%B9%E9%BD%90/#c","text":"\u4ee3\u7801\u533a\uff1a\u51fd\u6570\u7684\u4e8c\u8fdb\u5236\u4ee3\u7801 \u5168\u5c40\u6570\u636e\u533a\uff1a\u5168\u5c40\u53d8\u91cf\u548cstatic\u53d8\u91cf \u5806\uff1a\u52a8\u6001\u5185\u5b58\u5206\u914d \u6808\uff1a\u5c40\u90e8\u53d8\u91cf \u5e38\u91cf\u533a\uff1a\u5b57\u7b26/\u6587\u5b57\u5e38\u91cf","title":"C++\u7684\u5185\u5b58\u5206\u5e03"},{"location":"C%2B%2B/%E5%86%85%E5%AD%98%E5%AF%B9%E9%BD%90/#c_1","text":"\u4ec0\u4e48\u662f\u5185\u5b58\u5bf9\u9f50\uff1fwhat //32\u4f4d\u7cfb\u7edf #include<stdio.h> struct{ int x; char y; }s; int main() { printf(\"%d\\n\",sizeof(s); // \u8f93\u51fa8 return 0; } 32\u4f4d\u4e0b\uff0cint4\u5b57\u8282\uff0cchar1\u5b57\u8282\uff0c\u653e\u5230\u7ed3\u6784\u4f53\u4e2d\u5e94\u8be5\u662f5\u5b57\u8282\u3002\u4f46\u5b9e\u9645\u4e0a\u662f8\u5b57\u8282\u3002\u8fd9\u5c31\u662f\u5185\u5b58\u5bf9\u9f50 \u4e3a\u4ec0\u4e48\u8981\u5185\u5b58\u5bf9\u9f50\uff1fwhy \u5c3d\u7ba1\u5185\u5b58\u662f\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff0c\u4f46\u662f\u5927\u90e8\u5206\u5904\u7406\u5668\u5e76\u4e0d\u662f\u6309\u5b57\u8282\u5757\u6765\u5b58\u53d6\u5185\u5b58\u7684.\u5b83\u4e00\u822c\u4f1a\u4ee5\u53cc\u5b57\u8282,\u56db\u5b57\u8282,8\u5b57\u8282,16\u5b57\u8282\u751a\u81f332\u5b57\u8282\u4e3a\u5355\u4f4d\u6765\u5b58\u53d6\u5185\u5b58\uff0c\u6211\u4eec\u5c06\u4e0a\u8ff0\u8fd9\u4e9b\u5b58\u53d6\u5355\u4f4d\u79f0\u4e3a \u5185\u5b58\u5b58\u53d6\u7c92\u5ea6 \u3002 \u73b0\u5728\u8003\u86514\u5b57\u8282\u5b58\u53d6\u7c92\u5ea6\u7684\u5904\u7406\u5668\u53d6int\u7c7b\u578b\u53d8\u91cf\uff0832\u4f4d\u7cfb\u7edf\uff09\uff0c\u8be5\u5904\u7406\u5668 \u53ea\u80fd\u4ece\u5730\u5740\u4e3a4\u7684\u500d\u6570 \u7684\u5185\u5b58\u5f00\u59cb\u8bfb\u53d6\u6570\u636e\u3002 \u5047\u5982 \u6ca1\u6709\u5185\u5b58\u5bf9\u9f50\u673a\u5236\uff0c\u6570\u636e\u53ef\u4ee5\u4efb\u610f\u5b58\u653e \uff0c\u73b0\u5728\u4e00\u4e2aint\u53d8\u91cf\u5b58\u653e\u5728\u4ece\u5730\u57401\u5f00\u59cb\u7684\u8054\u7cfb\u56db\u4e2a\u5b57\u8282\u5730\u5740\u4e2d\uff0c\u8be5\u5904\u7406\u5668\u53bb\u53d6\u6570\u636e\u65f6\uff0c\u8981\u5148\u4ece0\u5730\u5740\u5f00\u59cb\u8bfb\u53d6\u7b2c\u4e00\u4e2a4\u5b57\u8282\u5757,\u5254\u9664\u4e0d\u60f3\u8981\u7684\u5b57\u8282\uff080\u5730\u5740\uff09,\u7136\u540e\u4ece\u5730\u57404\u5f00\u59cb\u8bfb\u53d6\u4e0b\u4e00\u4e2a4\u5b57\u8282\u5757,\u540c\u6837\u5254\u9664\u4e0d\u8981\u7684\u6570\u636e\uff085\uff0c6\uff0c7\u5730\u5740\uff09,\u6700\u540e\u7559\u4e0b\u7684\u4e24\u5757\u6570\u636e\u5408\u5e76\u653e\u5165\u5bc4\u5b58\u5668.\u8fd9\u9700\u8981\u505a\u5f88\u591a\u5de5\u4f5c\u3002 \u6709\u4e86\u5185\u5b58\u5bf9\u9f50 \uff0cint\u7c7b\u578b\u6570\u636e \u53ea\u80fd\u5b58\u653e\u5728\u6309\u7167\u5bf9\u9f50\u89c4\u5219\u7684\u5185\u5b58 \u4e2d\uff0c\u6bd4\u5982\u8bf40\u5730\u5740\u5f00\u59cb\u7684\u5185\u5b58\u3002\u90a3\u4e48\u73b0\u5728\u8be5\u5904\u7406\u5668\u5728\u53d6\u6570\u636e\u65f6\u4e00\u6b21\u6027\u5c31\u80fd\u5c06\u6570\u636e\u8bfb\u51fa\u6765\u4e86\uff0c\u800c\u4e14\u4e0d\u9700\u8981\u505a\u989d\u5916\u7684\u64cd\u4f5c\uff0c\u63d0\u9ad8\u4e86\u6548\u7387\u3002 \u5185\u5b58\u5bf9\u9f50\u89c4\u5219 \u6bcf\u4e2a\u7279\u5b9a\u5e73\u53f0\u4e0a\u7684\u7f16\u8bd1\u5668\u90fd\u6709\u81ea\u5df1\u7684\u9ed8\u8ba4\u201c\u5bf9\u9f50\u7cfb\u6570\u201d\uff08\u4e5f\u53eb\u5bf9\u9f50\u6a21\u6570\uff09\u3002gcc\u4e2d\u9ed8\u8ba4 #pragma pack(4) \uff0c\u53ef\u4ee5\u901a\u8fc7\u9884\u7f16\u8bd1\u547d\u4ee4#pragma pack(n)\uff0cn = 1,2,4,8,16\u6765\u6539\u53d8\u8fd9\u4e00\u7cfb\u6570\u3002","title":"C++\u5185\u5b58\u5bf9\u9f50"},{"location":"C%2B%2B/%E5%8C%BF%E5%90%8D%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4/","text":"unnamed namespace \u533f\u540d\u547d\u540d\u7a7a\u95f4\u53ef\u4ee5\u5728\u7ed9\u5b9a\u7684\u6587\u4ef6\u4e2d\u4e0d\u8fde\u7eed\uff0c\u4f46 \u4e0d\u80fd\u8de8\u8d8a\u591a\u4e2a\u6587\u4ef6 \u3002 \u533f\u540d\u7684\u547d\u540d\u7a7a\u95f4\u7528\u4e8e\u58f0\u660e\u5c40\u90e8\u4e8e\u6587\u4ef6\u7684\u5b9e\u4f53\uff0c\u5728\u533f\u540d\u7684\u547d\u540d\u7a7a\u95f4\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\u5728\u7a0b\u5e8f\u5f00\u59cb\u65f6\u521b\u5efa\uff0c\u5728\u7a0b\u5e8f\u7ed3\u675f\u65f6\u4e00\u76f4\u5b58\u5728\u3002 \u533f\u540d\u7684\u547d\u540d\u7a7a\u95f4\u4e2d\u5b9a\u4e49\u7684\u540d\u5b57\u53ef\u76f4\u63a5\u4f7f\u7528\uff0c\u6ca1\u6709\u5b8c\u5168\u9650\u5b9a\u540d\u3002 \u533f\u540d\u7684\u547d\u540d\u7a7a\u95f4\u4e2d\u5b9a\u4e49\u7684\u540d\u5b57 \u53ea\u5728\u672c\u6587\u4ef6 \u4e2d\u53ef\u89c1\u3002 \u533f\u540d\u7684\u547d\u540d\u7a7a\u95f4\u4e2d\u5b9a\u4e49\u7684\u540d\u5b57\u53ef\u4ee5\u5728\u5b9a\u4e49\u8be5\u547d\u540d\u7a7a\u95f4\u6240\u5728\u7684\u4f5c\u7528\u57df\u4e2d\u53ef\u89c1\uff0c\u5982\u679c\u5728\u6587\u4ef6\u7684\u6700\u5916\u5c42\u4f5c\u7528\u57df\u4e2d\u5b9a\u4e49\u533f\u540d\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u90a3\u4e48\u8be5\u533f\u540d\u7684\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u540d\u5b57\u5fc5\u987b\u4e0e\u5168\u5c40\u4f5c\u7528\u57df\u4e2d\u7684\u540d\u5b57\u4e0d\u540c\u3002 \u901a\u5e38\u9664\u4e86\u7c7b\u7684\u9759\u6001\u6210\u5458\u51fd\u6570\u548c\u9759\u6001\u6570\u636e\u6210\u5458\u5916\uff0c\u5176\u5b83\u7684static\u9700\u6c42\u90fd\u63d0\u5021\u4f7f\u7528\u533f\u540d\u547d\u540d\u7a7a\u95f4\u6765\u4ee3\u66ff\u3002 1.\u4ee3\u66ffstatic\u7528\u6cd5 \u5728\u6807\u51c6C\u4e2d\uff0c\u5982\u679c\u671f\u671b\u4e00\u4e2a\u53d8\u91cf\u6216\u8005\u4e00\u79cd\u51fd\u6570\u53ea\u80fd\u88ab\u672c\u6e90\u6587\u4ef6(\u540c\u4e2atranslation unit)\u4f7f\u7528\uff0c\u901a\u5e38\u7684\u505a\u6cd5\u662f\u4f7f\u7528static\u6765\u4fee\u9970\u8fd9\u4e2a\u53d8\u91cf/\u51fd\u6570\uff0c\u6765\u4fdd\u8bc1\u8fd9\u4e2a\u53d8\u91cf/\u51fd\u6570\u5177\u6709\u5185\u90e8\u94fe\u63a5(internal linkage)\u3002\u8fd9\u79cd\u6280\u672f\u79f0\u4e3a\u4fe1\u606f\u9690\u85cf\u3002 \u5728C++\u4e2d\uff0c\u4ecd\u7136\u652f\u6301\u8fd9\u79cd\u505a\u6cd5\uff0c\u4f46\u662f\u5df2\u7ecf\u4e0d\u63d0\u5021\uff0cC++\u53ea\u63d0\u5021static\u4ec5\u4ec5\u7528\u4e8e\u4fee\u9970\u7c7b\u6210\u5458\uff0c\u4e0d\u518d\u63d0\u5021\u7528static\u6765\u4fee\u9970\u975e\u7c7b\u6210\u5458\u3002\u5728\u4ee5\u540e\u7684\u7f16\u8bd1\u5668\u4e2d\uff0c\u53ef\u80fd\u4f1a\u5bf9\u4f7f\u7528static\u6765\u4fee\u9970\u975e\u7c7b\u6210\u5458\u7684\u65b9\u5f0f\u7ed9\u51fa\u7f16\u8bd1\u8b66\u544a\u3002 2.\u4e0d\u8981\u5728.h\u6587\u4ef6\u4e2d\u4f7f\u7528\u533f\u540d\u547d\u540d\u7a7a\u95f4 \u63d0\u5021\u5728cpp/c\u6e90\u6587\u4ef6\u4e2d\u4f7f\u7528unnamed namespace\uff0c\u4e0d\u8981(\u4e0d\u63d0\u5021)\u5728.h\u6587\u4ef6\u4e2d\u4f7f\u7528\u533f\u540d\u547d\u4ee4\u7a7a\u95f4\uff0c\u56e0\u4e3a\u5176\u5c06\u751f\u6210\u5927\u91cf\u4e0d\u88ab\u4f7f\u7528\u7c7b\u578b\u6216\u8005\u6570\u636e---\u8fd9\u4e9b\u6570\u636e\u4e0d\u662f\u526f\u672c\uff0c\u662f\u5168\u5c40\u552f\u4e00\u7684(\u539f\u56e0\u89c1\u4e0b\u9762)\u3002 \u8fd9\u91cc\u91cd\u63d0\u4e00\u4e0b\uff1a.h\u6587\u4ef6\u4e0e.cpp\u6587\u4ef6\u3002.h\u6587\u4ef6\u4e0d\u662f\u7f16\u8bd1\u5355\u5143\uff0c\u6240\u4ee5\u4e0d\u80fd\u76f4\u63a5\u7f16\u8bd1.h\u6587\u4ef6\uff1b.cpp/.cc\u6587\u4ef6\u624d\u662f\u7f16\u8bd1\u5355\u5143\uff0c\u7f16\u8bd1\u5668\u53ef\u4ee5\u76f4\u63a5\u7f16\u8bd1.cpp/.cc\u6587\u4ef6\u3002\u90a3\u4e48\u5982\u679c\u4e00\u4e2a.cpp\u6587\u4ef6include\u4e86.h\u6587\u4ef6\uff0c\u662f\u4ec0\u4e48\u6548\u679c\u5462\uff1f\u76f4\u767d\u7684\u610f\u601d\u5c31\u662f\uff1a\u628a\u6240\u6709(\u76f4\u63a5/\u95f4\u63a5)include\u7684.h\u7684\u6587\u4ef6\u5185\u5bb9\u76f4\u63a5\u590d\u5236\u5230\u8be5.cpp\u6587\u4ef6\u4e2d\uff0c\u518d\u5bf9\u8be5.cpp\u6587\u4ef6\u7f16\u8bd1\u3002\u8fd9\u5c31\u610f\u5473\u7740\uff0c\u5982\u679c\u5728\u4e00\u4e2a\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e86unnamed namespace\uff0c\u90a3\u4e48\u6240\u6709include\u8be5.h\u7684\u7f16\u8bd1\u5355\u5143(.cpp/.cc\u6587\u4ef6)\uff0c\u90fd\u4f1a\u5b8c\u5168\u5305\u542b\u8be5.h\u6587\u4ef6\u4e2d\u7684\u6240\u6709\u5185\u5bb9\uff0c\u90a3\u4e48\uff0c\u4e00\u4e2a.cpp/.cc\u4e2d\u5305\u542b\u7684\u533f\u540d\u7a7a\u95f4\u91cc\u7684\u6570\u636e\uff0c\u5b83\u81ea\u5df1\u5f53\u7136\u80fd\u8bbf\u95ee\u4e86\u3002\u65e0\u8bba\u5b83\u5177\u6709\u7684\u662f\u5185\u90e8\u94fe\u63a5\u5c5e\u6027\uff0c\u8fd8\u662f\u5916\u90e8\u94fe\u63a5\u5c5e\u6027\uff0c\u90fd\u4e0d\u5f71\u54cd\u8bbf\u95ee\u3002(\u9664\u975e\u5bf9\u8bbf\u95ee\u5bf9\u8c61\u6709\u94fe\u63a5\u5c5e\u6027\u8981\u6c42\u7684\u573a\u666f\uff1a\u6bd4\u5982\u6a21\u5757\u7684\u975e\u7c7b\u578b\u53c2\u6570\uff0d\u6570\u636e\u5b9e\u53c2)\u3002 3.\u5728\u6a21\u677f\u5143\u8bbe\u8ba1\u4e2d\u5c0f\u5fc3\u4f7f\u7528\u533f\u540d\u547d\u540d\u7a7a\u95f4 \u533f\u540d\u7a7a\u95f4\u5177\u6709\u5185\u90e8\u94fe\u63a5\u5c5e\u6027\uff0c\u5176\u5185\u90e8\u5b9a\u4e49\u7684\u51fd\u6570/\u7c7b\u578b/\u53d8\u91cf/\u5e38\u91cf\u5728\u4e0d\u540c\u7684\u7f16\u8bd1\u5355\u5143\u90fd\u662f\u4e0d\u540c\u7684\uff0c\u6240\u4ee5\u5728\u8fdb\u884c\u6a21\u677f\u8bbe\u8ba1\u65f6\uff0c\u5c24\u5176\u8981\u5c0f\u5fc3\uff0c\u4ee5\u9632\u6b62\u4f20\u5165\u7684\u7c7b\u578b\u53c2\u6570\u6765\u81ea\u4e8e\u4e0d\u540c\u7f16\u8bd1\u5355\u5143\u7684\u533f\u540d\u547d\u540d\u7a7a\u95f4\uff0c\u8fd9\u6837\u5f00\u53d1\u8005\u5b57\u9762\u610f\u601d\u770b\u5230\u7684\u662f\u540c\u4e00\u7c7b\u578b\uff0c\u4f46\u662f\u6a21\u677f\u5143\u903b\u8f91\u5904\u7406\u4e2d\uff0c\u7adf\u7136\u662f\u4e0d\u540c\u7684\u7c7b\u578b\uff0c\u5f88\u5bb9\u6613\u88ab\u8ba4\u4e3a\u662f\u7f16\u8bd1\u5668\u7684bug\u3002 \u51fa\u4e8e\u8fd9\u4e2a\u76ee\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5728\u6a21\u677f\u5143\u8bbe\u8ba1\u4e2d\u7981\u6b62\u4f7f\u7528\u533f\u540d\u547d\u540d\u7a7a\u95f4\u3002 \u8fd9\u5176\u5b9e\u662f\u4e0a\u4e00\u6761\u89c4\u5219\u4e2d\u7684\u4e00\u4e2a\u5b9e\u4f8b\uff1a\u56e0\u4e3a\u6a21\u677f\u5143\u4ee3\u7801\u90fd\u662f\u5728.h\u6587\u4ef6\u4e2d\u7684\uff0c\u800c\"\u4e0d\u8981\u5728.h\u6587\u4ef6\u4e2d\u4f7f\u7528\u533f\u540d\u547d\u540d\u7a7a\u95f4\"\u3002","title":"\u533f\u540d\u547d\u540d\u7a7a\u95f4"},{"location":"C%2B%2B/%E5%8C%BF%E5%90%8D%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4/#unnamed-namespace","text":"\u533f\u540d\u547d\u540d\u7a7a\u95f4\u53ef\u4ee5\u5728\u7ed9\u5b9a\u7684\u6587\u4ef6\u4e2d\u4e0d\u8fde\u7eed\uff0c\u4f46 \u4e0d\u80fd\u8de8\u8d8a\u591a\u4e2a\u6587\u4ef6 \u3002 \u533f\u540d\u7684\u547d\u540d\u7a7a\u95f4\u7528\u4e8e\u58f0\u660e\u5c40\u90e8\u4e8e\u6587\u4ef6\u7684\u5b9e\u4f53\uff0c\u5728\u533f\u540d\u7684\u547d\u540d\u7a7a\u95f4\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf\u5728\u7a0b\u5e8f\u5f00\u59cb\u65f6\u521b\u5efa\uff0c\u5728\u7a0b\u5e8f\u7ed3\u675f\u65f6\u4e00\u76f4\u5b58\u5728\u3002 \u533f\u540d\u7684\u547d\u540d\u7a7a\u95f4\u4e2d\u5b9a\u4e49\u7684\u540d\u5b57\u53ef\u76f4\u63a5\u4f7f\u7528\uff0c\u6ca1\u6709\u5b8c\u5168\u9650\u5b9a\u540d\u3002 \u533f\u540d\u7684\u547d\u540d\u7a7a\u95f4\u4e2d\u5b9a\u4e49\u7684\u540d\u5b57 \u53ea\u5728\u672c\u6587\u4ef6 \u4e2d\u53ef\u89c1\u3002 \u533f\u540d\u7684\u547d\u540d\u7a7a\u95f4\u4e2d\u5b9a\u4e49\u7684\u540d\u5b57\u53ef\u4ee5\u5728\u5b9a\u4e49\u8be5\u547d\u540d\u7a7a\u95f4\u6240\u5728\u7684\u4f5c\u7528\u57df\u4e2d\u53ef\u89c1\uff0c\u5982\u679c\u5728\u6587\u4ef6\u7684\u6700\u5916\u5c42\u4f5c\u7528\u57df\u4e2d\u5b9a\u4e49\u533f\u540d\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u90a3\u4e48\u8be5\u533f\u540d\u7684\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u540d\u5b57\u5fc5\u987b\u4e0e\u5168\u5c40\u4f5c\u7528\u57df\u4e2d\u7684\u540d\u5b57\u4e0d\u540c\u3002 \u901a\u5e38\u9664\u4e86\u7c7b\u7684\u9759\u6001\u6210\u5458\u51fd\u6570\u548c\u9759\u6001\u6570\u636e\u6210\u5458\u5916\uff0c\u5176\u5b83\u7684static\u9700\u6c42\u90fd\u63d0\u5021\u4f7f\u7528\u533f\u540d\u547d\u540d\u7a7a\u95f4\u6765\u4ee3\u66ff\u3002 1.\u4ee3\u66ffstatic\u7528\u6cd5 \u5728\u6807\u51c6C\u4e2d\uff0c\u5982\u679c\u671f\u671b\u4e00\u4e2a\u53d8\u91cf\u6216\u8005\u4e00\u79cd\u51fd\u6570\u53ea\u80fd\u88ab\u672c\u6e90\u6587\u4ef6(\u540c\u4e2atranslation unit)\u4f7f\u7528\uff0c\u901a\u5e38\u7684\u505a\u6cd5\u662f\u4f7f\u7528static\u6765\u4fee\u9970\u8fd9\u4e2a\u53d8\u91cf/\u51fd\u6570\uff0c\u6765\u4fdd\u8bc1\u8fd9\u4e2a\u53d8\u91cf/\u51fd\u6570\u5177\u6709\u5185\u90e8\u94fe\u63a5(internal linkage)\u3002\u8fd9\u79cd\u6280\u672f\u79f0\u4e3a\u4fe1\u606f\u9690\u85cf\u3002 \u5728C++\u4e2d\uff0c\u4ecd\u7136\u652f\u6301\u8fd9\u79cd\u505a\u6cd5\uff0c\u4f46\u662f\u5df2\u7ecf\u4e0d\u63d0\u5021\uff0cC++\u53ea\u63d0\u5021static\u4ec5\u4ec5\u7528\u4e8e\u4fee\u9970\u7c7b\u6210\u5458\uff0c\u4e0d\u518d\u63d0\u5021\u7528static\u6765\u4fee\u9970\u975e\u7c7b\u6210\u5458\u3002\u5728\u4ee5\u540e\u7684\u7f16\u8bd1\u5668\u4e2d\uff0c\u53ef\u80fd\u4f1a\u5bf9\u4f7f\u7528static\u6765\u4fee\u9970\u975e\u7c7b\u6210\u5458\u7684\u65b9\u5f0f\u7ed9\u51fa\u7f16\u8bd1\u8b66\u544a\u3002 2.\u4e0d\u8981\u5728.h\u6587\u4ef6\u4e2d\u4f7f\u7528\u533f\u540d\u547d\u540d\u7a7a\u95f4 \u63d0\u5021\u5728cpp/c\u6e90\u6587\u4ef6\u4e2d\u4f7f\u7528unnamed namespace\uff0c\u4e0d\u8981(\u4e0d\u63d0\u5021)\u5728.h\u6587\u4ef6\u4e2d\u4f7f\u7528\u533f\u540d\u547d\u4ee4\u7a7a\u95f4\uff0c\u56e0\u4e3a\u5176\u5c06\u751f\u6210\u5927\u91cf\u4e0d\u88ab\u4f7f\u7528\u7c7b\u578b\u6216\u8005\u6570\u636e---\u8fd9\u4e9b\u6570\u636e\u4e0d\u662f\u526f\u672c\uff0c\u662f\u5168\u5c40\u552f\u4e00\u7684(\u539f\u56e0\u89c1\u4e0b\u9762)\u3002 \u8fd9\u91cc\u91cd\u63d0\u4e00\u4e0b\uff1a.h\u6587\u4ef6\u4e0e.cpp\u6587\u4ef6\u3002.h\u6587\u4ef6\u4e0d\u662f\u7f16\u8bd1\u5355\u5143\uff0c\u6240\u4ee5\u4e0d\u80fd\u76f4\u63a5\u7f16\u8bd1.h\u6587\u4ef6\uff1b.cpp/.cc\u6587\u4ef6\u624d\u662f\u7f16\u8bd1\u5355\u5143\uff0c\u7f16\u8bd1\u5668\u53ef\u4ee5\u76f4\u63a5\u7f16\u8bd1.cpp/.cc\u6587\u4ef6\u3002\u90a3\u4e48\u5982\u679c\u4e00\u4e2a.cpp\u6587\u4ef6include\u4e86.h\u6587\u4ef6\uff0c\u662f\u4ec0\u4e48\u6548\u679c\u5462\uff1f\u76f4\u767d\u7684\u610f\u601d\u5c31\u662f\uff1a\u628a\u6240\u6709(\u76f4\u63a5/\u95f4\u63a5)include\u7684.h\u7684\u6587\u4ef6\u5185\u5bb9\u76f4\u63a5\u590d\u5236\u5230\u8be5.cpp\u6587\u4ef6\u4e2d\uff0c\u518d\u5bf9\u8be5.cpp\u6587\u4ef6\u7f16\u8bd1\u3002\u8fd9\u5c31\u610f\u5473\u7740\uff0c\u5982\u679c\u5728\u4e00\u4e2a\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e86unnamed namespace\uff0c\u90a3\u4e48\u6240\u6709include\u8be5.h\u7684\u7f16\u8bd1\u5355\u5143(.cpp/.cc\u6587\u4ef6)\uff0c\u90fd\u4f1a\u5b8c\u5168\u5305\u542b\u8be5.h\u6587\u4ef6\u4e2d\u7684\u6240\u6709\u5185\u5bb9\uff0c\u90a3\u4e48\uff0c\u4e00\u4e2a.cpp/.cc\u4e2d\u5305\u542b\u7684\u533f\u540d\u7a7a\u95f4\u91cc\u7684\u6570\u636e\uff0c\u5b83\u81ea\u5df1\u5f53\u7136\u80fd\u8bbf\u95ee\u4e86\u3002\u65e0\u8bba\u5b83\u5177\u6709\u7684\u662f\u5185\u90e8\u94fe\u63a5\u5c5e\u6027\uff0c\u8fd8\u662f\u5916\u90e8\u94fe\u63a5\u5c5e\u6027\uff0c\u90fd\u4e0d\u5f71\u54cd\u8bbf\u95ee\u3002(\u9664\u975e\u5bf9\u8bbf\u95ee\u5bf9\u8c61\u6709\u94fe\u63a5\u5c5e\u6027\u8981\u6c42\u7684\u573a\u666f\uff1a\u6bd4\u5982\u6a21\u5757\u7684\u975e\u7c7b\u578b\u53c2\u6570\uff0d\u6570\u636e\u5b9e\u53c2)\u3002 3.\u5728\u6a21\u677f\u5143\u8bbe\u8ba1\u4e2d\u5c0f\u5fc3\u4f7f\u7528\u533f\u540d\u547d\u540d\u7a7a\u95f4 \u533f\u540d\u7a7a\u95f4\u5177\u6709\u5185\u90e8\u94fe\u63a5\u5c5e\u6027\uff0c\u5176\u5185\u90e8\u5b9a\u4e49\u7684\u51fd\u6570/\u7c7b\u578b/\u53d8\u91cf/\u5e38\u91cf\u5728\u4e0d\u540c\u7684\u7f16\u8bd1\u5355\u5143\u90fd\u662f\u4e0d\u540c\u7684\uff0c\u6240\u4ee5\u5728\u8fdb\u884c\u6a21\u677f\u8bbe\u8ba1\u65f6\uff0c\u5c24\u5176\u8981\u5c0f\u5fc3\uff0c\u4ee5\u9632\u6b62\u4f20\u5165\u7684\u7c7b\u578b\u53c2\u6570\u6765\u81ea\u4e8e\u4e0d\u540c\u7f16\u8bd1\u5355\u5143\u7684\u533f\u540d\u547d\u540d\u7a7a\u95f4\uff0c\u8fd9\u6837\u5f00\u53d1\u8005\u5b57\u9762\u610f\u601d\u770b\u5230\u7684\u662f\u540c\u4e00\u7c7b\u578b\uff0c\u4f46\u662f\u6a21\u677f\u5143\u903b\u8f91\u5904\u7406\u4e2d\uff0c\u7adf\u7136\u662f\u4e0d\u540c\u7684\u7c7b\u578b\uff0c\u5f88\u5bb9\u6613\u88ab\u8ba4\u4e3a\u662f\u7f16\u8bd1\u5668\u7684bug\u3002 \u51fa\u4e8e\u8fd9\u4e2a\u76ee\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5728\u6a21\u677f\u5143\u8bbe\u8ba1\u4e2d\u7981\u6b62\u4f7f\u7528\u533f\u540d\u547d\u540d\u7a7a\u95f4\u3002 \u8fd9\u5176\u5b9e\u662f\u4e0a\u4e00\u6761\u89c4\u5219\u4e2d\u7684\u4e00\u4e2a\u5b9e\u4f8b\uff1a\u56e0\u4e3a\u6a21\u677f\u5143\u4ee3\u7801\u90fd\u662f\u5728.h\u6587\u4ef6\u4e2d\u7684\uff0c\u800c\"\u4e0d\u8981\u5728.h\u6587\u4ef6\u4e2d\u4f7f\u7528\u533f\u540d\u547d\u540d\u7a7a\u95f4\"\u3002","title":"unnamed namespace"},{"location":"C%2B%2B/%E5%B5%8C%E5%85%A5%E5%BC%8F%E6%8C%87%E9%92%88/","text":"\u4e00\u822c\u5e94\u7528\u5728\u5185\u5b58\u6c60\u76f8\u5173\u7684\u4ee3\u7801\u4e2d\uff0c\u6210\u529f\u4f7f\u7528\u5d4c\u5165\u5f0f\u6307\u9488\u6709\u4e2a\u524d\u63d0\u6761\u4ef6\uff1a\u7c7bA\u5bf9\u8c61\u7684sizeof\u5fc5\u987b\u4e0d\u5c0f\u4e8e4\u4e2a\u5b57\u8282 \u5de5\u4f5c\u539f\u7406\uff1a\u501f\u7528A\u5bf9\u8c61\u6240\u5360\u7528\u7684\u5185\u5b58\u7a7a\u95f4\u4e2d\u7684\u524d4\u4e2a\u5b57\u8282\uff0c\u7528\u6765\u94fe\u4f4f\u8fd9\u4e9b\u7a7a\u95f2\u7684\u5185\u5b58\u5757\uff1b \u4f46\u662f\u4e00\u65e6\u67d0\u4e00\u5757\u5185\u5b58\u88ab\u5206\u914d\u51fa\u53bb\uff0c\u90a3\u4e48\u8fd9\u4e2a\u5757\u7684\u524d4\u4e2a\u5b57\u8282\u5c31\u4e0d\u5728\u9700\u8981\u4e86\uff0c\u6b64\u65f6\u8fd94\u4e2a\u5b57\u8282\uff08\u8fd9\u91cc\u76844\u5b57\u8282\u6307\u7684\u662f\u5f53\u524d\u7f16\u8bd1\u5668\u9ed8\u8ba4\u7684\u6307\u9488\u7c7b\u578b\u6240\u5360\u5185\u5b58\u5927\u5c0f\uff09\u53ef\u4ee5\u88ab\u7c7bA\u5bf9\u8c61\u6b63\u5e38\u4f7f\u7528\uff1b namespace _nmsp4 { class myallocator { public: void *allocate(size_t size) { obj *tmplink; if (m_FreePosi == nullptr) { size_t realsize = m_sTrunkCout * size; //\u7533\u8bf7m_TrunkCout\u500d\u5185\u5b58 m_FreePosi = reinterpret_cast<obj *>(malloc(realsize)); //\u8fd9\u91cc\u7684new\u662f\u7cfb\u7edf\u7684new tmplink = m_FreePosi; //\u628a\u5206\u914d\u51fa\u6765\u7684\u8fd9\u5757\u5185\u5b58\uff0c\u5f7c\u6b64\u8981\u8fde\u8d77\u6765\uff0c\u4f9b\u540e\u7eed\u4f7f\u7528 for (int i = 0; i< m_sTrunkCout - 1; ++i) { tmplink->next = reinterpret_cast<obj *>(reinterpret_cast<char *>(tmplink) + size); tmplink = tmplink->next; } tmplink->next = nullptr; } tmplink = m_FreePosi; m_FreePosi = m_FreePosi->next; return tmplink; } void deallocate(void *phead) { reinterpret_cast<obj *>(phead)->next = m_FreePosi; m_FreePosi = reinterpret_cast<obj *>(phead); } private: struct obj { struct obj *next; }; obj* m_FreePosi; int m_sTrunkCout = 5;//\u4e00\u6b21\u5206\u914d\u591a\u5c11\u8be5\u7c7b\u5185\u5b58 }; class A { public: int m_i; int m_j; static myallocator myalloc; static void *operator new(size_t size) { return myalloc.allocate(size); } static void operator delete(void *phead) { myalloc.deallocate(phead); } }; myallocator A::myalloc; void func() { A *mypa[100]; for (int i = 0; i < 15; ++i) { mypa[i] = new A(); printf(\"%p\\n\", mypa[i]); } } } int main() { _nmsp4::func(); return 0; } \u63d0\u793a\uff1a\u5e73\u65f6\u7528 ++i \u800c\u4e0d\u662f i++\u53ef\u4ee5\u5c11\u751f\u6210\u4e00\u6b21\u4e34\u65f6\u5bf9\u8c61\u3002(for\u5faa\u73af\u91cc)","title":"\u5d4c\u5165\u5f0f\u6307\u9488"},{"location":"C%2B%2B/%E5%B8%A6%E6%8C%87%E9%92%88%E7%9A%84%E7%B1%BB%E5%92%8C%E4%B8%8D%E5%B8%A6%E6%8C%87%E9%92%88%E7%9A%84%E7%B1%BB/","text":"\u4e3a\u4ec0\u4e48\u542b\u6307\u9488\u7684\u7c7b\u8981\u91cd\u5199\u62f7\u8d1d\u6784\u9020\u548c\u62f7\u8d1d\u8d4b\u503c\u51fd\u6570\uff1f \u6df1\u62f7\u8d1d\u548c\u6d45\u62f7\u8d1d \u6d45\u62f7\u8d1d String a(\"bing\"); String b(\"bing\"); a = b; \u53ea\u662f\u6539\u53d8\u4e86\u4e00\u4e0b\u6307\u9488\u7684\u6307\u5411,\u5bf9\u8c61a\u548c\u5bf9\u8c61b\u7684\u6307\u9488\u90fd\u6307\u5411\u5b83\uff0c\u901a\u8fc7\u4efb\u610f\u4e00\u4e2a\u6307\u9488\u5bf9\u5176\u4f5c\u4fee\u6539\uff0c\u90fd\u4f1a\u5f71\u54cd\u53e6\u4e00\u4e2a\u7684\u8c03\u7528\u3002\u8fd9\u79cd\u72b6\u51b5\u5c31\u53eb\u4f5c\u6d45\u62f7\u8d1d\u3002 \u6df1\u62f7\u8d1d \u62f7\u8d1d\u6784\u9020\u4f1a\u521b\u5efa\u51fa\u8db3\u591f\u7684\u7a7a\u95f4\uff0c\u6765\u653e\u84dd\u672c\uff0c\u6bd4\u5982\uff1a\u201dString s2(s1)\u201c\u610f\u601d\u662f\u8bf4\uff0c\u4ee5s1\u4e3a\u84dd\u672c\u521b\u5efa\u51fa\u6765\u4e00\u4e2as2;\"String s2 = s1;\"\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u5bf9\u8c61s2,\u5c06s1\u8d4b\u503c\u7ed9\u5b83\uff0c\u65e2\u7136s2\u662f\u65b0\u521b\u5efa\u51fa\u6765\u7684\uff0c\u5c31\u9700\u8981\u53bb\u8c03\u7528\u6784\u9020\u51fd\u6570\u3002 \u62f7\u8d1d\u8d4b\u503c \u5982\u679c\u60f3\u628aa\u4e2d\u7684\u503c\u62f7\u8d1d\u5230b\u4e2d\u53bb\uff0c\u5e94\u8be5\u5206\u4e09\u6b65\uff1a \u7b2c\u4e00\u6b65\uff1a\u628ab\u4e2d\u7684\u6570\u636e\u6e05\u7a7a\uff1b \u7b2c\u4e8c\u6b65\uff1a\u5728b\u4e2d\u5f00\u4e00\u5757\u513f\u53ef\u4ee5\u5bb9\u7eb3a\u4e2d\u8981\u62f7\u8d1d\u8fc7\u53bb\u7684\u6570\u636e\u7684\u7a7a\u95f4\uff1b \u7b2c\u4e09\u6b65\uff1a\u5c06\u653e\u5728a\u4e2d\u7684\u6570\u636e\u62f7\u8d1d\u5230b\u4e2d\u53bb\u3002\u90a3\u4e48\u62f7\u8d1d\u8d4b\u503c\u51fd\u6570\u7684\u8bbe\u8ba1\u601d\u8def\u4e5f\u662f\u5982\u6b64\u7684\uff1a \u62f7\u8d1d\u8d4b\u503c\u51fd\u6570\u8981\u68c0\u6d4b\u81ea\u6211\u8d4b\u503c\u3002","title":"\u5e26\u6307\u9488\u7684\u7c7b\u548c\u4e0d\u5e26\u6307\u9488\u7684\u7c7b"},{"location":"C%2B%2B/%E5%B8%A6%E6%8C%87%E9%92%88%E7%9A%84%E7%B1%BB%E5%92%8C%E4%B8%8D%E5%B8%A6%E6%8C%87%E9%92%88%E7%9A%84%E7%B1%BB/#_1","text":"\u6d45\u62f7\u8d1d String a(\"bing\"); String b(\"bing\"); a = b; \u53ea\u662f\u6539\u53d8\u4e86\u4e00\u4e0b\u6307\u9488\u7684\u6307\u5411,\u5bf9\u8c61a\u548c\u5bf9\u8c61b\u7684\u6307\u9488\u90fd\u6307\u5411\u5b83\uff0c\u901a\u8fc7\u4efb\u610f\u4e00\u4e2a\u6307\u9488\u5bf9\u5176\u4f5c\u4fee\u6539\uff0c\u90fd\u4f1a\u5f71\u54cd\u53e6\u4e00\u4e2a\u7684\u8c03\u7528\u3002\u8fd9\u79cd\u72b6\u51b5\u5c31\u53eb\u4f5c\u6d45\u62f7\u8d1d\u3002 \u6df1\u62f7\u8d1d \u62f7\u8d1d\u6784\u9020\u4f1a\u521b\u5efa\u51fa\u8db3\u591f\u7684\u7a7a\u95f4\uff0c\u6765\u653e\u84dd\u672c\uff0c\u6bd4\u5982\uff1a\u201dString s2(s1)\u201c\u610f\u601d\u662f\u8bf4\uff0c\u4ee5s1\u4e3a\u84dd\u672c\u521b\u5efa\u51fa\u6765\u4e00\u4e2as2;\"String s2 = s1;\"\uff0c\u521b\u5efa\u4e00\u4e2a\u65b0\u5bf9\u8c61s2,\u5c06s1\u8d4b\u503c\u7ed9\u5b83\uff0c\u65e2\u7136s2\u662f\u65b0\u521b\u5efa\u51fa\u6765\u7684\uff0c\u5c31\u9700\u8981\u53bb\u8c03\u7528\u6784\u9020\u51fd\u6570\u3002 \u62f7\u8d1d\u8d4b\u503c \u5982\u679c\u60f3\u628aa\u4e2d\u7684\u503c\u62f7\u8d1d\u5230b\u4e2d\u53bb\uff0c\u5e94\u8be5\u5206\u4e09\u6b65\uff1a \u7b2c\u4e00\u6b65\uff1a\u628ab\u4e2d\u7684\u6570\u636e\u6e05\u7a7a\uff1b \u7b2c\u4e8c\u6b65\uff1a\u5728b\u4e2d\u5f00\u4e00\u5757\u513f\u53ef\u4ee5\u5bb9\u7eb3a\u4e2d\u8981\u62f7\u8d1d\u8fc7\u53bb\u7684\u6570\u636e\u7684\u7a7a\u95f4\uff1b \u7b2c\u4e09\u6b65\uff1a\u5c06\u653e\u5728a\u4e2d\u7684\u6570\u636e\u62f7\u8d1d\u5230b\u4e2d\u53bb\u3002\u90a3\u4e48\u62f7\u8d1d\u8d4b\u503c\u51fd\u6570\u7684\u8bbe\u8ba1\u601d\u8def\u4e5f\u662f\u5982\u6b64\u7684\uff1a \u62f7\u8d1d\u8d4b\u503c\u51fd\u6570\u8981\u68c0\u6d4b\u81ea\u6211\u8d4b\u503c\u3002","title":"\u6df1\u62f7\u8d1d\u548c\u6d45\u62f7\u8d1d"},{"location":"C%2B%2B/%E5%BC%82%E5%B8%B8%E4%BF%9D%E6%8A%A4/","text":"C++ \u5f02\u5e38\u5904\u7406 \u5f02\u5e38\u662f\u7a0b\u5e8f\u5728\u6267\u884c\u671f\u95f4\u4ea7\u751f\u7684\u95ee\u9898\u3002C++ \u5f02\u5e38\u662f\u6307\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u53d1\u751f\u7684\u7279\u6b8a\u60c5\u51b5\uff0c\u6bd4\u5982\u5c1d\u8bd5\u9664\u4ee5\u96f6\u7684\u64cd\u4f5c\u3002 \u5f02\u5e38\u63d0\u4f9b\u4e86\u4e00\u79cd\u8f6c\u79fb\u7a0b\u5e8f\u63a7\u5236\u6743\u7684\u65b9\u5f0f\u3002C++ \u5f02\u5e38\u5904\u7406\u6d89\u53ca\u5230\u4e09\u4e2a\u5173\u952e\u5b57\uff1atry\u3001catch\u3001throw\u3002 try : try \u5757\u4e2d\u7684\u4ee3\u7801\u6807\u8bc6\u5c06\u88ab\u6fc0\u6d3b\u7684\u7279\u5b9a\u5f02\u5e38\u3002\u5b83\u540e\u9762\u901a\u5e38\u8ddf\u7740\u4e00\u4e2a\u6216\u591a\u4e2a catch \u5757\u3002 throw : \u5f53\u95ee\u9898\u51fa\u73b0\u65f6\uff0c\u7a0b\u5e8f\u4f1a\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\u3002\u8fd9\u662f\u901a\u8fc7\u4f7f\u7528 throw \u5173\u952e\u5b57\u6765\u5b8c\u6210\u7684\u3002 catch : \u5728\u60a8\u60f3\u8981\u5904\u7406\u95ee\u9898\u7684\u5730\u65b9\uff0c\u901a\u8fc7\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f\u6355\u83b7\u5f02\u5e38\u3002catch \u5173\u952e\u5b57\u7528\u4e8e\u6355\u83b7\u5f02\u5e38\u3002 try: try \u5757\u4e2d\u7684\u4ee3\u7801\u6807\u8bc6\u5c06\u88ab\u6fc0\u6d3b\u7684\u7279\u5b9a\u5f02\u5e38\u3002\u5b83\u540e\u9762\u901a\u5e38\u8ddf\u7740\u4e00\u4e2a\u6216\u591a\u4e2a catch \u5757\u3002 \u5982\u679c\u6709\u4e00\u4e2a\u5757\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\uff0c\u6355\u83b7\u5f02\u5e38\u7684\u65b9\u6cd5\u4f1a\u4f7f\u7528 try \u548c catch \u5173\u952e\u5b57\u3002try \u5757\u4e2d\u653e\u7f6e\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u7684\u4ee3\u7801\uff0ctry \u5757\u4e2d\u7684\u4ee3\u7801\u88ab\u79f0\u4e3a\u4fdd\u62a4\u4ee3\u7801\u3002\u4f7f\u7528 try/catch \u8bed\u53e5\u7684\u8bed\u6cd5\u5982\u4e0b\u6240\u793a\uff1a","title":"\u5f02\u5e38\u4fdd\u62a4"},{"location":"C%2B%2B/%E5%BC%82%E5%B8%B8%E4%BF%9D%E6%8A%A4/#c","text":"\u5f02\u5e38\u662f\u7a0b\u5e8f\u5728\u6267\u884c\u671f\u95f4\u4ea7\u751f\u7684\u95ee\u9898\u3002C++ \u5f02\u5e38\u662f\u6307\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u53d1\u751f\u7684\u7279\u6b8a\u60c5\u51b5\uff0c\u6bd4\u5982\u5c1d\u8bd5\u9664\u4ee5\u96f6\u7684\u64cd\u4f5c\u3002 \u5f02\u5e38\u63d0\u4f9b\u4e86\u4e00\u79cd\u8f6c\u79fb\u7a0b\u5e8f\u63a7\u5236\u6743\u7684\u65b9\u5f0f\u3002C++ \u5f02\u5e38\u5904\u7406\u6d89\u53ca\u5230\u4e09\u4e2a\u5173\u952e\u5b57\uff1atry\u3001catch\u3001throw\u3002 try : try \u5757\u4e2d\u7684\u4ee3\u7801\u6807\u8bc6\u5c06\u88ab\u6fc0\u6d3b\u7684\u7279\u5b9a\u5f02\u5e38\u3002\u5b83\u540e\u9762\u901a\u5e38\u8ddf\u7740\u4e00\u4e2a\u6216\u591a\u4e2a catch \u5757\u3002 throw : \u5f53\u95ee\u9898\u51fa\u73b0\u65f6\uff0c\u7a0b\u5e8f\u4f1a\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\u3002\u8fd9\u662f\u901a\u8fc7\u4f7f\u7528 throw \u5173\u952e\u5b57\u6765\u5b8c\u6210\u7684\u3002 catch : \u5728\u60a8\u60f3\u8981\u5904\u7406\u95ee\u9898\u7684\u5730\u65b9\uff0c\u901a\u8fc7\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f\u6355\u83b7\u5f02\u5e38\u3002catch \u5173\u952e\u5b57\u7528\u4e8e\u6355\u83b7\u5f02\u5e38\u3002 try: try \u5757\u4e2d\u7684\u4ee3\u7801\u6807\u8bc6\u5c06\u88ab\u6fc0\u6d3b\u7684\u7279\u5b9a\u5f02\u5e38\u3002\u5b83\u540e\u9762\u901a\u5e38\u8ddf\u7740\u4e00\u4e2a\u6216\u591a\u4e2a catch \u5757\u3002 \u5982\u679c\u6709\u4e00\u4e2a\u5757\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\uff0c\u6355\u83b7\u5f02\u5e38\u7684\u65b9\u6cd5\u4f1a\u4f7f\u7528 try \u548c catch \u5173\u952e\u5b57\u3002try \u5757\u4e2d\u653e\u7f6e\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\u7684\u4ee3\u7801\uff0ctry \u5757\u4e2d\u7684\u4ee3\u7801\u88ab\u79f0\u4e3a\u4fdd\u62a4\u4ee3\u7801\u3002\u4f7f\u7528 try/catch \u8bed\u53e5\u7684\u8bed\u6cd5\u5982\u4e0b\u6240\u793a\uff1a","title":"C++ \u5f02\u5e38\u5904\u7406"},{"location":"C%2B%2B/%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/","text":"\u667a\u80fd\u6307\u9488\u4f5c\u7528 \u63d0\u51fa\u667a\u80fd\u6307\u9488\u65f6\u5019\uff0c\u4e0d\u5f97\u4e0d\u63d0\u4e00\u4e0b\u6808\u548c\u5806\u3002\u6211\u4eec\u90fd\u77e5\u9053\uff0c\u6808\u4e0a\u7684\u8d44\u6e90\u662f\u7531\u7cfb\u7edf\u7ba1\u7406\u7684\uff0c\u7533\u8bf7\u548c\u91ca\u653e\u8d44\u6e90\u90fd\u662f\u7531\u6808\u7684\u7b56\u7565\u6765\u8fdb\u884c\u7684\u3002 \u800c\u5806\u4e0a\u7684\u8d44\u6e90\u7533\u8bf7\uff0c\u662f\u7528\u6237\u663e\u793a\u7684\u8c03\u7528\u5173\u952e\u5b57new \u548c delete\u6765\u8fdb\u884c\u7533\u8bf7\u8d44\u6e90\u548c\u91ca\u653e\u8d44\u6e90\uff0c\u8be5\u8d44\u6e90\u7684\u751f\u547d\u5468\u671f\u662f\u6267\u884cnew\u8bed\u53e5\u7533\u8bf7\u8d44\u6e90 \u5230\u6267\u884c delete\u91ca\u653e\u8d44\u6e90\u3002\uff08\u6216\u8005\u7a0b\u5e8f\u7ed3\u675f\u7531\u7cfb\u7edf\u91ca\u653e\u8fd9\u90e8\u5206\u5806\u8d44\u6e90\uff09\u3002 \u8fd9\u65f6\u5019\u6211\u4eec\u5728\u6765\u8c08\u4e00\u4e0b\u667a\u80fd\u6307\u9488\u7684\u4f5c\u7528\u548c\u539f\u7406\u3002 \u667a\u80fd\u6307\u9488\u5c31\u662f\u884c\u4e3a\u7c7b\u4f3c\u6307\u9488\u7684\u6808\u5bf9\u8c61\uff0c\u5e76\u975e\u6307\u9488\u7c7b\u578b\uff0c\u5728\u6808\u5bf9\u8c61\u751f\u547d\u5468\u671f\u5373\u5c06\u7ed3\u675f\u65f6\uff0c\u667a\u80fd\u6307\u9488\u901a\u8fc7\u6790\u6784\u51fd\u6570\u91ca\u653e\u6709\u5b83\u7ba1\u7406\u7684\u5806\u5185\u5b58\u3002\u8fd9\u6837\u5c31\u80fd\u591f\u4e0d\u7528\u624b\u52a8\u91ca\u653e\u5185\u5b58\u4e86\u3002 shared_ptr: \u8ddf\u8e2a\u5f15\u7528\u7279\u5b9a\u5bf9\u8c61\u7684\u667a\u80fd\u6307\u9488\u6570\uff08\u5f15\u7528\u8ba1\u6570\uff09\u3002\u4ec5\u5f53\u6700\u540e\u4e00\u4e2a\u6307\u9488\u8fc7\u671f\u65f6\uff0c\u624d\u8c03\u7528delete\u3002 unique_ptr: \u5efa\u7acb\u6240\u6709\u6743\u6982\u5ff5\uff0c\u5bf9\u4e8e\u7279\u5b9a\u7684\u5bf9\u8c61\uff0c\u53ea\u6709\u4e00\u4e2a\u667a\u80fd\u6307\u9488\u53ef\u4ee5\u62e5\u6709\u5b83\uff0c\u53ea\u6709\u62e5\u6709\u5bf9\u8c61\u7684\u667a\u80fd\u6307\u9488\u624d\u53ef\u4ee5\u91ca\u653e\u5b83\u3002\u5e76\u4e14\uff0c\u8d4b\u503c\u64cd\u4f5c\u5c06\u8f6c\u8ba9\u6240\u6709\u6743\uff0c\u8f6c\u8ba9\u6240\u6709\u6743\u540e\u6307\u9488\u4e0d\u518d\u6307\u5411\u6709\u6548\u6570\u636e\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u5c06\u4f1a\u975e\u5e38\u4e25\u683c\u3002","title":"\u667a\u80fd\u6307\u9488"},{"location":"C%2B%2B/%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/#_1","text":"\u63d0\u51fa\u667a\u80fd\u6307\u9488\u65f6\u5019\uff0c\u4e0d\u5f97\u4e0d\u63d0\u4e00\u4e0b\u6808\u548c\u5806\u3002\u6211\u4eec\u90fd\u77e5\u9053\uff0c\u6808\u4e0a\u7684\u8d44\u6e90\u662f\u7531\u7cfb\u7edf\u7ba1\u7406\u7684\uff0c\u7533\u8bf7\u548c\u91ca\u653e\u8d44\u6e90\u90fd\u662f\u7531\u6808\u7684\u7b56\u7565\u6765\u8fdb\u884c\u7684\u3002 \u800c\u5806\u4e0a\u7684\u8d44\u6e90\u7533\u8bf7\uff0c\u662f\u7528\u6237\u663e\u793a\u7684\u8c03\u7528\u5173\u952e\u5b57new \u548c delete\u6765\u8fdb\u884c\u7533\u8bf7\u8d44\u6e90\u548c\u91ca\u653e\u8d44\u6e90\uff0c\u8be5\u8d44\u6e90\u7684\u751f\u547d\u5468\u671f\u662f\u6267\u884cnew\u8bed\u53e5\u7533\u8bf7\u8d44\u6e90 \u5230\u6267\u884c delete\u91ca\u653e\u8d44\u6e90\u3002\uff08\u6216\u8005\u7a0b\u5e8f\u7ed3\u675f\u7531\u7cfb\u7edf\u91ca\u653e\u8fd9\u90e8\u5206\u5806\u8d44\u6e90\uff09\u3002 \u8fd9\u65f6\u5019\u6211\u4eec\u5728\u6765\u8c08\u4e00\u4e0b\u667a\u80fd\u6307\u9488\u7684\u4f5c\u7528\u548c\u539f\u7406\u3002 \u667a\u80fd\u6307\u9488\u5c31\u662f\u884c\u4e3a\u7c7b\u4f3c\u6307\u9488\u7684\u6808\u5bf9\u8c61\uff0c\u5e76\u975e\u6307\u9488\u7c7b\u578b\uff0c\u5728\u6808\u5bf9\u8c61\u751f\u547d\u5468\u671f\u5373\u5c06\u7ed3\u675f\u65f6\uff0c\u667a\u80fd\u6307\u9488\u901a\u8fc7\u6790\u6784\u51fd\u6570\u91ca\u653e\u6709\u5b83\u7ba1\u7406\u7684\u5806\u5185\u5b58\u3002\u8fd9\u6837\u5c31\u80fd\u591f\u4e0d\u7528\u624b\u52a8\u91ca\u653e\u5185\u5b58\u4e86\u3002 shared_ptr: \u8ddf\u8e2a\u5f15\u7528\u7279\u5b9a\u5bf9\u8c61\u7684\u667a\u80fd\u6307\u9488\u6570\uff08\u5f15\u7528\u8ba1\u6570\uff09\u3002\u4ec5\u5f53\u6700\u540e\u4e00\u4e2a\u6307\u9488\u8fc7\u671f\u65f6\uff0c\u624d\u8c03\u7528delete\u3002 unique_ptr: \u5efa\u7acb\u6240\u6709\u6743\u6982\u5ff5\uff0c\u5bf9\u4e8e\u7279\u5b9a\u7684\u5bf9\u8c61\uff0c\u53ea\u6709\u4e00\u4e2a\u667a\u80fd\u6307\u9488\u53ef\u4ee5\u62e5\u6709\u5b83\uff0c\u53ea\u6709\u62e5\u6709\u5bf9\u8c61\u7684\u667a\u80fd\u6307\u9488\u624d\u53ef\u4ee5\u91ca\u653e\u5b83\u3002\u5e76\u4e14\uff0c\u8d4b\u503c\u64cd\u4f5c\u5c06\u8f6c\u8ba9\u6240\u6709\u6743\uff0c\u8f6c\u8ba9\u6240\u6709\u6743\u540e\u6307\u9488\u4e0d\u518d\u6307\u5411\u6709\u6548\u6570\u636e\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u5c06\u4f1a\u975e\u5e38\u4e25\u683c\u3002","title":"\u667a\u80fd\u6307\u9488\u4f5c\u7528"},{"location":"C%2B%2B/%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E5%92%8C%E6%9E%90%E6%9E%84%E5%87%BD%E6%95%B0%E8%83%BD%E5%90%A6%E5%A3%B0%E6%98%8E%E4%B8%BA%E8%99%9A%E5%87%BD%E6%95%B0/","text":"\u6784\u9020\u51fd\u6570\u4e0d\u80fd\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff0c\u5728\u6267\u884c\u6784\u9020\u51fd\u6570\u524d\u5bf9\u8c61\u5c1a\u672a\u5b8c\u6210\u521b\u5efa\uff0c\u865a\u51fd\u6570\u8868\u8fd8\u4e0d\u5b58\u5728\u3002 \u6790\u6784\u51fd\u6570\u53ef\u4ee5\u88ab\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff0c\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u4e00\u822c\u5efa\u8bae\u58f0\u660e\u4e3a\u865a\u51fd\u6570\u3002 Example\uff1a #include <iostream> using namespace std; class base { public: base() { cout << \"base constructor\" << endl; int *b = new int[5]; } ~base() { cout << \"base destructor\" << endl; delete[] b; } private: int *b; }; class derived : public base { public: derived() { cout << \"derived constructor\" << endl; int *d = new int[8]; } ~derived() { cout << \"derived destructor\" << endl; delete[] d; } private: int *d; }; int main() { base *pBase = new derived; cout << \"---\" << endl; delete pBase; return 0; } //output base constructor derived constructor --- base destructor \u4e0a\u9762\u5b9a\u4e49\u4e86\u4e24\u4e2a\u7c7b\uff1a\u4e00\u4e2a\u57fa\u7c7bbase\uff0c\u4e00\u4e2a\u6d3e\u751f\u7c7bderived\u3002 \u57fa\u7c7b\u548c\u6d3e\u751f\u7c7b\u90fd\u5206\u522b\u5b9a\u4e49\u4e86\u5404\u81ea\u7684\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u3002 \u57fa\u7c7b\u548c\u6d3e\u751f\u7c7b\u4e2d\u5404\u6709\u4e00\u4e2aint\u578b\u6307\u9488\u6210\u5458\u53d8\u91cf\uff1a \u5728\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u7ed9\u6307\u9488\u53d8\u91cfb\u5206\u914d\u4e865\u4e2aint\u578b\u7a7a\u95f4\uff1b\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u7528\u4e8e\u5c06b\u6240\u6307\u7684\u7a7a\u95f4\u91ca\u653e\u6389\uff1b \u5728\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e2d\uff0c\u6307\u9488\u6210\u5458\u53d8\u91cfd\u88ab\u5206\u914d\u4e868\u4e2aint\u578b\u7a7a\u95f4\uff1b\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\u662f\u4e3a\u4e86\u91ca\u653e\u6389d\u6307\u9488\u6240\u6307\u5411\u7684\u5b58\u50a8\u7a7a\u95f4\u3002 \u5728\u4e3b\u51fd\u6570\u4e2d\u521b\u5efa\u4e00\u4e2a\u57fa\u7c7b\u7c7b\u578b\u7684\u6307\u9488pBase\uff0c\u6307\u5411\u4e00\u4e2a\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff0c\u4e4b\u540e\u91ca\u653e\u6389pBase\u6307\u9488\u6240\u6307\u5411\u7684\u5bf9\u8c61\u7684\u5b58\u50a8\u7a7a\u95f4\u3002 \u9996\u5148\uff0c\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u88ab\u8c03\u7528\uff08base constructor\uff09\uff1b \u5176\u6b21\uff0c\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e5f\u88ab\u8c03\u7528\uff08derived constructor\uff09\uff1b \u6700\u540e\uff0c\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u88ab\u8c03\u7528\uff08base destructor\uff09\u3002 \u4f46\u662f\u5374\u6ca1\u6709\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\uff0c\u8fd9\u6837\u4f1a\u5bfc\u81f4d\u6307\u9488\u6240\u6307\u5411\u7684\u6574\u578b\u5b58\u50a8\u7a7a\u95f4\u4e0d\u4f1a\u88ab\u91ca\u653e\uff0c\u4ece\u800c\u9020\u6210\u5185\u5b58\u6cc4\u6f0f\u3002 \u9700\u8981\u5c06\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u58f0\u660e\u4e3a\u865a\u51fd\u6570\u3002 virtual ~base() { cout << \"base destructor\" << endl; delete[] b; } \u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u58f0\u660e\u4e3a\u865a\u51fd\u6570\u4e4b\u540e\uff0c\u5b50\u7c7b\u7684\u6790\u6784\u51fd\u6570\u4e5f\u81ea\u52a8\u6210\u4e3a\u865a\u6790\u6784\u51fd\u6570\uff0c\u5728\u4e3b\u51fd\u6570\u4e2d\u57fa\u7c7b\u6307\u9488pBase\u6307\u5411\u7684\u662f\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff0c\u5f53delete\u91ca\u653epBase\u6307\u9488\u6240\u6307\u5411\u7684\u5b58\u50a8\u7a7a\u95f4\u65f6\uff0c \u9996\u5148\u6267\u884c\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\uff08derived destructor\uff09\uff1b \u7136\u540e\u6267\u884c\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\uff08base destructor\uff09\u3002 \u7efc\u4e0a\u6240\u8ff0\uff0c\u5c06\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u8bbe\u4e3a\u865a\u51fd\u6570\uff0c\u53ef\u4ee5\u4fdd\u8bc1\u6d3e\u751f\u7c7b\u88ab\u6b63\u786e\u5730\u91ca\u653e\u3002","title":"\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u80fd\u5426\u58f0\u660e\u4e3a\u865a\u51fd\u6570"},{"location":"C%2B%2B/%E6%9E%9A%E4%B8%BE%E7%B1%BB%E5%9E%8B/","text":"enum <\u7c7b\u578b\u540d> {<\u679a\u4e3e\u5e38\u91cf\u8868>}; \u8bf4\u660e\uff1a \u5173\u952e\u5b57enum\u2014\u2014\u6307\u660e\u5176\u540e\u7684\u6807\u8bc6\u7b26\u662f\u4e00\u4e2a\u679a\u4e3e\u7c7b\u578b\u7684\u540d\u5b57\u3002 \u679a\u4e3e\u5e38\u91cf\u8868\u2014\u2014\u7531\u679a\u4e3e\u5e38\u91cf\u6784\u6210\u3002\"\u679a\u4e3e\u5e38\u91cf\"\u6216\u79f0\"\u679a\u4e3e\u6210\u5458\"\uff0c\u662f\u4ee5\u6807\u8bc6\u7b26\u5f62\u5f0f\u8868\u793a\u7684\u6574\u578b\u91cf\uff0c\u8868\u793a\u679a\u4e3e\u7c7b\u578b\u7684\u53d6\u503c\u3002\u679a\u4e3e\u5e38\u91cf\u8868\u5217\u51fa\u679a\u4e3e\u7c7b\u578b\u7684\u6240\u6709\u53d6\u503c\uff0c\u5404\u679a\u4e3e\u5e38\u91cf\u4e4b\u95f4\u4ee5\"\uff0c\"\u95f4\u9694\uff0c\u4e14\u5fc5\u987b\u5404\u4e0d\u76f8\u540c\u3002\u53d6\u503c\u7c7b\u578b\u4e0e\u6761\u4ef6\u8868\u8fbe\u5f0f\u76f8\u540c\u3002 enum color_set1 {RED, BLUE, WHITE, BLACK}; // \u5b9a\u4e49\u679a\u4e3e\u7c7b\u578bcolor_set1 enum week {Sun, Mon, Tue, Wed, Thu, Fri, Sat}; // \u5b9a\u4e49\u679a\u4e3e\u7c7b\u578bweek \u63d0\u793a\uff1a \u679a\u4e3e\u5e38\u91cf\u4ee3\u8868\u8be5\u679a\u4e3e\u7c7b\u578b\u7684\u53d8\u91cf\u53ef\u80fd\u53d6\u7684\u503c\uff0c\u7f16\u8bd1\u7cfb\u7edf\u4e3a\u6bcf\u4e2a\u679a\u4e3e\u5e38\u91cf\u6307\u5b9a\u4e00\u4e2a\u6574\u6570\u503c\uff0c\u9ed8\u8ba4\u72b6\u6001\u4e0b\uff0c\u8fd9\u4e2a\u6574\u6570\u5c31\u662f\u6240\u5217\u4e3e\u5143\u7d20\u7684\u5e8f\u53f7\uff0c\u5e8f\u53f7\u4ece0\u5f00\u59cb\u3002 \u53ef\u4ee5\u5728\u5b9a\u4e49\u679a\u4e3e\u7c7b\u578b\u65f6\u4e3a\u90e8\u5206\u6216\u5168\u90e8\u679a\u4e3e\u5e38\u91cf\u6307\u5b9a\u6574\u6570\u503c \uff0c\u5728\u6307\u5b9a\u503c \u4e4b\u524d \u7684\u679a\u4e3e\u5e38\u91cf\u4ecd\u6309\u9ed8\u8ba4\u65b9\u5f0f\u53d6\u503c\uff0c\u800c\u6307\u5b9a\u503c \u4e4b\u540e \u7684\u679a\u4e3e\u5e38\u91cf\u6309\u4f9d\u6b21\u52a01\u7684\u539f\u5219\u53d6\u503c\u3002 \u5404\u679a\u4e3e\u5e38\u91cf\u7684\u503c\u53ef\u4ee5\u91cd\u590d\u3002\u4f8b\u5982\uff1a enum fruit_set {apple, orange, banana=1, peach, grape} //\u679a\u4e3e\u5e38\u91cfapple=0,orange=1, banana=1,peach=2,grape=3\u3002 enum week {Sun=7, Mon=1, Tue, Wed, Thu, Fri, Sat}; //\u679a\u4e3e\u5e38\u91cfSun,Mon,Tue,Wed,Thu,Fri,Sat\u7684\u503c\u5206\u522b\u4e3a7\u30011\u30012\u30013\u30014\u30015\u30016\u3002 \u679a\u4e3e\u5e38\u91cf\u53ea\u80fd\u4ee5\u6807\u8bc6\u7b26\u5f62\u5f0f\u8868\u793a \uff0c\u800c\u4e0d\u80fd\u662f\u6574\u578b\u3001\u5b57\u7b26\u578b\u7b49\u6587\u5b57\u5e38\u91cf enum letter_set {'a','d','F','s','T'}; //\u679a\u4e3e\u5e38\u91cf\u4e0d\u80fd\u662f\u5b57\u7b26\u5e38\u91cf enum year_set{2000,2001,2002,2003,2004,2005}; //\u679a\u4e3e\u5e38\u91cf\u4e0d\u80fd\u662f\u6574\u578b\u5e38\u91cf \u4f7f\u7528 \u5b9a\u4e49\u679a\u4e3e\u7c7b\u578b\u7684\u4e3b\u8981\u76ee\u7684\u662f\uff1a\u589e\u52a0\u7a0b\u5e8f\u7684\u53ef\u8bfb\u6027\u3002\u679a\u4e3e\u7c7b\u578b\u6700\u5e38\u89c1\u4e5f\u6700\u6709\u610f\u4e49\u7684\u7528\u5904\u4e4b\u4e00\u5c31\u662f\u7528\u6765\u63cf\u8ff0\u72b6\u6001\u91cf\uff0c\u8fd9\u70b9\u5c06\u5728\u7b2c9\u7ae0 \u8f93\u5165\u8f93\u51fa\u6d41\u7c7b\u770b\u5230\u3002 \u5b9a\u4e49\u683c\u5f0f\uff1a\u5b9a\u4e49\u679a\u4e3e\u7c7b\u578b\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u5b9a\u4e49\u8be5\u679a\u4e3e\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u5982\uff1a color_set1 color1, color2; \u4ea6\u53ef\u7c7b\u578b\u4e0e\u53d8\u91cf\u540c\u65f6\u5b9a\u4e49\uff08\u751a\u81f3\u7c7b\u578b\u540d\u53ef\u7701\uff09\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a enum {Sun,Mon,Tue,Wed,Thu,Fri,Sat} weekday1, weekday2;","title":"\u679a\u4e3e\u7c7b\u578b"},{"location":"C%2B%2B/%E7%90%86%E8%A7%A3%E5%A4%9A%E6%80%81/","text":"A* P=new B; //A\u662f\u7236\u7c7b,B\u662f\u5b50\u7c7b \u867d\u7136P\u662f\u4e00\u4e2a\u57fa\u7c7b\u7684\u6307\u9488\u3002\u4f46\u662fnew B\u8c03\u7528\u7684\u662f\u6d3e\u751f\u7c7bB\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u6240\u4ee5\u6784\u9020\u7684\u662fB\u7c7b\u5bf9\u8c61\u3002\u5148\u8c03\u7528A\u7684\u6784\u9020\u51fd\u6570\uff0c\u518d\u8c03\u7528B\u7684\u6784\u9020\u51fd\u6570\u3002\u6784\u9020\u5b8c\u540e\u4f1a\u8fd4\u56deB\u7c7b\u5bf9\u8c61\u7684\u5730\u5740\uff0c\u7136\u540e\u5c06\u5b83\u8d4b\u7ed9\u4e00\u4e2a\u57fa\u7c7b\u6307\u9488P\u3002 B* q=new B;//\u8fd9\u91cc\u548c\u4e0a\u9762\u552f\u4e00\u7684\u533a\u522b\u5c31\u662f\uff0c\u5c06B\u7c7b\u5bf9\u8c61\u7684\u5730\u5740\u8d4b\u7ed9\u4e86\u6d3e\u751f\u7c7b\u6307\u9488q \u800c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a\u53ef\u4ee5\u5c06\u4e00\u4e2a\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u5730\u5740\u8d4b\u7ed9\u57fa\u7c7b\u6307\u9488\u548c\u6d3e\u751f\u7c7b\u6307\u9488\uff0c\u800c\u4e00\u4e2a\u57fa\u7c7b\u5bf9\u8c61\u7684\u5730\u5740\u53ea\u80fd\u8d4b\u7ed9\u57fa\u7c7b\u6307\u9488\uff0c\u4e0d\u80fd\u8d4b\u7ed9\u6d3e\u751f\u7c7b\u7684\u6307\u9488\u3002\u56e0\u4e3a\u6d3e\u751f\u7c7b\u4e0d\u4f46\u62e5\u6709\u57fa\u7c7b\u7684\u65b9\u6cd5\u5c5e\u6027\uff0c\u8fd8\u6709\u57fa\u7c7b\u6ca1\u6709\u7684\u5c5e\u6027\u65b9\u6cd5\u3002 \u5c06\u4e00\u4e2a\u5730\u5740\u8d4b\u7ed9\u4e00\u4e2a\u6307\u9488\u524d\uff0c\u901a\u5e38\u4f1a\u5c06\u8be5\u5730\u5740\u5904\u7684\u5bf9\u8c61\u7c7b\u578b\u8f6c\u6362\u4e3a\u6307\u9488\u6240\u6307\u7684\u7c7b\u578b\u3002\u800c\u5c06\u4e00\u4e2a\u57fa\u7c7b\u5730\u5740\u8d4b\u7ed9\u4e00\u4e2a\u6d3e\u751f\u7c7b\u6307\u9488\u662f\u4e0d\u5141\u8bb8\u7684\uff0c\u5982\u679c\u53ef\u4ee5\u7684\u8bdd\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6307\u9488\u5c31\u53ef\u4ee5\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u65b9\u6cd5\u548c\u5c5e\u6027\u3002\u4f46\u6307\u9488\u6307\u5411\u7684\u662f\u4e00\u4e2a\u57fa\u7c7b\u5bf9\u8c61\uff0c\u800c\u57fa\u7c7b\u53ef\u80fd\u5e76\u6ca1\u6709\u8fd9\u4e9b\u65b9\u6cd5\u548c\u5c5e\u6027\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u65b9\u6cd5\u548c\u5c5e\u6027\u662f\u6d3e\u751f\u7c7b\u65b0\u589e\u7684\uff0c\u6240\u4ee5\uff0c\u57fa\u7c7b\u5730\u5740\u8d4b\u7ed9\u4e00\u4e2a\u6d3e\u751f\u7c7b\u6307\u9488\u662f\u4e0d\u5141\u8bb8\u7684\u3002\u4f46\u5c06\u4e00\u4e2a\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u5730\u5740\u8d4b\u7ed9\u4e00\u4e2a\u57fa\u7c7b\u6307\u9488\u662f\u53ef\u4ee5\u7684\uff0c\u56e0\u4e3a\uff0c\u57fa\u7c7b\u6307\u9488\u80fd\u8c03\u7528\u7684\u65b9\u6cd5\u548c\u5c5e\u6027\uff0c\u6d3e\u751f\u7c7b\u90fd\u6709\uff0c\u6240\u4ee5\u5e76\u4e0d\u4f1a\u6709\u4ec0\u4e48\u95ee\u9898\u3002 \u52a8\u6001\u591a\u6001 \u5b50\u7c7b\u91cd\u5199\u865a\u51fd\u6570\u4ee5\u5b8c\u6210\u5177\u4f53\u529f\u80fd\uff0c\u7528\u6237\u901a\u8fc7\u6307\u5411\u57fa\u7c7b\u7684\u5f15\u7528\u6216\u6307\u9488\u6765\u64cd\u4f5c\u8fd9\u4e9b\u5bf9\u8c61\uff0c\u5bf9\u865a\u51fd\u6570\u7684\u8c03\u7528\u4f1a\u81ea\u52a8\u7ed1\u5b9a\u5230\u5b9e\u9645\u63d0\u4f9b\u7684\u5b50\u7c7b\u5bf9\u8c61\u4e0a\u53bb\u3002 \u52a8\u6001\u591a\u6001\u662f\u5728\u8fd0\u884c\u65f6\u5b8c\u6210\u7684\u3002 namespace DynamicPoly { class Geometry // base class { public: virtual void Draw()const = 0; }; class Line : public Geometry // 1 { public: virtual void Draw()const{ std::cout << \"Line Draw()\\n\"; } }; class Circle : public Geometry // 2 { public: virtual void Draw()const{ std::cout << \"Circle Draw()\\n\"; } }; class Rectangle : public Geometry // 3 { public: virtual void Draw()const{ std::cout << \"Rectangle Draw()\\n\"; } }; void DrawGeometry(const Geometry *geo) // \u57fa\u7c7b\u6307\u9488 { geo->Draw(); // \u591a\u6001 } //\u52a8\u6001\u591a\u6001\u6700\u5438\u5f15\u4eba\u4e4b\u5904\u5728\u4e8e\u5904\u7406\u5f02\u8d28\u5bf9\u8c61\u96c6\u5408\u7684\u80fd\u529b void DrawGeometry(std::vector<DynamicPoly::Geometry*> vecGeo) { const size_t size = vecGeo.size(); for(size_t i = 0; i < size; ++i) vecGeo[i]->Draw(); } } void test_dynamic_polymorphism() { DynamicPoly::Line line; DynamicPoly::Circle circle; DynamicPoly::Rectangle rect; DynamicPoly::DrawGeometry(&circle); // circle::draw std::vector<DynamicPoly::Geometry*> vec; vec.push_back(&line); vec.push_back(&circle); vec.push_back(&rect); DynamicPoly::DrawGeometry(vec); } \u9759\u6001\u591a\u6001 \u7f16\u8bd1\u671f\u591a\u6001\u3002 \u9759\u6001\u591a\u6001\u672c\u8d28\u4e0a\u662f\u6a21\u677f\u7684\u5177\u73b0\u5316\uff0c \u4f8b\uff1a template<typename Widget,typename Other> void DoSomething(Widget& w, const Other& someNasty) { if( w.size() > 0 && w != someNasty) //someNastyT\u53ef\u80fd\u662f\u662fT\u7c7b\u578b\u7684\u67d0\u4e00\u5b9e\u4f8b\uff0c\u4e5f\u53ef\u80fd\u4e0d\u662f { Widget temp(w); temp.normalize(); temp.swap(w); } } \u4ee3\u7801\u8981\u6c42\uff1a \u7c7b\u578bT\u652f\u6301size\u3001normalize\u3001swap\u3001\u62f7\u8d1d\u6784\u9020\u3001!=\u8fd0\u7b97\u7b26 \u7c7b\u578bT\u5728\u7f16\u8bd1\u6a21\u677f\u8fdb\u884c\u5177\u73b0\u5316\u65f6\u624d\u8868\u73b0\u4e3a\u8c03\u7528\u4e0d\u540c\u51fd\u6570 Reference https://www.cnblogs.com/lizhenghn/p/3667681.html","title":"\u7406\u89e3\u591a\u6001"},{"location":"C%2B%2B/%E7%90%86%E8%A7%A3%E5%A4%9A%E6%80%81/#_1","text":"\u5b50\u7c7b\u91cd\u5199\u865a\u51fd\u6570\u4ee5\u5b8c\u6210\u5177\u4f53\u529f\u80fd\uff0c\u7528\u6237\u901a\u8fc7\u6307\u5411\u57fa\u7c7b\u7684\u5f15\u7528\u6216\u6307\u9488\u6765\u64cd\u4f5c\u8fd9\u4e9b\u5bf9\u8c61\uff0c\u5bf9\u865a\u51fd\u6570\u7684\u8c03\u7528\u4f1a\u81ea\u52a8\u7ed1\u5b9a\u5230\u5b9e\u9645\u63d0\u4f9b\u7684\u5b50\u7c7b\u5bf9\u8c61\u4e0a\u53bb\u3002 \u52a8\u6001\u591a\u6001\u662f\u5728\u8fd0\u884c\u65f6\u5b8c\u6210\u7684\u3002 namespace DynamicPoly { class Geometry // base class { public: virtual void Draw()const = 0; }; class Line : public Geometry // 1 { public: virtual void Draw()const{ std::cout << \"Line Draw()\\n\"; } }; class Circle : public Geometry // 2 { public: virtual void Draw()const{ std::cout << \"Circle Draw()\\n\"; } }; class Rectangle : public Geometry // 3 { public: virtual void Draw()const{ std::cout << \"Rectangle Draw()\\n\"; } }; void DrawGeometry(const Geometry *geo) // \u57fa\u7c7b\u6307\u9488 { geo->Draw(); // \u591a\u6001 } //\u52a8\u6001\u591a\u6001\u6700\u5438\u5f15\u4eba\u4e4b\u5904\u5728\u4e8e\u5904\u7406\u5f02\u8d28\u5bf9\u8c61\u96c6\u5408\u7684\u80fd\u529b void DrawGeometry(std::vector<DynamicPoly::Geometry*> vecGeo) { const size_t size = vecGeo.size(); for(size_t i = 0; i < size; ++i) vecGeo[i]->Draw(); } } void test_dynamic_polymorphism() { DynamicPoly::Line line; DynamicPoly::Circle circle; DynamicPoly::Rectangle rect; DynamicPoly::DrawGeometry(&circle); // circle::draw std::vector<DynamicPoly::Geometry*> vec; vec.push_back(&line); vec.push_back(&circle); vec.push_back(&rect); DynamicPoly::DrawGeometry(vec); }","title":"\u52a8\u6001\u591a\u6001"},{"location":"C%2B%2B/%E7%90%86%E8%A7%A3%E5%A4%9A%E6%80%81/#_2","text":"\u7f16\u8bd1\u671f\u591a\u6001\u3002 \u9759\u6001\u591a\u6001\u672c\u8d28\u4e0a\u662f\u6a21\u677f\u7684\u5177\u73b0\u5316\uff0c \u4f8b\uff1a template<typename Widget,typename Other> void DoSomething(Widget& w, const Other& someNasty) { if( w.size() > 0 && w != someNasty) //someNastyT\u53ef\u80fd\u662f\u662fT\u7c7b\u578b\u7684\u67d0\u4e00\u5b9e\u4f8b\uff0c\u4e5f\u53ef\u80fd\u4e0d\u662f { Widget temp(w); temp.normalize(); temp.swap(w); } } \u4ee3\u7801\u8981\u6c42\uff1a \u7c7b\u578bT\u652f\u6301size\u3001normalize\u3001swap\u3001\u62f7\u8d1d\u6784\u9020\u3001!=\u8fd0\u7b97\u7b26 \u7c7b\u578bT\u5728\u7f16\u8bd1\u6a21\u677f\u8fdb\u884c\u5177\u73b0\u5316\u65f6\u624d\u8868\u73b0\u4e3a\u8c03\u7528\u4e0d\u540c\u51fd\u6570","title":"\u9759\u6001\u591a\u6001"},{"location":"C%2B%2B/%E7%90%86%E8%A7%A3%E5%A4%9A%E6%80%81/#reference","text":"https://www.cnblogs.com/lizhenghn/p/3667681.html","title":"Reference"},{"location":"C%2B%2B/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/","text":"const_cast const\u4fee\u9970\u51fd\u6570\u8fd4\u56de\u503c\u8868\u793a\u8fd4\u56de\u503c\u4e0d\u53ef\u6539\u53d8,\u591a\u7528\u4e8e\u8fd4\u56de\u6307\u9488\u7684\u60c5\u5f62 1\u3001\u5e38\u91cf\u6307\u9488\u88ab\u8f6c\u5316\u6210\u975e\u5e38\u91cf\u7684\u6307\u9488\uff0c\u5e76\u4e14\u4ecd\u7136\u6307\u5411\u539f\u6765\u7684\u5bf9\u8c61\uff1b 2\u3001\u5e38\u91cf\u5f15\u7528\u88ab\u8f6c\u6362\u6210\u975e\u5e38\u91cf\u7684\u5f15\u7528\uff0c\u5e76\u4e14\u4ecd\u7136\u6307\u5411\u539f\u6765\u7684\u5bf9\u8c61\uff1b 3\u3001const_cast\u4e00\u822c\u7528\u4e8e\u4fee\u6539\u6307\u9488\u3002\u5982const char *p\u5f62\u5f0f\uff1b const int a = 233; int &b = const_cast<int&>(a); //\u53bbconst\u5f15\u7528 int *c = const_cast<int*>(&a); //\u53bbconst\u6307\u9488 static_cast 1\u3001static_cast \u4f5c\u7528\u548cC\u8bed\u8a00\u98ce\u683c\u5f3a\u5236\u8f6c\u6362\u7684\u6548\u679c\u57fa\u672c\u4e00\u6837\uff0c\u7531\u4e8e\u6ca1\u6709\u8fd0\u884c\u65f6\u7c7b\u578b\u68c0\u67e5\u6765\u4fdd\u8bc1\u8f6c\u6362\u7684\u5b89\u5168\u6027\uff0c\u6240\u4ee5\u8fd9\u7c7b\u578b\u7684\u5f3a\u5236\u8f6c\u6362\u548cC\u8bed\u8a00\u98ce\u683c\u7684\u5f3a\u5236\u8f6c\u6362\u90fd\u6709\u5b89\u5168\u9690\u60a3\u3002 2\u3001\u7528\u4e8e\u7c7b\u5c42\u6b21\u7ed3\u6784\u4e2d\u57fa\u7c7b\uff08\u7236\u7c7b\uff09\u548c\u6d3e\u751f\u7c7b\uff08\u5b50\u7c7b\uff09\u4e4b\u95f4\u6307\u9488\u6216\u5f15\u7528\u7684\u8f6c\u6362\u3002\u6ce8\u610f\uff1a\u8fdb\u884c \u4e0a\u884c\u8f6c\u6362 \uff08\u628a\u6d3e\u751f\u7c7b\u7684\u6307\u9488\u6216\u5f15\u7528\u8f6c\u6362\u6210\u57fa\u7c7b\u8868\u793a\uff09\u662f\u5b89\u5168\u7684\uff1b\u8fdb\u884c \u4e0b\u884c\u8f6c\u6362 \uff08\u628a\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8f6c\u6362\u6210\u6d3e\u751f\u7c7b\u8868\u793a\uff09\u65f6\uff0c\u7531\u4e8e\u6ca1\u6709\u52a8\u6001\u7c7b\u578b\u68c0\u67e5\uff0c\u6240\u4ee5\u662f\u4e0d\u5b89\u5168\u7684\u3002 \u8f6c\u6362\u81ea\u5b9a\u4e49\u7c7b\u578b\uff0c\u53ea\u6709\u5728\u76f8\u4e92\u8054\u7cfb\uff08\u7ee7\u627f\uff09\u7684\u7c7b\u578b\u4e4b\u95f4\u624d\u80fd\u8fdb\u884c\u8f6c\u6362 \u3002 dynamic_cast 1\u3001\u5176\u4ed6\u4e09\u79cd\u90fd\u662f\u7f16\u8bd1\u65f6\u5b8c\u6210\u7684\u3002dynamic_cast\u662f\u8fd0\u884c\u65f6\u5904\u7406\u7684\uff0c\u8fd0\u884c\u65f6\u8981\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\u3002 2\u3001\u4e0d\u80fd\u7528\u4e8e\u5185\u7f6e\u57fa\u672c\u6570\u636e\u7c7b\u578b\u95f4\u7684\u5f3a\u5236\u8f6c\u6362\u3002\u4f8b\u5982\uff1a double dValue = 12.12; int nDValue = dynamic_cast<int>(dValue); // error C2680 : \u201cint\u201d : dynamic_cast \u7684\u76ee\u6807\u7c7b\u578b\u65e0\u6548\u3002\u76ee\u6807\u7c7b\u578b\u5fc5\u987b\u662f\u6307\u5411\u5df2\u5b9a\u4e49\u7c7b\u7684\u6307\u9488\u6216\u5f15\u7528 3\u3001\u4f7f\u7528dynamic_cast\u8fdb\u884c\u8f6c\u6362\u65f6\uff0c\u57fa\u7c7b\u4e2d\u4e00\u5b9a\u8981\u6709\u865a\u51fd\u6570\uff0c\u5426\u5219\u7f16\u8bd1\u4e0d\u901a\u8fc7\u3002 \u539f\u56e0\uff1a\u7c7b\u4e2d\u5b58\u5728\u865a\u51fd\u6570\uff0c\u5c31\u8bf4\u660e\u5b83\u6709\u60f3\u8981\u8ba9\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u5fc5\u8981\uff0c\u6b64\u65f6\u8f6c\u6362\u624d\u6709\u610f\u4e49\u3002 \u7531\u4e8e\u8fd0\u884c\u65f6\u7c7b\u578b\u68c0\u67e5\u9700\u8981\u8fd0\u884c\u65f6\u7c7b\u578b\u4fe1\u606f\uff0c\u800c\u8fd9\u4e2a\u4fe1\u606f\u5b58\u50a8\u5728\u7c7b\u7684\u865a\u51fd\u6570\u8868\u4e2d\uff0c\u53ea\u6709\u5b9a\u4e49\u4e86\u865a\u51fd\u6570\u7684\u7c7b\u624d\u6709\u865a\u51fd\u6570\u8868\u3002 4\u3001dynamic_cast\u8f6c\u6362\u82e5\u6210\u529f\uff0c\u8fd4\u56de\u7684\u662f\u6307\u5411\u7c7b\u7684\u6307\u9488\u6216\u5f15\u7528\uff1b\u82e5\u5931\u8d25\u5219\u4f1a\u8fd4\u56deNULL\u3002 5\u3001\u5728\u7c7b\u7684\u8f6c\u6362\u65f6\uff0c\u5728\u7c7b\u5c42\u6b21\u95f4\u8fdb\u884c\u4e0a\u884c\u8f6c\u6362\u65f6\uff0cdynamic_cast\u548cstatic_cast\u7684\u6548\u679c\u662f\u4e00\u6837\u7684\u3002 \u5728\u8fdb\u884c\u4e0b\u884c\u8f6c\u6362\u65f6\uff0cdynamic_cast\u5177\u6709\u7c7b\u578b\u68c0\u67e5\u7684\u529f\u80fd\uff0c\u6bd4static_cast\u66f4\u5b89\u5168\u3002 \u5411\u4e0a\u8f6c\u6362\u5373\u4e3a\u6307\u5411\u5b50\u7c7b\u5bf9\u8c61\u7684\u5411\u4e0a\u8f6c\u6362\uff0c\u5373\u5c06\u5b50\u7c7b\u6307\u9488\u8f6c\u5316\u7236\u7c7b\u6307\u9488\u3002 \u5411\u4e0b\u8f6c\u6362\u7684\u6210\u8d25\u53d6\u51b3\u4e8e\u5c06\u8981\u8f6c\u6362\u7684\u7c7b\u578b\uff0c\u5373\u8981\u5f3a\u5236\u8f6c\u6362\u7684\u6307\u9488\u6240\u6307\u5411\u7684\u5bf9\u8c61\u5b9e\u9645\u7c7b\u578b\u4e0e\u5c06\u8981\u8f6c\u6362\u540e\u7684\u7c7b\u578b\u4e00\u5b9a\u8981\u76f8\u540c\uff0c\u5426\u5219\u8f6c\u6362\u5931\u8d25\u3002 reinterpret_cast","title":"\u7c7b\u578b\u8f6c\u6362"},{"location":"C%2B%2B/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/#const_cast","text":"const\u4fee\u9970\u51fd\u6570\u8fd4\u56de\u503c\u8868\u793a\u8fd4\u56de\u503c\u4e0d\u53ef\u6539\u53d8,\u591a\u7528\u4e8e\u8fd4\u56de\u6307\u9488\u7684\u60c5\u5f62 1\u3001\u5e38\u91cf\u6307\u9488\u88ab\u8f6c\u5316\u6210\u975e\u5e38\u91cf\u7684\u6307\u9488\uff0c\u5e76\u4e14\u4ecd\u7136\u6307\u5411\u539f\u6765\u7684\u5bf9\u8c61\uff1b 2\u3001\u5e38\u91cf\u5f15\u7528\u88ab\u8f6c\u6362\u6210\u975e\u5e38\u91cf\u7684\u5f15\u7528\uff0c\u5e76\u4e14\u4ecd\u7136\u6307\u5411\u539f\u6765\u7684\u5bf9\u8c61\uff1b 3\u3001const_cast\u4e00\u822c\u7528\u4e8e\u4fee\u6539\u6307\u9488\u3002\u5982const char *p\u5f62\u5f0f\uff1b const int a = 233; int &b = const_cast<int&>(a); //\u53bbconst\u5f15\u7528 int *c = const_cast<int*>(&a); //\u53bbconst\u6307\u9488","title":"const_cast"},{"location":"C%2B%2B/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/#static_cast","text":"1\u3001static_cast \u4f5c\u7528\u548cC\u8bed\u8a00\u98ce\u683c\u5f3a\u5236\u8f6c\u6362\u7684\u6548\u679c\u57fa\u672c\u4e00\u6837\uff0c\u7531\u4e8e\u6ca1\u6709\u8fd0\u884c\u65f6\u7c7b\u578b\u68c0\u67e5\u6765\u4fdd\u8bc1\u8f6c\u6362\u7684\u5b89\u5168\u6027\uff0c\u6240\u4ee5\u8fd9\u7c7b\u578b\u7684\u5f3a\u5236\u8f6c\u6362\u548cC\u8bed\u8a00\u98ce\u683c\u7684\u5f3a\u5236\u8f6c\u6362\u90fd\u6709\u5b89\u5168\u9690\u60a3\u3002 2\u3001\u7528\u4e8e\u7c7b\u5c42\u6b21\u7ed3\u6784\u4e2d\u57fa\u7c7b\uff08\u7236\u7c7b\uff09\u548c\u6d3e\u751f\u7c7b\uff08\u5b50\u7c7b\uff09\u4e4b\u95f4\u6307\u9488\u6216\u5f15\u7528\u7684\u8f6c\u6362\u3002\u6ce8\u610f\uff1a\u8fdb\u884c \u4e0a\u884c\u8f6c\u6362 \uff08\u628a\u6d3e\u751f\u7c7b\u7684\u6307\u9488\u6216\u5f15\u7528\u8f6c\u6362\u6210\u57fa\u7c7b\u8868\u793a\uff09\u662f\u5b89\u5168\u7684\uff1b\u8fdb\u884c \u4e0b\u884c\u8f6c\u6362 \uff08\u628a\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8f6c\u6362\u6210\u6d3e\u751f\u7c7b\u8868\u793a\uff09\u65f6\uff0c\u7531\u4e8e\u6ca1\u6709\u52a8\u6001\u7c7b\u578b\u68c0\u67e5\uff0c\u6240\u4ee5\u662f\u4e0d\u5b89\u5168\u7684\u3002 \u8f6c\u6362\u81ea\u5b9a\u4e49\u7c7b\u578b\uff0c\u53ea\u6709\u5728\u76f8\u4e92\u8054\u7cfb\uff08\u7ee7\u627f\uff09\u7684\u7c7b\u578b\u4e4b\u95f4\u624d\u80fd\u8fdb\u884c\u8f6c\u6362 \u3002","title":"static_cast"},{"location":"C%2B%2B/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/#dynamic_cast","text":"1\u3001\u5176\u4ed6\u4e09\u79cd\u90fd\u662f\u7f16\u8bd1\u65f6\u5b8c\u6210\u7684\u3002dynamic_cast\u662f\u8fd0\u884c\u65f6\u5904\u7406\u7684\uff0c\u8fd0\u884c\u65f6\u8981\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\u3002 2\u3001\u4e0d\u80fd\u7528\u4e8e\u5185\u7f6e\u57fa\u672c\u6570\u636e\u7c7b\u578b\u95f4\u7684\u5f3a\u5236\u8f6c\u6362\u3002\u4f8b\u5982\uff1a double dValue = 12.12; int nDValue = dynamic_cast<int>(dValue); // error C2680 : \u201cint\u201d : dynamic_cast \u7684\u76ee\u6807\u7c7b\u578b\u65e0\u6548\u3002\u76ee\u6807\u7c7b\u578b\u5fc5\u987b\u662f\u6307\u5411\u5df2\u5b9a\u4e49\u7c7b\u7684\u6307\u9488\u6216\u5f15\u7528 3\u3001\u4f7f\u7528dynamic_cast\u8fdb\u884c\u8f6c\u6362\u65f6\uff0c\u57fa\u7c7b\u4e2d\u4e00\u5b9a\u8981\u6709\u865a\u51fd\u6570\uff0c\u5426\u5219\u7f16\u8bd1\u4e0d\u901a\u8fc7\u3002 \u539f\u56e0\uff1a\u7c7b\u4e2d\u5b58\u5728\u865a\u51fd\u6570\uff0c\u5c31\u8bf4\u660e\u5b83\u6709\u60f3\u8981\u8ba9\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u5fc5\u8981\uff0c\u6b64\u65f6\u8f6c\u6362\u624d\u6709\u610f\u4e49\u3002 \u7531\u4e8e\u8fd0\u884c\u65f6\u7c7b\u578b\u68c0\u67e5\u9700\u8981\u8fd0\u884c\u65f6\u7c7b\u578b\u4fe1\u606f\uff0c\u800c\u8fd9\u4e2a\u4fe1\u606f\u5b58\u50a8\u5728\u7c7b\u7684\u865a\u51fd\u6570\u8868\u4e2d\uff0c\u53ea\u6709\u5b9a\u4e49\u4e86\u865a\u51fd\u6570\u7684\u7c7b\u624d\u6709\u865a\u51fd\u6570\u8868\u3002 4\u3001dynamic_cast\u8f6c\u6362\u82e5\u6210\u529f\uff0c\u8fd4\u56de\u7684\u662f\u6307\u5411\u7c7b\u7684\u6307\u9488\u6216\u5f15\u7528\uff1b\u82e5\u5931\u8d25\u5219\u4f1a\u8fd4\u56deNULL\u3002 5\u3001\u5728\u7c7b\u7684\u8f6c\u6362\u65f6\uff0c\u5728\u7c7b\u5c42\u6b21\u95f4\u8fdb\u884c\u4e0a\u884c\u8f6c\u6362\u65f6\uff0cdynamic_cast\u548cstatic_cast\u7684\u6548\u679c\u662f\u4e00\u6837\u7684\u3002 \u5728\u8fdb\u884c\u4e0b\u884c\u8f6c\u6362\u65f6\uff0cdynamic_cast\u5177\u6709\u7c7b\u578b\u68c0\u67e5\u7684\u529f\u80fd\uff0c\u6bd4static_cast\u66f4\u5b89\u5168\u3002 \u5411\u4e0a\u8f6c\u6362\u5373\u4e3a\u6307\u5411\u5b50\u7c7b\u5bf9\u8c61\u7684\u5411\u4e0a\u8f6c\u6362\uff0c\u5373\u5c06\u5b50\u7c7b\u6307\u9488\u8f6c\u5316\u7236\u7c7b\u6307\u9488\u3002 \u5411\u4e0b\u8f6c\u6362\u7684\u6210\u8d25\u53d6\u51b3\u4e8e\u5c06\u8981\u8f6c\u6362\u7684\u7c7b\u578b\uff0c\u5373\u8981\u5f3a\u5236\u8f6c\u6362\u7684\u6307\u9488\u6240\u6307\u5411\u7684\u5bf9\u8c61\u5b9e\u9645\u7c7b\u578b\u4e0e\u5c06\u8981\u8f6c\u6362\u540e\u7684\u7c7b\u578b\u4e00\u5b9a\u8981\u76f8\u540c\uff0c\u5426\u5219\u8f6c\u6362\u5931\u8d25\u3002","title":"dynamic_cast"},{"location":"C%2B%2B/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/#reinterpret_cast","text":"","title":"reinterpret_cast"},{"location":"C%2B%2B/%E9%87%8E%E6%8C%87%E9%92%88%E8%A3%B8%E6%8C%87%E9%92%88%E6%9E%90%E6%9E%84/","text":"\u91ce\u6307\u9488 \u6307\u9488\u6307\u5411\u4e86\u4e00\u5757\u968f\u673a\u7684\u7a7a\u95f4\uff0c\u4e0d\u53d7\u7a0b\u5e8f\u63a7\u5236\u3002 1.\u6307\u9488\u5b9a\u4e49\u65f6\u672a\u88ab\u521d\u59cb\u5316\uff1a\u6307\u9488\u5728\u88ab\u5b9a\u4e49\u7684\u65f6\u5019\uff0c\u5982\u679c\u7a0b\u5e8f\u4e0d\u5bf9\u5176\u8fdb\u884c\u521d\u59cb\u5316\u7684\u8bdd\uff0c\u5b83\u4f1a\u968f\u673a\u6307\u5411\u4e00\u4e2a\u533a\u57df\uff0c\u56e0\u4e3a\u4efb\u610f\u6307\u9488\u53d8\u91cf\uff08\u51fa\u4e86static\u4fee\u9970\u7684\u6307\u9488\uff09\u5b83\u7684\u9ed8\u8ba4\u503c\u90fd\u662f\u968f\u673a\u7684 2.\u6307\u9488\u88ab\u91ca\u653e\u65f6\u6ca1\u6709\u7f6e\u7a7a\uff1a\u6211\u4eec\u5728\u7528malloc\uff08\uff09\u5f00\u8f9f\u7a7a\u95f4\u7684\u65f6\u5019\uff0c\u8981\u68c0\u67e5\u8fd4\u56de\u503c\u662f\u5426\u4e3a\u7a7a\uff0c\u5982\u679c\u4e3a\u7a7a\uff0c\u5219\u5f00\u8f9f\u5931\u8d25\uff1b\u5982\u679c\u4e0d\u4e3a\u7a7a\uff0c\u5219\u6307\u9488\u6307\u5411\u7684\u662f\u5f00\u8f9f\u7684\u5185\u5b58\u7a7a\u95f4\u7684\u9996\u5730\u5740\u3002\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4\u5728\u7528free()\u548cdelete\u91ca\u653e\u540e\uff0c\u5982\u679c\u7a0b\u5e8f\u5458\u6ca1\u6709\u5bf9\u5176\u8fdb\u884c\u7f6e\u7a7a\u6216\u8005\u5176\u4ed6\u8d4b\u503c\u64cd\u4f5c\u7684\u8bdd\uff0c\u5c31\u4f1a\u6210\u4e3a\u4e00\u4e2a\u91ce\u6307\u9488 3.\u6307\u9488\u64cd\u4f5c\u8d85\u8d8a\u53d8\u91cf\u4f5c\u7528\u57df\uff1a\u4e0d\u8981\u8fd4\u56de\u6307\u5411\u6808\u5185\u5b58\u7684\u6307\u9488\u6216\u8005\u5f15\u7528\uff0c\u56e0\u4e3a\u6808\u5185\u5b58\u5728\u51fd\u6570\u7ed3\u675f\u7684\u65f6\u5019\u4f1a\u88ab\u91ca\u653e\u3002 class A { public: void Func(void){ cout << \u201cFunc of class A\u201d << endl; } }; class B { public: A *p; void Test(void) { A a; p = &a; // \u6ce8\u610fa\u7684\u751f\u547d\u671f \uff0c\u53ea\u5728\u8fd9\u4e2a\u51fd\u6570Test\u4e2d\uff0c\u800c\u4e0d\u662f\u6574\u4e2aclass B } void Test1() { p->Func(); // p \u662f\u201c\u91ce\u6307\u9488\u201d } }; \u88f8\u6307\u9488 #include <memory> struct X { int a,b,c; }; int main() { std::shared_ptr<X> sp(new X); X* np = new X; delete np; } np\u662f\u6307\u5411X\u7c7b\u578b\u5bf9\u8c61\u7684\u6307\u9488-\u5982\u679c\u60a8\u5df2\u52a8\u6001\u5206\u914d(\u65b0\u7684/ malloc)\u8be5\u5bf9\u8c61,\u5219\u5fc5\u987b\u5220\u9664/\u91ca\u653e\u8be5\u5bf9\u8c61\u2026\u50cfnp\u8fd9\u6837\u7684\u7b80\u5355\u6307\u9488\u79f0\u4e3a\u201c\u88f8\u6307\u9488\u201d. sp\u662f\u4e00\u4e2a\u6301\u6709\u6307\u5411\u6258\u7ba1\u8d44\u6e90\u7684\u6307\u9488\u7684\u5bf9\u8c61,\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u50cf\u4f7f\u7528np\u4e00\u6837\u4f7f\u7528\u5b83,\u4f46\u662f\u5f53\u4e0d\u5b58\u5728\u62e5\u6709\u6b64\u8d44\u6e90\u7684shared_ptr\u5bf9\u8c61\u65f6,\u8be5\u8d44\u6e90\u5c06\u88ab\u91ca\u653e,\u56e0\u6b64\u60a8\u4e0d\u5fc5\u5220\u9664\u5b83.\u667a\u80fd\u6307\u9488\u8d1f\u8d23\u5185\u5b58\u7ba1\u7406,\u56e0\u6b64\u60a8\u4e0d\u5fc5;) delete\u505a\u4e86\u4e24\u4ef6\u4e8b\uff0c\u8c03\u7528\u6790\u6784\u548cfree\u5185\u5b58\u3002 \u6790\u6784\u51fd\u6570 \u6790\u6784\u6240\u5c5e\u90a3\u4e2a\u5bf9\u8c61\u7684\u5185\u5b58\uff0c\u6839\u672c\u4e0d\u662f\u7531\u6790\u6784\u51fd\u6570\u91ca\u653e\u7684\uff0c\u800c\u662f\u540e\u9762\u7684free\uff0c\u56e0\u4e3a\u4f60\u90a3\u4e2a\u5bf9\u8c61\u7684\u5185\u5b58\u5e03\u5c40\u662f\u7f16\u8bd1\u65f6\u5c31\u786e\u5b9a\u4e0b\u6765\u4e86\u7684\uff0c\u6240\u4ee5\u4ec5\u5bf9\u4e8e\u8fd9\u4e2a\u6790\u6784\u6240\u5c5e\u7684\u5bf9\u8c61\u6765\u8bf4\uff0c\u54ea\u6015\u6ca1\u6709\u6790\u6784\u51fd\u6570\uff0c\u5185\u5b58\u4f9d\u65e7\u53ef\u4ee5\u6b63\u786e\u91ca\u653e\u3002 \u4f46\u6790\u6784\u6709\u4ec0\u4e48\u7528\u5462\uff1f\u90a3\u662f\u56e0\u4e3a\u5982\u679c\u4f60\u90a3\u4e2a\u5bf9\u8c61\u53c8\u6301\u6709\u4e86\u5176\u4ed6\u8d44\u6e90\uff0c\u6bd4\u5982\u5176\u4ed6new\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u6587\u4ef6\u53e5\u67c4\uff0c\u4e92\u65a5\u91cf\u7b49\uff0c\u90a3\u4e9b\u8d44\u6e90\u7f16\u8bd1\u5668\u4e0d\u77e5\u9053\u8be5\u5982\u4f55\u91ca\u653e\u5b83\u4eec\uff0c\u90a3\u5c31\u5f97\u9760\u4f60\u7684\u6790\u6784\u6765\u6b63\u786e\u91ca\u653e\u4e86\u3002 \u6307\u9488\u53d8\u91cf\u672c\u8eab\u662f\u4e2asize_t\u5927\u5c0f\u7684\u6574\u5f62\uff0c\u6bd4\u5982\u4f60\u7684class\u6210\u5458\u53ea\u6709\u4e00\u4e2a\u6307\u9488\uff0c\u572832\u4f4d\u7cfb\u7edf\u4e0a\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u5360\u75284\u5b57\u8282\u5185\u5b58\uff0c\u4f60delete\u6389\u4ee5\u540e\uff0c\u8fd94\u4e2a\u5b57\u8282\u4f1a\u91ca\u653e\u6389\u3002\u5982\u679c\u201c\u5bf9\u8c61\u7684\u5185\u5b58\u7a7a\u95f4\u201d\u6307\u7684\u662f\u8fd9\u4e2a\u5bf9\u8c61\u672c\u8eab\u5360\u7528\u7684\u7a7a\u95f4\uff0c\u5c31\u662fsizeof(object)\uff0c\u90a3\u4e48\u7684\u786e\u88ab\u91ca\u653e\u6389\u4e86\u3002\u4f46\u901a\u8fc7\u6307\u9488\u7533\u8bf7\u7684\u7a7a\u95f4\u5e76\u6ca1\u6709\u88ab\u91ca\u653e\uff0c\u8fd9\u91cc\u51fa\u73b0\u4e86\u5185\u5b58\u6cc4\u6f0f\u3002\u6240\u6709\u88f8\u6307\u9488\uff0c\u90fd\u9700\u8981\u624b\u52a8delete\u3002 #include<iostream> #include<cstring> using namespace std; char* getname(void); int main(void) { char* name; name = getname(); cout << \"The length of \" << name << \" is \" << strlen(name) << endl; delete [] name; name = getname(); cout << \"The length of \" << name << \" is \" << strlen(name) << endl; delete [] name; system(\"pause\"); } char* getname() { char temp[80]; cout << \"Enter last name: \"; cin >> temp; char* pn = new char[strlen(temp)+1]; strcpy(pn, temp); return pn; } \u5728\u7c7bA\u7684\u6790\u6784\u51fd\u6570\u4e2d\uff0cdelete\u4e00\u4e2a\u975eA\u7c7b\u5bf9\u8c61\u901a\u5e38\u662f\u6ca1\u6709\u95ee\u9898\u7684\u3002\u4f46\u662f\uff0c \u5728\u7c7bA\u7684\u6790\u6784\u51fd\u6570\u4e2d\uff0cdelete\u4e00\u4e2a\u7c7bA\u7684\u5bf9\u8c61\uff0c\u5c31\u4f1a\u9020\u6210\u6b7b\u5faa\u73af\uff0c\u4e5f\u5c31\u662f\u8bf4\u662f\u4e0d\u53ef\u4ee5\u7684\u3002 delete\u548cnew\u7684\u64cd\u4f5c\u987a\u5e8f\u76f8\u53cd\uff0c\u5148\u8c03\u7528\u6790\u6784\u51fd\u6570\uff0c\u518d\u91ca\u653e\u8fd9\u5757\u5185\u5b58\u3002 // \u8003\u8651\u5728\u6790\u6784\u51fd\u6570\u4e2d\u8c03\u7528delete this\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48 #include <iostream> using namespace std; class foo { private: int a; public: foo() { a = 10; } ~foo() { a = 0; cout << \"a\u7684\u503c\u662f \" << a << endl; cout << \"this\u4fdd\u5b58\u7684\u5730\u5740\u662f \" << this << endl; delete this; cout << \"a\u7684\u503c\u662f \" << a << endl; cout << \"this\u4fdd\u5b58\u7684\u5730\u5740\u662f \" << this << endl; } }; int main(int argc, char const *argv[]) { foo* f = new foo(); delete f; return 0; } \u5728\u6790\u6784\u51fd\u6570\u4e2d\u8c03\u7528delete\uff0cdelete\u53c8\u53bb\u8c03\u7528\u6790\u6784\u51fd\u6570\uff0c\u6b7b\u5faa\u73af\u3002","title":"\u91ce\u6307\u9488\u88f8\u6307\u9488\u6790\u6784"},{"location":"C%2B%2B/%E9%87%8E%E6%8C%87%E9%92%88%E8%A3%B8%E6%8C%87%E9%92%88%E6%9E%90%E6%9E%84/#_1","text":"\u6307\u9488\u6307\u5411\u4e86\u4e00\u5757\u968f\u673a\u7684\u7a7a\u95f4\uff0c\u4e0d\u53d7\u7a0b\u5e8f\u63a7\u5236\u3002 1.\u6307\u9488\u5b9a\u4e49\u65f6\u672a\u88ab\u521d\u59cb\u5316\uff1a\u6307\u9488\u5728\u88ab\u5b9a\u4e49\u7684\u65f6\u5019\uff0c\u5982\u679c\u7a0b\u5e8f\u4e0d\u5bf9\u5176\u8fdb\u884c\u521d\u59cb\u5316\u7684\u8bdd\uff0c\u5b83\u4f1a\u968f\u673a\u6307\u5411\u4e00\u4e2a\u533a\u57df\uff0c\u56e0\u4e3a\u4efb\u610f\u6307\u9488\u53d8\u91cf\uff08\u51fa\u4e86static\u4fee\u9970\u7684\u6307\u9488\uff09\u5b83\u7684\u9ed8\u8ba4\u503c\u90fd\u662f\u968f\u673a\u7684 2.\u6307\u9488\u88ab\u91ca\u653e\u65f6\u6ca1\u6709\u7f6e\u7a7a\uff1a\u6211\u4eec\u5728\u7528malloc\uff08\uff09\u5f00\u8f9f\u7a7a\u95f4\u7684\u65f6\u5019\uff0c\u8981\u68c0\u67e5\u8fd4\u56de\u503c\u662f\u5426\u4e3a\u7a7a\uff0c\u5982\u679c\u4e3a\u7a7a\uff0c\u5219\u5f00\u8f9f\u5931\u8d25\uff1b\u5982\u679c\u4e0d\u4e3a\u7a7a\uff0c\u5219\u6307\u9488\u6307\u5411\u7684\u662f\u5f00\u8f9f\u7684\u5185\u5b58\u7a7a\u95f4\u7684\u9996\u5730\u5740\u3002\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\u7a7a\u95f4\u5728\u7528free()\u548cdelete\u91ca\u653e\u540e\uff0c\u5982\u679c\u7a0b\u5e8f\u5458\u6ca1\u6709\u5bf9\u5176\u8fdb\u884c\u7f6e\u7a7a\u6216\u8005\u5176\u4ed6\u8d4b\u503c\u64cd\u4f5c\u7684\u8bdd\uff0c\u5c31\u4f1a\u6210\u4e3a\u4e00\u4e2a\u91ce\u6307\u9488 3.\u6307\u9488\u64cd\u4f5c\u8d85\u8d8a\u53d8\u91cf\u4f5c\u7528\u57df\uff1a\u4e0d\u8981\u8fd4\u56de\u6307\u5411\u6808\u5185\u5b58\u7684\u6307\u9488\u6216\u8005\u5f15\u7528\uff0c\u56e0\u4e3a\u6808\u5185\u5b58\u5728\u51fd\u6570\u7ed3\u675f\u7684\u65f6\u5019\u4f1a\u88ab\u91ca\u653e\u3002 class A { public: void Func(void){ cout << \u201cFunc of class A\u201d << endl; } }; class B { public: A *p; void Test(void) { A a; p = &a; // \u6ce8\u610fa\u7684\u751f\u547d\u671f \uff0c\u53ea\u5728\u8fd9\u4e2a\u51fd\u6570Test\u4e2d\uff0c\u800c\u4e0d\u662f\u6574\u4e2aclass B } void Test1() { p->Func(); // p \u662f\u201c\u91ce\u6307\u9488\u201d } };","title":"\u91ce\u6307\u9488"},{"location":"C%2B%2B/%E9%87%8E%E6%8C%87%E9%92%88%E8%A3%B8%E6%8C%87%E9%92%88%E6%9E%90%E6%9E%84/#_2","text":"#include <memory> struct X { int a,b,c; }; int main() { std::shared_ptr<X> sp(new X); X* np = new X; delete np; } np\u662f\u6307\u5411X\u7c7b\u578b\u5bf9\u8c61\u7684\u6307\u9488-\u5982\u679c\u60a8\u5df2\u52a8\u6001\u5206\u914d(\u65b0\u7684/ malloc)\u8be5\u5bf9\u8c61,\u5219\u5fc5\u987b\u5220\u9664/\u91ca\u653e\u8be5\u5bf9\u8c61\u2026\u50cfnp\u8fd9\u6837\u7684\u7b80\u5355\u6307\u9488\u79f0\u4e3a\u201c\u88f8\u6307\u9488\u201d. sp\u662f\u4e00\u4e2a\u6301\u6709\u6307\u5411\u6258\u7ba1\u8d44\u6e90\u7684\u6307\u9488\u7684\u5bf9\u8c61,\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u50cf\u4f7f\u7528np\u4e00\u6837\u4f7f\u7528\u5b83,\u4f46\u662f\u5f53\u4e0d\u5b58\u5728\u62e5\u6709\u6b64\u8d44\u6e90\u7684shared_ptr\u5bf9\u8c61\u65f6,\u8be5\u8d44\u6e90\u5c06\u88ab\u91ca\u653e,\u56e0\u6b64\u60a8\u4e0d\u5fc5\u5220\u9664\u5b83.\u667a\u80fd\u6307\u9488\u8d1f\u8d23\u5185\u5b58\u7ba1\u7406,\u56e0\u6b64\u60a8\u4e0d\u5fc5;) delete\u505a\u4e86\u4e24\u4ef6\u4e8b\uff0c\u8c03\u7528\u6790\u6784\u548cfree\u5185\u5b58\u3002","title":"\u88f8\u6307\u9488"},{"location":"C%2B%2B/%E9%87%8E%E6%8C%87%E9%92%88%E8%A3%B8%E6%8C%87%E9%92%88%E6%9E%90%E6%9E%84/#_3","text":"\u6790\u6784\u6240\u5c5e\u90a3\u4e2a\u5bf9\u8c61\u7684\u5185\u5b58\uff0c\u6839\u672c\u4e0d\u662f\u7531\u6790\u6784\u51fd\u6570\u91ca\u653e\u7684\uff0c\u800c\u662f\u540e\u9762\u7684free\uff0c\u56e0\u4e3a\u4f60\u90a3\u4e2a\u5bf9\u8c61\u7684\u5185\u5b58\u5e03\u5c40\u662f\u7f16\u8bd1\u65f6\u5c31\u786e\u5b9a\u4e0b\u6765\u4e86\u7684\uff0c\u6240\u4ee5\u4ec5\u5bf9\u4e8e\u8fd9\u4e2a\u6790\u6784\u6240\u5c5e\u7684\u5bf9\u8c61\u6765\u8bf4\uff0c\u54ea\u6015\u6ca1\u6709\u6790\u6784\u51fd\u6570\uff0c\u5185\u5b58\u4f9d\u65e7\u53ef\u4ee5\u6b63\u786e\u91ca\u653e\u3002 \u4f46\u6790\u6784\u6709\u4ec0\u4e48\u7528\u5462\uff1f\u90a3\u662f\u56e0\u4e3a\u5982\u679c\u4f60\u90a3\u4e2a\u5bf9\u8c61\u53c8\u6301\u6709\u4e86\u5176\u4ed6\u8d44\u6e90\uff0c\u6bd4\u5982\u5176\u4ed6new\u5bf9\u8c61\u7684\u6307\u9488\uff0c\u6587\u4ef6\u53e5\u67c4\uff0c\u4e92\u65a5\u91cf\u7b49\uff0c\u90a3\u4e9b\u8d44\u6e90\u7f16\u8bd1\u5668\u4e0d\u77e5\u9053\u8be5\u5982\u4f55\u91ca\u653e\u5b83\u4eec\uff0c\u90a3\u5c31\u5f97\u9760\u4f60\u7684\u6790\u6784\u6765\u6b63\u786e\u91ca\u653e\u4e86\u3002 \u6307\u9488\u53d8\u91cf\u672c\u8eab\u662f\u4e2asize_t\u5927\u5c0f\u7684\u6574\u5f62\uff0c\u6bd4\u5982\u4f60\u7684class\u6210\u5458\u53ea\u6709\u4e00\u4e2a\u6307\u9488\uff0c\u572832\u4f4d\u7cfb\u7edf\u4e0a\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u5360\u75284\u5b57\u8282\u5185\u5b58\uff0c\u4f60delete\u6389\u4ee5\u540e\uff0c\u8fd94\u4e2a\u5b57\u8282\u4f1a\u91ca\u653e\u6389\u3002\u5982\u679c\u201c\u5bf9\u8c61\u7684\u5185\u5b58\u7a7a\u95f4\u201d\u6307\u7684\u662f\u8fd9\u4e2a\u5bf9\u8c61\u672c\u8eab\u5360\u7528\u7684\u7a7a\u95f4\uff0c\u5c31\u662fsizeof(object)\uff0c\u90a3\u4e48\u7684\u786e\u88ab\u91ca\u653e\u6389\u4e86\u3002\u4f46\u901a\u8fc7\u6307\u9488\u7533\u8bf7\u7684\u7a7a\u95f4\u5e76\u6ca1\u6709\u88ab\u91ca\u653e\uff0c\u8fd9\u91cc\u51fa\u73b0\u4e86\u5185\u5b58\u6cc4\u6f0f\u3002\u6240\u6709\u88f8\u6307\u9488\uff0c\u90fd\u9700\u8981\u624b\u52a8delete\u3002 #include<iostream> #include<cstring> using namespace std; char* getname(void); int main(void) { char* name; name = getname(); cout << \"The length of \" << name << \" is \" << strlen(name) << endl; delete [] name; name = getname(); cout << \"The length of \" << name << \" is \" << strlen(name) << endl; delete [] name; system(\"pause\"); } char* getname() { char temp[80]; cout << \"Enter last name: \"; cin >> temp; char* pn = new char[strlen(temp)+1]; strcpy(pn, temp); return pn; } \u5728\u7c7bA\u7684\u6790\u6784\u51fd\u6570\u4e2d\uff0cdelete\u4e00\u4e2a\u975eA\u7c7b\u5bf9\u8c61\u901a\u5e38\u662f\u6ca1\u6709\u95ee\u9898\u7684\u3002\u4f46\u662f\uff0c \u5728\u7c7bA\u7684\u6790\u6784\u51fd\u6570\u4e2d\uff0cdelete\u4e00\u4e2a\u7c7bA\u7684\u5bf9\u8c61\uff0c\u5c31\u4f1a\u9020\u6210\u6b7b\u5faa\u73af\uff0c\u4e5f\u5c31\u662f\u8bf4\u662f\u4e0d\u53ef\u4ee5\u7684\u3002 delete\u548cnew\u7684\u64cd\u4f5c\u987a\u5e8f\u76f8\u53cd\uff0c\u5148\u8c03\u7528\u6790\u6784\u51fd\u6570\uff0c\u518d\u91ca\u653e\u8fd9\u5757\u5185\u5b58\u3002 // \u8003\u8651\u5728\u6790\u6784\u51fd\u6570\u4e2d\u8c03\u7528delete this\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48 #include <iostream> using namespace std; class foo { private: int a; public: foo() { a = 10; } ~foo() { a = 0; cout << \"a\u7684\u503c\u662f \" << a << endl; cout << \"this\u4fdd\u5b58\u7684\u5730\u5740\u662f \" << this << endl; delete this; cout << \"a\u7684\u503c\u662f \" << a << endl; cout << \"this\u4fdd\u5b58\u7684\u5730\u5740\u662f \" << this << endl; } }; int main(int argc, char const *argv[]) { foo* f = new foo(); delete f; return 0; } \u5728\u6790\u6784\u51fd\u6570\u4e2d\u8c03\u7528delete\uff0cdelete\u53c8\u53bb\u8c03\u7528\u6790\u6784\u51fd\u6570\uff0c\u6b7b\u5faa\u73af\u3002","title":"\u6790\u6784\u51fd\u6570"},{"location":"C%2B%2B/%E7%BD%91%E8%AF%BE%E6%80%BB%E7%BB%93/%E4%BE%AF%E6%8D%B7C%2B%2B2.0%E6%96%B0%E7%89%B9%E6%80%A7/","text":"\u8bed\u8a00 Variadic Templates nullptr/auto Uniform Initialization \u5728C++11\u4e4b\u524d\uff0c\u521d\u59cb\u5316\u53ef\u80fd\u53d1\u751f\u5728\u5c0f\u62ec\u53f7 \u5927\u62ec\u53f7 \u590d\u5236\u7b26\u53f7\u3002 \u73b0\u5728\u5168\u90e8\u90fd\u53ef\u4ee5\u4f7f\u7528\u5927\u62ec\u53f7\u3002 \u7f16\u8bd1\u5668\u770b\u5230{...},\u5c31\u505a\u51fa\u4e00\u4e2ainitializer_list ,\u5173\u8054\u5230\u4e00\u4e2aarray \u3002\u8c03\u7528\u51fd\u6570\uff08\u5982ctor\uff09\u65f6array\u5185\u7684\u5143\u7d20\u88ab\u5206\u89e3\u9010\u4e00\u4f20\u7ed9\u51fd\u6570 explicit Complex c1(12, 5); Complex c2 = c1 + 5; \u5de6\u8fb9\u7f16\u8bd1\u5668\u4f1a\u9690\u5f0f\u8c03\u7528\u6784\u9020\u51fd\u6570\uff0c\u53d8\u6210\u590d\u6570\u52a0\u590d\u6570\u3002\u53f3\u8fb9\u4f1a\u62a5\u9519\u3002 #include <iostream> #include <initializer_list> using namespace std; class P { public: P(int a, int b) { cout << \"P(int a, int b)\" << endl; } //P(initializer_list<int>input) //{ // cout << \"initializer_list<int>input\" << endl; //} explicit P(int a, int b, int c) { cout << \"int a, int b, int c\" << endl; } }; void fp(const P& input) { } int main() { // ctors cout << \"ctors\" << endl; P p1(77, 5); // P(int a, int b) P p2{ 77, 5 }; // P(initializer_list<int>input) P p3{ 77, 5, 42 }; // P(initializer_list<int>input) P p4 = { 77, 5 }; // P(initializer_list<int>input) P p5 = { 77, 5, 42 }; // P(initializer_list<int>input),\u5982\u679c\u5220\u4e86initializer_list\u7684\u6784\u9020\u51fd\u6570 //\uff0c\u8fd9\u53e5\u5c31\u4f1a\u62a5\u9519, error: converting to \u2018P\u2019 from initializer //list would use explicit constructor \u2018P::P(int, int, int)\u2019 P p6(77, 5, 42); // explicit P (int a, int b, int c) P p7{ 77, 5, 42, 500 };// P(initializer_list<int>input) P p8 = { 77, 5, 42, 500 };// P(initializer_list<int>input) P p9{ 10 };// P(initializer_list<int>input) // call function cout << \"call function\" << endl; fp({ 47, 11 }); // P(initializer_list<int>input) fp({ 47, 11, 3 }); // P(initializer_list<int>input) fp(P{ 47, 11 }); // P(initializer_list<int>input) fp(P{ 47, 11, 3 }); // P(initializer_list<int>input) return 0; } \u6ce8\u91ca\u6389initializer_list\u7684\u6784\u9020\u51fd\u6570 range based for \u8fd9\u4e2a\u5c31\u89c1\u7684\u5f88\u591a\u4e86\uff0c\u6ce8\u610ffor\u4e2d\u4e5f\u8bb8\u6709\u9690\u5f0f\u7684\u8f6c\u6362\u3002 =delete =default Alias Template \u522b\u540d template <typename T> using Vec = std::vector<T, MyAlloc<T>>; Vec<int> coll; //\u4f7f\u7528 \u8fd9\u4e2a\u4e5f\u4f7f\u7528\u7684\u975e\u5e38\u591a\uff0c\u628a\u5bb9\u5668\u5305\u88c5\u4e00\u4e0b\uff0c\u5bb9\u5668\u9ed8\u8ba4\u7684\u662fAlloc\uff0c\u901a\u8fc7\u8fd9\u6837\u53bb\u4f7f\u7528\u5408\u9002\u7684\u5206\u914d\u5668\u3002 Template Template parameter Type Alias/noexcept/override/final Type Alias \u7c7b\u578b\u7684\u522b\u540d //typedef void( func)(int, int); using func = void( )(int, int); decltype map<string, float> coll; decltype(coll)::value_type elem; //map<string, float>::value_type elem; by using the new decltype keyword, you can let the compiler find out the type of an expression. This is the realization of the often requested typeof feature. application: 1.declare return types 2.use it in metaprogramming 3.pass the type of a lambda Lambdas Variadic Templates \u201d\u4e00\u4e2a\u548c\u4e00\u5305\u201c \u6a21\u677f\u91cc\u53d8\u5316\u7684\u662f\u6a21\u677f\u53c2\u6570\uff0c\u53c2\u6570\u4e2a\u6570\uff0c\u53c2\u6570\u7c7b\u578b\uff0c\u5173\u952e\u5b57\u201d...\u201c \u9012\u5f52\u8c03\u7528\uff0c\u5904\u7406\u7684\u90fd\u662f\u53c2\u6570\u3002\u4f7f\u7528function templates \u9012\u5f52\u7ee7\u627f\uff0c\u5904\u7406\u7684\u662f\u7c7b\u578b\u3002\u4f7f\u7528class templates \u4f8b\uff1atuple \u6807\u51c6\u5e93 \u53f3\u503c\u5f15\u7528 Rvalue references \u89e3\u51b3\u4e0d\u5fc5\u8981\u7684copy Lvalue\uff1a\u53ef\u4ee5\u51fa\u73b0\u5728=\u5de6\u8fb9 Rvalue\uff1a\u53ea\u80fd\u51fa\u73b0\u5728=\u53f3\u8fb9 int a = 1; int b = 2; a = b; //ok b = a; //ok a = a + b; //ok a + b = 3; //error Perfect Forwarding \u5bb9\u5668array \u5bb9\u5668hashtable","title":"\u4faf\u6377C++2.0\u65b0\u7279\u6027"},{"location":"C%2B%2B/%E7%BD%91%E8%AF%BE%E6%80%BB%E7%BB%93/%E4%BE%AF%E6%8D%B7C%2B%2B2.0%E6%96%B0%E7%89%B9%E6%80%A7/#_1","text":"","title":"\u8bed\u8a00"},{"location":"C%2B%2B/%E7%BD%91%E8%AF%BE%E6%80%BB%E7%BB%93/%E4%BE%AF%E6%8D%B7C%2B%2B2.0%E6%96%B0%E7%89%B9%E6%80%A7/#variadic-templates","text":"","title":"Variadic Templates"},{"location":"C%2B%2B/%E7%BD%91%E8%AF%BE%E6%80%BB%E7%BB%93/%E4%BE%AF%E6%8D%B7C%2B%2B2.0%E6%96%B0%E7%89%B9%E6%80%A7/#nullptrauto","text":"","title":"nullptr/auto"},{"location":"C%2B%2B/%E7%BD%91%E8%AF%BE%E6%80%BB%E7%BB%93/%E4%BE%AF%E6%8D%B7C%2B%2B2.0%E6%96%B0%E7%89%B9%E6%80%A7/#uniform-initialization","text":"\u5728C++11\u4e4b\u524d\uff0c\u521d\u59cb\u5316\u53ef\u80fd\u53d1\u751f\u5728\u5c0f\u62ec\u53f7 \u5927\u62ec\u53f7 \u590d\u5236\u7b26\u53f7\u3002 \u73b0\u5728\u5168\u90e8\u90fd\u53ef\u4ee5\u4f7f\u7528\u5927\u62ec\u53f7\u3002 \u7f16\u8bd1\u5668\u770b\u5230{...},\u5c31\u505a\u51fa\u4e00\u4e2ainitializer_list ,\u5173\u8054\u5230\u4e00\u4e2aarray \u3002\u8c03\u7528\u51fd\u6570\uff08\u5982ctor\uff09\u65f6array\u5185\u7684\u5143\u7d20\u88ab\u5206\u89e3\u9010\u4e00\u4f20\u7ed9\u51fd\u6570","title":"Uniform Initialization"},{"location":"C%2B%2B/%E7%BD%91%E8%AF%BE%E6%80%BB%E7%BB%93/%E4%BE%AF%E6%8D%B7C%2B%2B2.0%E6%96%B0%E7%89%B9%E6%80%A7/#explicit","text":"Complex c1(12, 5); Complex c2 = c1 + 5; \u5de6\u8fb9\u7f16\u8bd1\u5668\u4f1a\u9690\u5f0f\u8c03\u7528\u6784\u9020\u51fd\u6570\uff0c\u53d8\u6210\u590d\u6570\u52a0\u590d\u6570\u3002\u53f3\u8fb9\u4f1a\u62a5\u9519\u3002 #include <iostream> #include <initializer_list> using namespace std; class P { public: P(int a, int b) { cout << \"P(int a, int b)\" << endl; } //P(initializer_list<int>input) //{ // cout << \"initializer_list<int>input\" << endl; //} explicit P(int a, int b, int c) { cout << \"int a, int b, int c\" << endl; } }; void fp(const P& input) { } int main() { // ctors cout << \"ctors\" << endl; P p1(77, 5); // P(int a, int b) P p2{ 77, 5 }; // P(initializer_list<int>input) P p3{ 77, 5, 42 }; // P(initializer_list<int>input) P p4 = { 77, 5 }; // P(initializer_list<int>input) P p5 = { 77, 5, 42 }; // P(initializer_list<int>input),\u5982\u679c\u5220\u4e86initializer_list\u7684\u6784\u9020\u51fd\u6570 //\uff0c\u8fd9\u53e5\u5c31\u4f1a\u62a5\u9519, error: converting to \u2018P\u2019 from initializer //list would use explicit constructor \u2018P::P(int, int, int)\u2019 P p6(77, 5, 42); // explicit P (int a, int b, int c) P p7{ 77, 5, 42, 500 };// P(initializer_list<int>input) P p8 = { 77, 5, 42, 500 };// P(initializer_list<int>input) P p9{ 10 };// P(initializer_list<int>input) // call function cout << \"call function\" << endl; fp({ 47, 11 }); // P(initializer_list<int>input) fp({ 47, 11, 3 }); // P(initializer_list<int>input) fp(P{ 47, 11 }); // P(initializer_list<int>input) fp(P{ 47, 11, 3 }); // P(initializer_list<int>input) return 0; } \u6ce8\u91ca\u6389initializer_list\u7684\u6784\u9020\u51fd\u6570","title":"explicit"},{"location":"C%2B%2B/%E7%BD%91%E8%AF%BE%E6%80%BB%E7%BB%93/%E4%BE%AF%E6%8D%B7C%2B%2B2.0%E6%96%B0%E7%89%B9%E6%80%A7/#range-based-for","text":"\u8fd9\u4e2a\u5c31\u89c1\u7684\u5f88\u591a\u4e86\uff0c\u6ce8\u610ffor\u4e2d\u4e5f\u8bb8\u6709\u9690\u5f0f\u7684\u8f6c\u6362\u3002","title":"range based for"},{"location":"C%2B%2B/%E7%BD%91%E8%AF%BE%E6%80%BB%E7%BB%93/%E4%BE%AF%E6%8D%B7C%2B%2B2.0%E6%96%B0%E7%89%B9%E6%80%A7/#delete-default","text":"","title":"=delete =default"},{"location":"C%2B%2B/%E7%BD%91%E8%AF%BE%E6%80%BB%E7%BB%93/%E4%BE%AF%E6%8D%B7C%2B%2B2.0%E6%96%B0%E7%89%B9%E6%80%A7/#alias-template","text":"\u522b\u540d template <typename T> using Vec = std::vector<T, MyAlloc<T>>; Vec<int> coll; //\u4f7f\u7528 \u8fd9\u4e2a\u4e5f\u4f7f\u7528\u7684\u975e\u5e38\u591a\uff0c\u628a\u5bb9\u5668\u5305\u88c5\u4e00\u4e0b\uff0c\u5bb9\u5668\u9ed8\u8ba4\u7684\u662fAlloc\uff0c\u901a\u8fc7\u8fd9\u6837\u53bb\u4f7f\u7528\u5408\u9002\u7684\u5206\u914d\u5668\u3002","title":"Alias Template"},{"location":"C%2B%2B/%E7%BD%91%E8%AF%BE%E6%80%BB%E7%BB%93/%E4%BE%AF%E6%8D%B7C%2B%2B2.0%E6%96%B0%E7%89%B9%E6%80%A7/#template-template-parameter","text":"","title":"Template Template parameter"},{"location":"C%2B%2B/%E7%BD%91%E8%AF%BE%E6%80%BB%E7%BB%93/%E4%BE%AF%E6%8D%B7C%2B%2B2.0%E6%96%B0%E7%89%B9%E6%80%A7/#type-aliasnoexceptoverridefinal","text":"","title":"Type Alias/noexcept/override/final"},{"location":"C%2B%2B/%E7%BD%91%E8%AF%BE%E6%80%BB%E7%BB%93/%E4%BE%AF%E6%8D%B7C%2B%2B2.0%E6%96%B0%E7%89%B9%E6%80%A7/#type-alias","text":"\u7c7b\u578b\u7684\u522b\u540d //typedef void( func)(int, int); using func = void( )(int, int);","title":"Type Alias"},{"location":"C%2B%2B/%E7%BD%91%E8%AF%BE%E6%80%BB%E7%BB%93/%E4%BE%AF%E6%8D%B7C%2B%2B2.0%E6%96%B0%E7%89%B9%E6%80%A7/#decltype","text":"map<string, float> coll; decltype(coll)::value_type elem; //map<string, float>::value_type elem; by using the new decltype keyword, you can let the compiler find out the type of an expression. This is the realization of the often requested typeof feature. application: 1.declare return types 2.use it in metaprogramming 3.pass the type of a lambda","title":"decltype"},{"location":"C%2B%2B/%E7%BD%91%E8%AF%BE%E6%80%BB%E7%BB%93/%E4%BE%AF%E6%8D%B7C%2B%2B2.0%E6%96%B0%E7%89%B9%E6%80%A7/#lambdas","text":"","title":"Lambdas"},{"location":"C%2B%2B/%E7%BD%91%E8%AF%BE%E6%80%BB%E7%BB%93/%E4%BE%AF%E6%8D%B7C%2B%2B2.0%E6%96%B0%E7%89%B9%E6%80%A7/#variadic-templates_1","text":"\u201d\u4e00\u4e2a\u548c\u4e00\u5305\u201c \u6a21\u677f\u91cc\u53d8\u5316\u7684\u662f\u6a21\u677f\u53c2\u6570\uff0c\u53c2\u6570\u4e2a\u6570\uff0c\u53c2\u6570\u7c7b\u578b\uff0c\u5173\u952e\u5b57\u201d...\u201c \u9012\u5f52\u8c03\u7528\uff0c\u5904\u7406\u7684\u90fd\u662f\u53c2\u6570\u3002\u4f7f\u7528function templates \u9012\u5f52\u7ee7\u627f\uff0c\u5904\u7406\u7684\u662f\u7c7b\u578b\u3002\u4f7f\u7528class templates \u4f8b\uff1atuple","title":"Variadic Templates"},{"location":"C%2B%2B/%E7%BD%91%E8%AF%BE%E6%80%BB%E7%BB%93/%E4%BE%AF%E6%8D%B7C%2B%2B2.0%E6%96%B0%E7%89%B9%E6%80%A7/#_2","text":"","title":"\u6807\u51c6\u5e93"},{"location":"C%2B%2B/%E7%BD%91%E8%AF%BE%E6%80%BB%E7%BB%93/%E4%BE%AF%E6%8D%B7C%2B%2B2.0%E6%96%B0%E7%89%B9%E6%80%A7/#rvalue-references","text":"\u89e3\u51b3\u4e0d\u5fc5\u8981\u7684copy Lvalue\uff1a\u53ef\u4ee5\u51fa\u73b0\u5728=\u5de6\u8fb9 Rvalue\uff1a\u53ea\u80fd\u51fa\u73b0\u5728=\u53f3\u8fb9 int a = 1; int b = 2; a = b; //ok b = a; //ok a = a + b; //ok a + b = 3; //error","title":"\u53f3\u503c\u5f15\u7528 Rvalue references"},{"location":"C%2B%2B/%E7%BD%91%E8%AF%BE%E6%80%BB%E7%BB%93/%E4%BE%AF%E6%8D%B7C%2B%2B2.0%E6%96%B0%E7%89%B9%E6%80%A7/#perfect-forwarding","text":"","title":"Perfect Forwarding"},{"location":"C%2B%2B/%E7%BD%91%E8%AF%BE%E6%80%BB%E7%BB%93/%E4%BE%AF%E6%8D%B7C%2B%2B2.0%E6%96%B0%E7%89%B9%E6%80%A7/#array","text":"","title":"\u5bb9\u5668array"},{"location":"C%2B%2B/%E7%BD%91%E8%AF%BE%E6%80%BB%E7%BB%93/%E4%BE%AF%E6%8D%B7C%2B%2B2.0%E6%96%B0%E7%89%B9%E6%80%A7/#hashtable","text":"","title":"\u5bb9\u5668hashtable"},{"location":"C%2B%2B/%E7%BD%91%E8%AF%BE%E6%80%BB%E7%BB%93/%E4%BE%AF%E6%8D%B7C%2B%2BSTL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E4%B8%8E%E5%86%85%E6%A0%B8%E5%88%86%E6%9E%90/","text":"OOP(object-oriented programming) vs GP(Generic Programing) OOP\u5c06datas\u4e0emethods\u5173\u8054\u5728\u4e00\u8d77 GP\u5c06datas\u4e0emethods\u5206\u5f00 \u4f7f\u7528 GP \uff1a 1 Containers/Algorithms\u56e2\u961f\u5404\u53f8\u5176\u804c\uff0c\u4ee5Iterator\u6c9f\u901a 2 Algorithms\u901a\u8fc7Iterators\u786e\u5b9a\u64cd\u4f5c\u8303\u56f4\uff0c\u901a\u8fc7Iterators\u53d6\u7528Containers\u5143\u7d20 \u9605\u8bfbC++\u6807\u51c6\u5e93\uff0c\u57fa\u7840 1 Operator Overloading \u64cd\u4f5c\u7b26\u91cd\u8f7d 2 Templates \u6a21\u677f \u7c7b\u6a21\u677f/\u51fd\u6570\u6a21\u677f/\u6210\u5458\u6a21\u677f \u6a21\u677f\u7279\u5316/\u504f\u7279\u5316 STL \u516d\u5927\u90e8\u4ef6 \u5bb9\u5668\uff08Containiers\uff09 \u5206\u914d\u5668\uff08Allocators\uff09 \u7b97\u6cd5\uff08Alogrithms\uff09 \u8fed\u4ee3\u5668\uff08Iterators\uff09 \u9002\u914d\u5668\uff08Adapters\uff09 \u4eff\u51fd\u6570\uff08Functors\uff09 \u5bb9\u5668 Sequance Containers\uff1a Array Vector Deque List Forward List Associative Containers\uff1a Set/MultiSet Map/Multimap Unordered Containers\uff1a Unordered Set/MultiSet Unordered Map/Multimap \u7528hash table\u5b9e\u73b0\u7684 1 list \u73af\u72b6\u94fe\u8868\uff0c\u5728list\u7684\u5c3e\u7aef\u6709\u4e00\u7a7a\u767d\u8282\u70b9\uff0c\u7528\u4ee5\u7b26\u5408STL\u7684\u524d\u95ed\u540e\u5f00\u533a\u95f4\u7279\u70b9\u3002 \u6709iterator\u3002 2 vector data\u67093\u4e2a\u6307\u9488 strat finish end_of_storage\uff08\u6ce8\u610f\u6807\u51c6\u5e93\u7684\u7248\u672c\uff09\uff0c\u4e8c\u500d\u6210\u957f\u7684\u5bb9\u5668\u3002\u8fde\u7eed\u7a7a\u95f4\u3002\u6709iterator\u3002 3 array \u6ca1\u6709ctor\uff0c\u6ca1\u6709dtor\u3002\u6709iterator\u3002 4 forwrad_list \u7ebf\u72b6\u5355\u9879\u4e32\u5217 5 deque \u5206\u6bb5\u8fde\u7eed\uff0c\u53cc\u5411\u8fdb\u51fa\u3002deque iterator\u6a21\u62df\u4e86\u8fde\u7eed\u7a7a\u95f4\u3002 6 stack \u5148\u8fdb\u5148\u51fa queue \u5148\u8fdb\u5148\u51fa deque\u4f5c\u4e3a\u5e95\u5c42\u5bb9\u5668\uff0c\u4e0d\u5141\u8bb8\u904d\u5386\uff0c\u4e5f\u4e0d\u63d0\u4f9biterator\u3002 stack\u548cqueue\u90fd\u53ef\u4ee5\u9009\u62e9list\u6216\u8005deque\u4f5c\u4e3a\u5e95\u5c42\u5bb9\u5668\u3002stack\u53ef\u9009vector\u505a\u5e95\u5c42\u7ed3\u6784\uff0cqueue\u4e0d\u53ef\u9009vector\u505a\u5e95\u5c42\u7ed3\u6784\uff0c\u90fd\u4e0d\u53ef\u9009set\u6216map 7 rb_tree \u7ea2\u9ed1\u6811\uff0c\u662f\u5e73\u8861\u4e8c\u5143\u641c\u5bfb\u6811\u5e38\u4f7f\u7528\u7684\u4e00\u79cd\uff0c\u5e73\u8861\u4e8c\u5143\u641c\u5bfb\u6811\u7684\u7279\u5f81\uff1a\u6392\u5217\u89c4\u5219\u6709\u5229\u4e8esearch\u548cinset\uff0c\u5e76\u4fdd\u6301\u9002\u5ea6\u5e73\u8861-\u65e0\u8282\u70b9\u8fc7\u6df1\u3002 \u63d0\u4f9b\u904d\u5386\u64cd\u4f5c\u548citerator\uff0c\u6309\u6b63\u5e38\u89c4\u5219++ite\u904d\u5386\uff0c\u4fbf\u80fd\u83b7\u5f97\u6392\u5e8f\u72b6\u6001\u3002 \u4e3aset\u548cmap\u4f5c\u5176\u5e95\u5c42\u652f\u6301\u3002 8 set/multiset \u4ee5\u7ea2\u9ed1\u6811\u4f5c\u4e3a\u5e95\u5c42\u7ed3\u6784\uff0c\u56e0\u6b64\u5143\u7d20\u81ea\u52a8\u6392\u5e8f\uff0c\u6392\u5e8f\u4f9d\u636e\u662fkey\uff0c\u800cset/\u548cmultiset\u7684value\u548ckey\u5408\u4e00\u3002 \u65e0\u6cd5\u4f7f\u7528iterator\u6539\u53d8\u5143\u7d20\u503c\uff0cset/multiset\u7684iterator\u662f\u5e95\u90e8\u7ea2\u9ed1\u6811\u7684const iterator\uff0c\u7981\u6b62\u4e86user\u5bf9\u5143\u7d20\u7684\u8d4b\u503c\u3002 9 map/multimap \u4ee5\u7ea2\u9ed1\u6811\u4e3a\u5e95\u5c42\u7ed3\u6784\uff0c\u5143\u7d20\u81ea\u52a8\u6392\u5e8f\uff0c\u6392\u5e8f\u7684\u4f9d\u636e\u662fkey\u3002\u63d0\u4f9b\u904d\u5386\u64cd\u4f5c\u4ee5\u53caiterator\uff0c\u6309\u6b63\u5e38\u89c4\u5219++ite\u904d\u5386\u53ef\u5f97\u5230\u6392\u5e8f\u72b6\u6001\u3002 \u65e0\u6cd5\u4f7f\u7528iterator\u6539\u53d8\u5143\u7d20\u7684key\uff0c\u4f46\u662f\u53ef\u4ee5\u6539\u53d8\u5143\u7d20\u7684data\uff0c\u56e0\u6b64map/multimap\u5185\u90e8\u81ea\u52a8\u5c06user\u5236\u5b9a\u7684key_type\u8bbe\u5b9a\u4e3aconst,\u5982\u6b64\u6765\u7981\u6b62user\u5bf9\u5143\u7d20\u7684key\u8d4b\u503c\u3002 template<class Key, class T, ...> class map { typedef pair<const Key, T> value_type; typedef rb_tree<key_type, value_type, ...> rep_type; rep_type t; ... } 10 hashtable \u6709\u4e00\u4e2abuckets vector\uff0c\u6bcf\u4e00\u4e2abucket\u90fd\u662f\u4e00\u4e2a\u94fe\u8868\uff0c\u53ef\u4ee5\u4f7f\u7528hashtable iterator\u6539\u53d8\u5143\u7d20\u7684data\uff0c\u4f46\u4e0d\u80fd\u6539\u53d8key \u5143\u7d20\u4e2a\u6570\u8d85\u8fc7buckets\u6570\u65f6\u8fdb\u884crehashing\uff0c\u65b0\u7684buckets\u6570\u662f\u7ffb\u500d\u540e\u6700\u8fd1\u90bb\u7684\u7d20\u6570\u3002 \u8fed\u4ee3\u5668 Iterator\u8981\u9075\u5faa\u7684\u539f\u5219\u3002\u5fc5\u987b\u6709\u80fd\u529b\u56de\u7b54Algorithms\u7684\u63d0\u95ee\uff0c\u8bbe\u8ba1\u4e86\u4e94\u79cd\u7279\u6b8a\u7684typedef\u3002 Iterator Traits \u7528\u4e8e\u5206\u79bbclass iterator\u548cnon-class iterators\u3002\uff08\u6a21\u677f\u7684\u7279\u5316\uff09 \u58f0\u660e\u4e00\u4e2a\u65e0\u6cd5\u88ab\u8d4b\u503c\u7684\u53d8\u91cf\u6ca1\u6709\u610f\u4e49\uff0c\u6240\u4ee5\u5373\u4f7f\u662fconst iterator\u7684value_type\u4e5f\u4e0d\u5e94\u8be5\u52a0\u4e0aconst\uff0citerator\u82e5\u662fconst int*, \u90a3value_type\u662fint\u800c\u4e0d\u662fconst int\u3002 \u5206\u914d\u5668 example\uff1a template<typename T, typename _Alloc = std::allocator<T>> class vector:protected _Vector_base<T, _Alloc> \u4eff\u51fd\u6570 \u4e3a\u7b97\u6cd5\u670d\u52a1\uff0c\u5fc5\u987b\u91cd\u8f7d\uff08\uff09 \u9002\u914d\u5668Adapter \u4eff\u51fd\u6570\u9002\u914d\u5668 \uff1fbind\u51fd\u6570 \u7ed1\u5b9a\u6210\u5458\u51fd\u6570\u65f6\uff0c\u4e3a\u4ec0\u4e48\u8981\u52a0\u4e0a&","title":"\u4faf\u6377C++STL\u4f53\u7cfb\u7ed3\u6784\u4e0e\u5185\u6838\u5206\u6790"},{"location":"C%2B%2B/%E7%BD%91%E8%AF%BE%E6%80%BB%E7%BB%93/%E4%BE%AF%E6%8D%B7C%2B%2BSTL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E4%B8%8E%E5%86%85%E6%A0%B8%E5%88%86%E6%9E%90/#oopobject-oriented-programming-vs-gpgeneric-programing","text":"OOP\u5c06datas\u4e0emethods\u5173\u8054\u5728\u4e00\u8d77 GP\u5c06datas\u4e0emethods\u5206\u5f00 \u4f7f\u7528 GP \uff1a 1 Containers/Algorithms\u56e2\u961f\u5404\u53f8\u5176\u804c\uff0c\u4ee5Iterator\u6c9f\u901a 2 Algorithms\u901a\u8fc7Iterators\u786e\u5b9a\u64cd\u4f5c\u8303\u56f4\uff0c\u901a\u8fc7Iterators\u53d6\u7528Containers\u5143\u7d20","title":"OOP(object-oriented programming) vs GP(Generic Programing)"},{"location":"C%2B%2B/%E7%BD%91%E8%AF%BE%E6%80%BB%E7%BB%93/%E4%BE%AF%E6%8D%B7C%2B%2BSTL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E4%B8%8E%E5%86%85%E6%A0%B8%E5%88%86%E6%9E%90/#c","text":"1 Operator Overloading \u64cd\u4f5c\u7b26\u91cd\u8f7d 2 Templates \u6a21\u677f \u7c7b\u6a21\u677f/\u51fd\u6570\u6a21\u677f/\u6210\u5458\u6a21\u677f \u6a21\u677f\u7279\u5316/\u504f\u7279\u5316","title":"\u9605\u8bfbC++\u6807\u51c6\u5e93\uff0c\u57fa\u7840"},{"location":"C%2B%2B/%E7%BD%91%E8%AF%BE%E6%80%BB%E7%BB%93/%E4%BE%AF%E6%8D%B7C%2B%2BSTL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E4%B8%8E%E5%86%85%E6%A0%B8%E5%88%86%E6%9E%90/#stl","text":"\u5bb9\u5668\uff08Containiers\uff09 \u5206\u914d\u5668\uff08Allocators\uff09 \u7b97\u6cd5\uff08Alogrithms\uff09 \u8fed\u4ee3\u5668\uff08Iterators\uff09 \u9002\u914d\u5668\uff08Adapters\uff09 \u4eff\u51fd\u6570\uff08Functors\uff09","title":"STL \u516d\u5927\u90e8\u4ef6"},{"location":"C%2B%2B/%E7%BD%91%E8%AF%BE%E6%80%BB%E7%BB%93/%E4%BE%AF%E6%8D%B7C%2B%2BSTL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E4%B8%8E%E5%86%85%E6%A0%B8%E5%88%86%E6%9E%90/#_1","text":"Sequance Containers\uff1a Array Vector Deque List Forward List Associative Containers\uff1a Set/MultiSet Map/Multimap Unordered Containers\uff1a Unordered Set/MultiSet Unordered Map/Multimap \u7528hash table\u5b9e\u73b0\u7684 1 list \u73af\u72b6\u94fe\u8868\uff0c\u5728list\u7684\u5c3e\u7aef\u6709\u4e00\u7a7a\u767d\u8282\u70b9\uff0c\u7528\u4ee5\u7b26\u5408STL\u7684\u524d\u95ed\u540e\u5f00\u533a\u95f4\u7279\u70b9\u3002 \u6709iterator\u3002 2 vector data\u67093\u4e2a\u6307\u9488 strat finish end_of_storage\uff08\u6ce8\u610f\u6807\u51c6\u5e93\u7684\u7248\u672c\uff09\uff0c\u4e8c\u500d\u6210\u957f\u7684\u5bb9\u5668\u3002\u8fde\u7eed\u7a7a\u95f4\u3002\u6709iterator\u3002 3 array \u6ca1\u6709ctor\uff0c\u6ca1\u6709dtor\u3002\u6709iterator\u3002 4 forwrad_list \u7ebf\u72b6\u5355\u9879\u4e32\u5217 5 deque \u5206\u6bb5\u8fde\u7eed\uff0c\u53cc\u5411\u8fdb\u51fa\u3002deque iterator\u6a21\u62df\u4e86\u8fde\u7eed\u7a7a\u95f4\u3002 6 stack \u5148\u8fdb\u5148\u51fa queue \u5148\u8fdb\u5148\u51fa deque\u4f5c\u4e3a\u5e95\u5c42\u5bb9\u5668\uff0c\u4e0d\u5141\u8bb8\u904d\u5386\uff0c\u4e5f\u4e0d\u63d0\u4f9biterator\u3002 stack\u548cqueue\u90fd\u53ef\u4ee5\u9009\u62e9list\u6216\u8005deque\u4f5c\u4e3a\u5e95\u5c42\u5bb9\u5668\u3002stack\u53ef\u9009vector\u505a\u5e95\u5c42\u7ed3\u6784\uff0cqueue\u4e0d\u53ef\u9009vector\u505a\u5e95\u5c42\u7ed3\u6784\uff0c\u90fd\u4e0d\u53ef\u9009set\u6216map 7 rb_tree \u7ea2\u9ed1\u6811\uff0c\u662f\u5e73\u8861\u4e8c\u5143\u641c\u5bfb\u6811\u5e38\u4f7f\u7528\u7684\u4e00\u79cd\uff0c\u5e73\u8861\u4e8c\u5143\u641c\u5bfb\u6811\u7684\u7279\u5f81\uff1a\u6392\u5217\u89c4\u5219\u6709\u5229\u4e8esearch\u548cinset\uff0c\u5e76\u4fdd\u6301\u9002\u5ea6\u5e73\u8861-\u65e0\u8282\u70b9\u8fc7\u6df1\u3002 \u63d0\u4f9b\u904d\u5386\u64cd\u4f5c\u548citerator\uff0c\u6309\u6b63\u5e38\u89c4\u5219++ite\u904d\u5386\uff0c\u4fbf\u80fd\u83b7\u5f97\u6392\u5e8f\u72b6\u6001\u3002 \u4e3aset\u548cmap\u4f5c\u5176\u5e95\u5c42\u652f\u6301\u3002 8 set/multiset \u4ee5\u7ea2\u9ed1\u6811\u4f5c\u4e3a\u5e95\u5c42\u7ed3\u6784\uff0c\u56e0\u6b64\u5143\u7d20\u81ea\u52a8\u6392\u5e8f\uff0c\u6392\u5e8f\u4f9d\u636e\u662fkey\uff0c\u800cset/\u548cmultiset\u7684value\u548ckey\u5408\u4e00\u3002 \u65e0\u6cd5\u4f7f\u7528iterator\u6539\u53d8\u5143\u7d20\u503c\uff0cset/multiset\u7684iterator\u662f\u5e95\u90e8\u7ea2\u9ed1\u6811\u7684const iterator\uff0c\u7981\u6b62\u4e86user\u5bf9\u5143\u7d20\u7684\u8d4b\u503c\u3002 9 map/multimap \u4ee5\u7ea2\u9ed1\u6811\u4e3a\u5e95\u5c42\u7ed3\u6784\uff0c\u5143\u7d20\u81ea\u52a8\u6392\u5e8f\uff0c\u6392\u5e8f\u7684\u4f9d\u636e\u662fkey\u3002\u63d0\u4f9b\u904d\u5386\u64cd\u4f5c\u4ee5\u53caiterator\uff0c\u6309\u6b63\u5e38\u89c4\u5219++ite\u904d\u5386\u53ef\u5f97\u5230\u6392\u5e8f\u72b6\u6001\u3002 \u65e0\u6cd5\u4f7f\u7528iterator\u6539\u53d8\u5143\u7d20\u7684key\uff0c\u4f46\u662f\u53ef\u4ee5\u6539\u53d8\u5143\u7d20\u7684data\uff0c\u56e0\u6b64map/multimap\u5185\u90e8\u81ea\u52a8\u5c06user\u5236\u5b9a\u7684key_type\u8bbe\u5b9a\u4e3aconst,\u5982\u6b64\u6765\u7981\u6b62user\u5bf9\u5143\u7d20\u7684key\u8d4b\u503c\u3002 template<class Key, class T, ...> class map { typedef pair<const Key, T> value_type; typedef rb_tree<key_type, value_type, ...> rep_type; rep_type t; ... } 10 hashtable \u6709\u4e00\u4e2abuckets vector\uff0c\u6bcf\u4e00\u4e2abucket\u90fd\u662f\u4e00\u4e2a\u94fe\u8868\uff0c\u53ef\u4ee5\u4f7f\u7528hashtable iterator\u6539\u53d8\u5143\u7d20\u7684data\uff0c\u4f46\u4e0d\u80fd\u6539\u53d8key \u5143\u7d20\u4e2a\u6570\u8d85\u8fc7buckets\u6570\u65f6\u8fdb\u884crehashing\uff0c\u65b0\u7684buckets\u6570\u662f\u7ffb\u500d\u540e\u6700\u8fd1\u90bb\u7684\u7d20\u6570\u3002","title":"\u5bb9\u5668"},{"location":"C%2B%2B/%E7%BD%91%E8%AF%BE%E6%80%BB%E7%BB%93/%E4%BE%AF%E6%8D%B7C%2B%2BSTL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E4%B8%8E%E5%86%85%E6%A0%B8%E5%88%86%E6%9E%90/#_2","text":"Iterator\u8981\u9075\u5faa\u7684\u539f\u5219\u3002\u5fc5\u987b\u6709\u80fd\u529b\u56de\u7b54Algorithms\u7684\u63d0\u95ee\uff0c\u8bbe\u8ba1\u4e86\u4e94\u79cd\u7279\u6b8a\u7684typedef\u3002 Iterator Traits \u7528\u4e8e\u5206\u79bbclass iterator\u548cnon-class iterators\u3002\uff08\u6a21\u677f\u7684\u7279\u5316\uff09 \u58f0\u660e\u4e00\u4e2a\u65e0\u6cd5\u88ab\u8d4b\u503c\u7684\u53d8\u91cf\u6ca1\u6709\u610f\u4e49\uff0c\u6240\u4ee5\u5373\u4f7f\u662fconst iterator\u7684value_type\u4e5f\u4e0d\u5e94\u8be5\u52a0\u4e0aconst\uff0citerator\u82e5\u662fconst int*, \u90a3value_type\u662fint\u800c\u4e0d\u662fconst int\u3002","title":"\u8fed\u4ee3\u5668"},{"location":"C%2B%2B/%E7%BD%91%E8%AF%BE%E6%80%BB%E7%BB%93/%E4%BE%AF%E6%8D%B7C%2B%2BSTL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E4%B8%8E%E5%86%85%E6%A0%B8%E5%88%86%E6%9E%90/#_3","text":"example\uff1a template<typename T, typename _Alloc = std::allocator<T>> class vector:protected _Vector_base<T, _Alloc>","title":"\u5206\u914d\u5668"},{"location":"C%2B%2B/%E7%BD%91%E8%AF%BE%E6%80%BB%E7%BB%93/%E4%BE%AF%E6%8D%B7C%2B%2BSTL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E4%B8%8E%E5%86%85%E6%A0%B8%E5%88%86%E6%9E%90/#_4","text":"\u4e3a\u7b97\u6cd5\u670d\u52a1\uff0c\u5fc5\u987b\u91cd\u8f7d\uff08\uff09","title":"\u4eff\u51fd\u6570"},{"location":"C%2B%2B/%E7%BD%91%E8%AF%BE%E6%80%BB%E7%BB%93/%E4%BE%AF%E6%8D%B7C%2B%2BSTL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E4%B8%8E%E5%86%85%E6%A0%B8%E5%88%86%E6%9E%90/#adapter","text":"\u4eff\u51fd\u6570\u9002\u914d\u5668 \uff1fbind\u51fd\u6570 \u7ed1\u5b9a\u6210\u5458\u51fd\u6570\u65f6\uff0c\u4e3a\u4ec0\u4e48\u8981\u52a0\u4e0a&","title":"\u9002\u914d\u5668Adapter"},{"location":"C%2B%2B/%E7%BD%91%E8%AF%BE%E6%80%BB%E7%BB%93/%E4%BE%AF%E6%8D%B7C%2B%2B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/","text":"(I)C++\u9762\u5411\u5bf9\u8c61\u5f00\u53d1 //complex class 1.\u5e26\u6307\u9488\u7684class/\u4e0d\u5e26\u6307\u9488\u7684class 2.\u521d\u59cb\u5316\u5217\u8868/\u4e0d\u4f7f\u7528\u521d\u59cb\u5316\u5217\u8868\u8d4b\u503c \uff08\u5934\u6587\u4ef6\u4e0e\u7c7b\u7684\u58f0\u660e \u6784\u9020\u51fd\u6570\uff09 3.constructor\u653e\u5728private\u91cc\uff08\u53c2\u6570\u4f20\u9012\u4e0e\u8fd4\u56de\u503c\uff09 singleton 4.\u8003\u8651return by value\u4e0ereturn by reference //string class \u53ea\u8981\u4f60\u7684\u7c7b\u91cc\u9762\u5e26\u6307\u9488\uff0c\u5fc5\u987b\u6709\u62f7\u8d1d\u6784\u9020/\u62f7\u8d1d\u8d4b\u503c\u3002 1.\u8c03\u8bd5\u6a21\u5f0f\u548crelease\u6a21\u5f0f Object Oriented Programming, Object Oriented Design (OOP, OOD) Inheritance \u7ee7\u627f Composition \u590d\u5408 Delegation \u59d4\u6258 1.Composition\uff08\u7ec4\u5408\u4e0e\u7ee7\u627f\uff09 Adapter 2.pimpl pointer to implementation 3.Inheritance with virtual template method 4.Delegation + Inheritance Observer Composite 5.Prototype (II)\u9762\u5411\u5bf9\u8c61\u5f00\u53d1--\u517c\u8c08\u5bf9\u8c61\u6a21\u578b 1.non-explicit-one-argument ctor \u8f6c\u6362\u51fd\u6570 \u5173\u952e\u5b57 explicit 2.pointer-like classes share-pointer iterator 3.function-like classes \u4eff\u51fd\u6570 4.namespace 5.class template 6.function template 7.member template 8.specialization\u7279\u5316 9.\u6a21\u677f\u504f\u7279\u5316 10.template template parameter 11.C++11\u65b0\u7279\u6027 12.reference 13.Object model 14.Vptr & Vtbl \u865a\u51fd\u6570 \u865a\u8868 \u52a8\u6001\u7ed1\u5b9a\uff1a1\u901a\u8fc7\u6307\u9488\u8c03\u7528 2\u5411\u4e0a\u8f6c\u578b 3\u8c03\u7528\u7684\u662f\u865a\u51fd\u6570 \u591a\u6001\uff1a A *p = new B; //A\u662f\u7236\u7c7b B\u662f\u5b50\u7c7b \u867d\u7136P\u662f\u4e00\u4e2a\u57fa\u7c7b\u7684\u6307\u9488\u3002\u4f46\u662fnew B\u8c03\u7528\u7684\u662f\u6d3e\u751f\u7c7bB\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u6240\u4ee5\u6784\u9020\u7684\u662fB\u7c7b\u5bf9\u8c61\u3002\u5148\u8c03\u7528A\u7684\u6784\u9020\u51fd\u6570\uff0c\u518d\u8c03\u7528B\u7684\u6784\u9020\u51fd\u6570\u3002\u6784\u9020\u5b8c\u540e\u4f1a\u8fd4\u56deB\u7c7b\u5bf9\u8c61\u7684\u5730\u5740\uff0c\u7136\u540e\u5c06\u5b83\u8d4b\u7ed9\u4e00\u4e2a\u57fa\u7c7b\u6307\u9488P\u3002 15.const 1\u653e\u5728\u5c0f\u62ec\u53f7\u540e\u9762\u5927\u62ec\u53f7\u524d\u9762 \u4fee\u9970\u6210\u5458\u51fd\u6570\uff0c\u4e0d\u6539\u53d8class\u7684data const\u4e5f\u7b97\u51fd\u6570\u7b7e\u540d\u7684\u4e00\u90e8\u5206 \u5f53\u6210\u5458\u51fd\u6570\u7684const\u548cnon-const\u7248\u672c\u540c\u65f6\u5b58\u5728\u7684\u65f6\u5019\uff0cconst object\u53ea\u80fd\u53ea\u4f1a\u8c03\u7528const\u7248\u672c\uff0cnon-const object\u53ea\u80fd\u53ea\u4f1a\u8c03\u7528non-const\u7248\u672c\u3002 16.new & delete new \u5148\u5206\u914dmemory\uff0c\u518d\u8c03\u7528ctor delete \u5148\u8c03\u7528dtor\uff0c\u518d\u91ca\u653ememory new\u548cdelete\u90fd\u662fexpression\uff0c\u8c03\u7528\u7684\u662foperator new/operator delete\uff0c\u5e95\u5c42\u662f\u8c03\u7528malloc 17.\u91cd\u8f7doperator new/operator delete/operator new\u3010\u3011/operator delete\u3010\u3011 18.placement new()","title":"\u4faf\u6377C++\u9762\u5411\u5bf9\u8c61"},{"location":"C%2B%2B/%E7%BD%91%E8%AF%BE%E6%80%BB%E7%BB%93/%E4%BE%AF%E6%8D%B7C%2B%2B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#ic","text":"//complex class 1.\u5e26\u6307\u9488\u7684class/\u4e0d\u5e26\u6307\u9488\u7684class 2.\u521d\u59cb\u5316\u5217\u8868/\u4e0d\u4f7f\u7528\u521d\u59cb\u5316\u5217\u8868\u8d4b\u503c \uff08\u5934\u6587\u4ef6\u4e0e\u7c7b\u7684\u58f0\u660e \u6784\u9020\u51fd\u6570\uff09 3.constructor\u653e\u5728private\u91cc\uff08\u53c2\u6570\u4f20\u9012\u4e0e\u8fd4\u56de\u503c\uff09 singleton 4.\u8003\u8651return by value\u4e0ereturn by reference //string class \u53ea\u8981\u4f60\u7684\u7c7b\u91cc\u9762\u5e26\u6307\u9488\uff0c\u5fc5\u987b\u6709\u62f7\u8d1d\u6784\u9020/\u62f7\u8d1d\u8d4b\u503c\u3002 1.\u8c03\u8bd5\u6a21\u5f0f\u548crelease\u6a21\u5f0f Object Oriented Programming, Object Oriented Design (OOP, OOD) Inheritance \u7ee7\u627f Composition \u590d\u5408 Delegation \u59d4\u6258 1.Composition\uff08\u7ec4\u5408\u4e0e\u7ee7\u627f\uff09 Adapter 2.pimpl pointer to implementation 3.Inheritance with virtual template method 4.Delegation + Inheritance Observer Composite 5.Prototype","title":"(I)C++\u9762\u5411\u5bf9\u8c61\u5f00\u53d1"},{"location":"C%2B%2B/%E7%BD%91%E8%AF%BE%E6%80%BB%E7%BB%93/%E4%BE%AF%E6%8D%B7C%2B%2B%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#ii-","text":"1.non-explicit-one-argument ctor \u8f6c\u6362\u51fd\u6570 \u5173\u952e\u5b57 explicit 2.pointer-like classes share-pointer iterator 3.function-like classes \u4eff\u51fd\u6570 4.namespace 5.class template 6.function template 7.member template 8.specialization\u7279\u5316 9.\u6a21\u677f\u504f\u7279\u5316 10.template template parameter 11.C++11\u65b0\u7279\u6027 12.reference 13.Object model 14.Vptr & Vtbl \u865a\u51fd\u6570 \u865a\u8868 \u52a8\u6001\u7ed1\u5b9a\uff1a1\u901a\u8fc7\u6307\u9488\u8c03\u7528 2\u5411\u4e0a\u8f6c\u578b 3\u8c03\u7528\u7684\u662f\u865a\u51fd\u6570 \u591a\u6001\uff1a A *p = new B; //A\u662f\u7236\u7c7b B\u662f\u5b50\u7c7b \u867d\u7136P\u662f\u4e00\u4e2a\u57fa\u7c7b\u7684\u6307\u9488\u3002\u4f46\u662fnew B\u8c03\u7528\u7684\u662f\u6d3e\u751f\u7c7bB\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u6240\u4ee5\u6784\u9020\u7684\u662fB\u7c7b\u5bf9\u8c61\u3002\u5148\u8c03\u7528A\u7684\u6784\u9020\u51fd\u6570\uff0c\u518d\u8c03\u7528B\u7684\u6784\u9020\u51fd\u6570\u3002\u6784\u9020\u5b8c\u540e\u4f1a\u8fd4\u56deB\u7c7b\u5bf9\u8c61\u7684\u5730\u5740\uff0c\u7136\u540e\u5c06\u5b83\u8d4b\u7ed9\u4e00\u4e2a\u57fa\u7c7b\u6307\u9488P\u3002 15.const 1\u653e\u5728\u5c0f\u62ec\u53f7\u540e\u9762\u5927\u62ec\u53f7\u524d\u9762 \u4fee\u9970\u6210\u5458\u51fd\u6570\uff0c\u4e0d\u6539\u53d8class\u7684data const\u4e5f\u7b97\u51fd\u6570\u7b7e\u540d\u7684\u4e00\u90e8\u5206 \u5f53\u6210\u5458\u51fd\u6570\u7684const\u548cnon-const\u7248\u672c\u540c\u65f6\u5b58\u5728\u7684\u65f6\u5019\uff0cconst object\u53ea\u80fd\u53ea\u4f1a\u8c03\u7528const\u7248\u672c\uff0cnon-const object\u53ea\u80fd\u53ea\u4f1a\u8c03\u7528non-const\u7248\u672c\u3002 16.new & delete new \u5148\u5206\u914dmemory\uff0c\u518d\u8c03\u7528ctor delete \u5148\u8c03\u7528dtor\uff0c\u518d\u91ca\u653ememory new\u548cdelete\u90fd\u662fexpression\uff0c\u8c03\u7528\u7684\u662foperator new/operator delete\uff0c\u5e95\u5c42\u662f\u8c03\u7528malloc 17.\u91cd\u8f7doperator new/operator delete/operator new\u3010\u3011/operator delete\u3010\u3011 18.placement new()","title":"(II)\u9762\u5411\u5bf9\u8c61\u5f00\u53d1--\u517c\u8c08\u5bf9\u8c61\u6a21\u578b"},{"location":"%E5%8A%9B%E6%89%A3%E5%8A%9B%E6%89%A3/LeetCode/","text":"\u6570\u7ec4 \u5251\u630753 - I. \u5728\u6392\u5e8f\u6570\u7ec4\u4e2d\u67e5\u627e\u6570\u5b57 I \u6392\u5e8f\u4e2d\u7684\u641c\u7d22\u95ee\u9898\uff0c\u9996\u5148\u8003\u8651\u4e8c\u5206 \u5251\u6307 Offer 53 - II. 0\uff5en-1\u4e2d\u7f3a\u5931\u7684\u6570\u5b57 \u201c \u8003\u70b9\u4e3b\u8981\u8fd8\u662f\u4e8c\u5206\u6cd5\uff0c\u9898\u76ee\u6bcf\u4e2a\u6761\u4ef6\u90fd\u662f\u6709\u7528\u7684\u3002\u6240\u6709\u9898\u90fd\u62ff\u6765\u904d\u5386\uff0coffer\u4e5f\u5c31\u904d\u5386\u5230\u522b\u4eba\u90a3\u91cc\u53bb\u4e86 \u201d \u6839\u636e\u9898\u610f\uff0c\u6570\u7ec4\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u89c4\u5219\u5212\u5206\u4e3a\u4e24\u90e8\u5206\u3002 \u5de6\u5b50\u6570\u7ec4\uff1a nums[i] = inums[i]=i ; \u53f3\u5b50\u6570\u7ec4\uff1a nums[i] != nums[i] ; \u7f3a\u5931\u7684\u6570\u5b57\u7b49\u4e8e \u201c\u53f3\u5b50\u6570\u7ec4\u7684\u9996\u4f4d\u5143\u7d20\u201d \u5bf9\u5e94\u7684\u7d22\u5f15\uff1b\u56e0\u6b64\u8003\u8651\u4f7f\u7528\u4e8c\u5206\u6cd5\u67e5\u627e \u201c\u53f3\u5b50\u6570\u7ec4\u7684\u9996\u4f4d\u5143\u7d20\u201d class Solution { public: int missingNumber(vector<int>& nums) { if(nums.size() == 0) { return -1; } int left = 0, right = nums.size() - 1; while(left <= right) { int mid = (left + right)/2; if(nums[mid] != mid) { right = mid - 1; } else { left = mid + 1; } } return left; } }; \u94fe\u8868 141.\u73af\u5f62\u94fe\u8868 \u76f8\u7231\u76f8\u6740\u597d\u57fa\u53cb\u2014\u2014\u6570\u7ec4\u4e0e\u94fe\u8868 \u4f5c\u4e3a\u7ebf\u6027\u8868\u7684\u4e24\u79cd\u5b58\u50a8\u65b9\u5f0f \u2014\u2014 \u94fe\u8868\u548c\u6570\u7ec4\uff0c\u8fd9\u5bf9\u76f8\u7231\u76f8\u6740\u7684\u597d\u57fa\u53cb\u6709\u7740\u5404\u81ea\u7684\u4f18\u7f3a\u70b9\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u68b3\u7406\u4e00\u4e0b\u8fd9\u4e24\u79cd\u65b9\u5f0f\u3002 \u6570\u7ec4 \uff0c\u6240\u6709\u5143\u7d20\u90fd\u8fde\u7eed\u7684\u5b58\u50a8\u4e8e\u4e00\u6bb5\u5185\u5b58\u4e2d\uff0c\u4e14\u6bcf\u4e2a\u5143\u7d20\u5360\u7528\u7684\u5185\u5b58\u5927\u5c0f\u76f8\u540c\u3002\u8fd9\u4f7f\u5f97\u6570\u7ec4\u5177\u5907\u4e86\u901a\u8fc7\u4e0b\u6807\u5feb\u901f\u8bbf\u95ee\u6570\u636e\u7684\u80fd\u529b\u3002 \u4f46\u8fde\u7eed\u5b58\u50a8\u7684\u7f3a\u70b9\u4e5f\u5f88\u660e\u663e\uff0c\u589e\u52a0\u5bb9\u91cf\uff0c\u589e\u5220\u5143\u7d20\u7684\u6210\u672c\u5f88\u9ad8\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5747\u4e3a O(n)\u3002\u589e\u52a0\u6570\u7ec4\u5bb9\u91cf\u9700\u8981\u5148\u7533\u8bf7\u4e00\u5757\u65b0\u7684\u5185\u5b58\uff0c\u7136\u540e\u590d\u5236\u539f\u6709\u7684\u5143\u7d20\u3002\u5982\u679c\u9700\u8981\u7684\u8bdd\uff0c\u53ef\u80fd\u8fd8\u8981\u5220\u9664\u539f\u5148\u7684\u5185\u5b58\u3002 \u5220\u9664\u5143\u7d20\u65f6\u9700\u8981\u79fb\u52a8\u88ab\u5220\u9664\u5143\u7d20\u4e4b\u540e\u7684\u6240\u6709\u5143\u7d20\u4ee5\u4fdd\u8bc1\u6240\u6709\u5143\u7d20\u662f\u8fde\u7eed\u7684\u3002\u589e\u52a0\u5143\u7d20\u65f6\u9700\u8981\u79fb\u52a8\u6307\u5b9a\u4f4d\u7f6e\u53ca\u4e4b\u540e\u7684\u6240\u6709\u5143\u7d20\uff0c\u7136\u540e\u5c06\u65b0\u589e\u5143\u7d20\u63d2\u5165\u5230\u6307\u5b9a\u4f4d\u7f6e\uff0c\u5982\u679c\u5bb9\u91cf\u4e0d\u8db3\u7684\u8bdd\u8fd8\u9700\u8981\u5148\u8fdb\u884c\u6269\u5bb9\u64cd\u4f5c\u3002 \u603b\u7ed3\u4e00\u4e0b\u6570\u7ec4\u7684\u4f18\u7f3a\u70b9\uff1a \u4f18\u70b9\uff1a\u53ef\u4ee5\u6839\u636e\u504f\u79fb\u5b9e\u73b0\u5feb\u901f\u7684\u968f\u673a\u8bfb\u5199\u3002 \u7f3a\u70b9\uff1a\u6269\u5bb9\uff0c\u589e\u5220\u5143\u7d20\u6781\u6162\u3002 \u94fe\u8868 \uff0c\u7531\u82e5\u5e72\u4e2a\u7ed3\u70b9\u7ec4\u6210\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u5305\u542b\u6570\u636e\u57df\u548c\u6307\u9488\u57df\u3002\u7ed3\u70b9\u7ed3\u6784\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u4e00\u822c\u6765\u8bb2\uff0c\u94fe\u8868\u4e2d\u53ea\u4f1a\u6709\u4e00\u4e2a\u7ed3\u70b9\u7684\u6307\u9488\u57df\u4e3a\u7a7a\uff0c\u8be5\u7ed3\u70b9\u4e3a\u5c3e\u7ed3\u70b9\uff0c\u5176\u4ed6\u7ed3\u70b9\u7684\u6307\u9488\u57df\u90fd\u4f1a\u5b58\u50a8\u4e00\u4e2a\u7ed3\u70b9\u7684\u5185\u5b58\u5730\u5740\u3002\u94fe\u8868\u4e2d\u4e5f\u53ea\u4f1a\u6709\u4e00\u4e2a\u7ed3\u70b9\u7684\u5185\u5b58\u5730\u5740\u6ca1\u6709\u5b58\u50a8\u5728\u5176\u4ed6\u7ed3\u70b9\u7684\u6307\u9488\u57df\uff0c\u8be5\u7ed3\u70b9\u79f0\u4e3a\u5934\u7ed3\u70b9\u3002 \u94fe\u8868\u7684\u5b58\u50a8\u65b9\u5f0f\u4f7f\u5f97\u5b83\u53ef\u4ee5\u9ad8\u6548\u7684\u5728\u6307\u5b9a\u4f4d\u7f6e\u63d2\u5165\u4e0e\u5220\u9664\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5747\u4e3a O(1)\u3002 \u5728\u7ed3\u70b9 p \u4e4b\u540e \u589e\u52a0 \u4e00\u4e2a\u7ed3\u70b9 q \u603b\u5171\u5206\u4e09\u6b65\uff1a \u7533\u8bf7\u4e00\u6bb5\u5185\u5b58\u7528\u4ee5\u5b58\u50a8 q (\u53ef\u4ee5\u4f7f\u7528\u5185\u5b58\u6c60\u907f\u514d\u9891\u7e41\u7533\u8bf7\u548c\u9500\u6bc1\u5185\u5b58)\u3002 \u5c06 p \u7684\u6307\u9488\u57df\u6570\u636e\u590d\u5236\u5230 q \u7684\u6307\u9488\u57df\u3002 \u66f4\u65b0 p \u7684\u6307\u9488\u57df\u4e3a q \u7684\u5730\u5740\u3002 \u5220\u9664 \u7ed3\u70b9 p \u4e4b\u540e\u7684\u7ed3\u70b9 q \u603b\u5171\u5206\u4e24\u6b65\uff1a \u5c06 q \u7684\u6307\u9488\u57df\u590d\u5236\u5230 p \u7684\u6307\u9488\u57df\u3002 \u91ca\u653e q \u7ed3\u70b9\u7684\u5185\u5b58\u3002 \u94fe\u8868\u7684\u4e3b\u8981\u4ee3\u7801 #include <bits/stdc++.h> using namespace std; //\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u70b9\u6a21\u677f template<typename T> struct Node { T data; Node *next; Node() : next(nullptr) {} Node(const T &d) : data(d), next(nullptr) {} }; //\u5220\u9664 p \u7ed3\u70b9\u540e\u9762\u7684\u5143\u7d20 template<typename T> void Remove(Node<T> *p) { if (p == nullptr || p->next == nullptr) { return; } auto tmp = p->next->next; delete p->next; p->next = tmp; } //\u5728 p \u7ed3\u70b9\u540e\u9762\u63d2\u5165\u5143\u7d20 template<typename T> void Insert(Node<T> *p, const T &data) { auto tmp = new Node<T>(data); tmp->next = p->next; p->next = tmp; } //\u904d\u5386\u94fe\u8868 template<typename T, typename V> void Walk(Node<T> *p, const V &vistor) { while(p != nullptr) { vistor(p); p = p->next; } } int main() { auto p = new Node<int>(1); Insert(p, 2); int sum = 0; Walk(p, [&sum](const Node<int> *p) -> void { sum += p->data; }); cout << sum << endl; Remove(p); sum = 0; Walk(p, [&sum](const Node<int> *p) -> void { sum += p->data; }); cout << sum << endl; return 0; } \u9762\u8bd5\u95ee\u9898\u603b\u7ed3 \u65e0\u6cd5\u9ad8\u6548\u83b7\u53d6\u957f\u5ea6\uff0c\u65e0\u6cd5\u6839\u636e\u504f\u79fb\u5feb\u901f\u8bbf\u95ee\u5143\u7d20\uff0c\u662f\u94fe\u8868\u7684\u4e24\u4e2a\u52a3\u52bf\u3002\u7136\u800c\u9762\u8bd5\u7684\u65f6\u5019\u7ecf\u5e38\u78b0\u89c1\u8bf8\u5982 \u83b7\u53d6\u5012\u6570\u7b2ck\u4e2a\u5143\u7d20\uff0c\u83b7\u53d6\u4e2d\u95f4\u4f4d\u7f6e\u7684\u5143\u7d20\uff0c\u5224\u65ad\u94fe\u8868\u662f\u5426\u5b58\u5728\u73af\uff0c\u5224\u65ad\u73af\u7684\u957f\u5ea6\u7b49 \u548c\u957f\u5ea6\u4e0e\u4f4d\u7f6e\u6709\u5173\u7684\u95ee\u9898\u3002\u8fd9\u4e9b\u95ee\u9898\u90fd\u53ef\u4ee5\u901a\u8fc7\u7075\u6d3b\u8fd0\u7528\u53cc\u6307\u9488\u6765\u89e3\u51b3\u3002 Tips\uff1a\u53cc\u6307\u9488\u5e76\u4e0d\u662f\u56fa\u5b9a\u7684\u516c\u5f0f\uff0c\u800c\u662f\u4e00\u79cd\u601d\u7ef4\u65b9\u5f0f~ \u5148\u6765\u770b\" \u5012\u6570\u7b2ck\u4e2a\u5143\u7d20\u7684\u95ee\u9898 \"\u3002\u8bbe\u6709\u4e24\u4e2a\u6307\u9488 p \u548c q\uff0c\u521d\u59cb\u65f6\u5747\u6307\u5411\u5934\u7ed3\u70b9\u3002\u9996\u5148\uff0c\u5148\u8ba9 p \u6cbf\u7740 next \u79fb\u52a8 k \u6b21\u3002\u6b64\u65f6\uff0cp \u6307\u5411\u7b2c k+1\u4e2a\u7ed3\u70b9\uff0cq \u6307\u5411\u5934\u8282\u70b9\uff0c\u4e24\u4e2a\u6307\u9488\u7684\u8ddd\u79bb\u4e3a k \u3002\u7136\u540e\uff0c\u540c\u65f6\u79fb\u52a8 p \u548c q\uff0c\u76f4\u5230 p \u6307\u5411\u7a7a\uff0c\u6b64\u65f6 q \u5373\u6307\u5411\u5012\u6570\u7b2c k \u4e2a\u7ed3\u70b9\u3002\u53ef\u4ee5\u53c2\u8003\u4e0b\u56fe\u6765\u7406\u89e3\uff1a class Solution { public: ListNode* getKthFromEnd(ListNode* head, int k) { ListNode *p = head, *q = head; //\u521d\u59cb\u5316 while(k--) { //\u5c06 p\u6307\u9488\u79fb\u52a8 k \u6b21 p = p->next; } while(p != nullptr) {//\u540c\u65f6\u79fb\u52a8\uff0c\u76f4\u5230 p == nullptr p = p->next; q = q->next; } return q; } }; \u83b7\u53d6\u4e2d\u95f4\u5143\u7d20\u7684\u95ee\u9898 \u3002\u8bbe\u6709\u4e24\u4e2a\u6307\u9488 fast \u548c slow\uff0c\u521d\u59cb\u65f6\u6307\u5411\u5934\u8282\u70b9\u3002\u6bcf\u6b21\u79fb\u52a8\u65f6\uff0cfast\u5411\u540e\u8d70\u4e24\u6b21\uff0cslow\u5411\u540e\u8d70\u4e00\u6b21\uff0c\u76f4\u5230 fast \u65e0\u6cd5\u5411\u540e\u8d70\u4e24\u6b21\u3002\u8fd9\u4f7f\u5f97\u5728\u6bcf\u8f6e\u79fb\u52a8\u4e4b\u540e\u3002fast \u548c slow \u7684\u8ddd\u79bb\u5c31\u4f1a\u589e\u52a0\u4e00\u3002\u8bbe\u94fe\u8868\u6709 n \u4e2a\u5143\u7d20\uff0c\u90a3\u4e48\u6700\u591a\u79fb\u52a8 n/2 \u8f6e\u3002\u5f53 n \u4e3a\u5947\u6570\u65f6\uff0cslow \u6070\u597d\u6307\u5411\u4e2d\u95f4\u7ed3\u70b9\uff0c\u5f53 n \u4e3a \u5076\u6570\u65f6\uff0cslow \u6070\u597d\u6307\u5411\u4e2d\u95f4\u4e24\u4e2a\u7ed3\u70b9\u7684\u9760\u524d\u4e00\u4e2a(\u53ef\u4ee5\u8003\u8651\u4e0b\u5982\u4f55\u4f7f\u5176\u6307\u5411\u540e\u4e00\u4e2a\u7ed3\u70b9\u5462\uff1f)\u3002 \u4e0b\u8ff0\u4ee3\u7801\u5b9e\u73b0\u4e86 n \u4e3a\u5076\u6570\u65f6\u6162\u6307\u9488\u6307\u5411\u9760\u540e\u7ed3\u70b9\u3002 class Solution { public: ListNode* middleNode(ListNode* head) { ListNode *p = head, *q = head; while(q != nullptr && q->next != nullptr) { p = p->next; q = q->next->next; } return p; } }; \u662f\u5426\u5b58\u5728\u73af\u7684\u95ee\u9898 \u3002\u5982\u679c\u5c06\u5c3e\u7ed3\u70b9\u7684 next \u6307\u9488\u6307\u5411\u5176\u4ed6\u4efb\u610f\u4e00\u4e2a\u7ed3\u70b9\uff0c\u90a3\u4e48\u94fe\u8868\u5c31\u5b58\u5728\u4e86\u4e00\u4e2a\u73af\u3002 \u4e0a\u4e00\u90e8\u5206\u4e2d\uff0c\u603b\u7ed3\u5feb\u6162\u6307\u9488\u7684\u7279\u6027 \u2014\u2014 \u6bcf\u8f6e\u79fb\u52a8\u4e4b\u540e\u4e24\u8005\u7684\u8ddd\u79bb\u4f1a\u52a0\u4e00\u3002\u4e0b\u9762\u4f1a\u7ee7\u7eed\u7528\u8be5\u7279\u6027\u89e3\u51b3\u73af\u7684\u95ee\u9898\u3002 \u5f53\u4e00\u4e2a\u94fe\u8868\u6709\u73af\u65f6\uff0c\u5feb\u6162\u6307\u9488\u90fd\u4f1a\u9677\u5165\u73af\u4e2d\u8fdb\u884c\u65e0\u9650\u6b21\u79fb\u52a8\uff0c\u7136\u540e\u53d8\u6210\u4e86\u8ffd\u53ca\u95ee\u9898\u3002\u60f3\u8c61\u4e00\u4e0b\u5728\u64cd\u573a\u8dd1\u6b65\u7684\u573a\u666f\uff0c\u53ea\u8981\u4e00\u76f4\u8dd1\u4e0b\u53bb\uff0c\u5feb\u7684\u603b\u4f1a\u8ffd\u4e0a\u6162\u7684\u3002\u5f53\u4e24\u4e2a\u6307\u9488\u90fd\u8fdb\u5165\u73af\u540e\uff0c\u6bcf\u8f6e\u79fb\u52a8\u4f7f\u5f97\u6162\u6307\u9488\u5230\u5feb\u6307\u9488\u7684\u8ddd\u79bb\u589e\u52a0\u4e00\uff0c\u540c\u65f6\u5feb\u6307\u9488\u5230\u6162\u6307\u9488\u7684\u8ddd\u79bb\u4e5f\u51cf\u5c11\u4e00\uff0c\u53ea\u8981\u4e00\u76f4\u79fb\u52a8\u4e0b\u53bb\uff0c\u5feb\u6307\u9488\u603b\u4f1a\u8ffd\u4e0a\u6162\u6307\u9488\u3002 \u6839\u636e\u4e0a\u8ff0\u8868\u8ff0\u5f97\u51fa\uff0c\u5982\u679c\u4e00\u4e2a\u94fe\u8868\u5b58\u5728\u73af\uff0c\u90a3\u4e48\u5feb\u6162\u6307\u9488\u5fc5\u7136\u4f1a\u76f8\u9047\u3002\u5b9e\u73b0\u4ee3\u7801\u5982\u4e0b\uff1a class Solution { public: bool hasCycle(ListNode *head) { ListNode *slow = head; ListNode *fast = head; while(fast != nullptr) { fast = fast->next; if(fast != nullptr) { fast = fast->next; } if(fast == slow) { return true; } slow = slow->next; } return nullptr; } }; \u6700\u540e\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u5b58\u5728\u73af\uff0c\u5982\u4f55\u5224\u65ad\u73af\u7684\u957f\u5ea6\u5462\uff1f\u65b9\u6cd5\u662f\uff0c\u5feb\u6162\u6307\u9488\u76f8\u9047\u540e\u7ee7\u7eed\u79fb\u52a8\uff0c\u76f4\u5230\u7b2c\u4e8c\u6b21\u76f8\u9047\u3002\u4e24\u6b21\u76f8\u9047\u95f4\u7684\u79fb\u52a8\u6b21\u6570\u5373\u4e3a\u73af\u7684\u957f\u5ea6\u3002 Reference https://leetcode-cn.com/problems/linked-list-cycle/solution/yi-wen-gao-ding-chang-jian-de-lian-biao-wen-ti-h-2/#comment \u4f18\u5148\u961f\u5217 / \u5806 \u5251\u6307offer41.\u6570\u636e\u6d41\u4e2d\u7684\u4e2d\u4f4d\u6570 \u5982\u4f55\u5f97\u5230\u4e00\u4e2a\u6570\u636e\u6d41\u4e2d\u7684\u4e2d\u4f4d\u6570\uff1f\u5982\u679c\u4ece\u6570\u636e\u6d41\u4e2d\u8bfb\u51fa\u5947\u6570\u4e2a\u6570\u503c\uff0c\u90a3\u4e48\u4e2d\u4f4d\u6570\u5c31\u662f\u6240\u6709\u6570\u503c\u6392\u5e8f\u4e4b\u540e\u4f4d\u4e8e\u4e2d\u95f4\u7684\u6570\u503c\u3002\u5982\u679c\u4ece\u6570\u636e\u6d41\u4e2d\u8bfb\u51fa\u5076\u6570\u4e2a\u6570\u503c\uff0c\u90a3\u4e48\u4e2d\u4f4d\u6570\u5c31\u662f\u6240\u6709\u6570\u503c\u6392\u5e8f\u4e4b\u540e\u4e2d\u95f4\u4e24\u4e2a\u6570\u7684\u5e73\u5747\u503c\u3002 \u5b9e\u73b0\uff1a 1.\u6bcf\u63d2\u5165\u4e00\u4e2a\u6570\u4e4b\u524d\uff0c\u5148\u5224\u65ad\u4e24\u4e2a\u5806\u7684 size() \u662f\u5426\u76f8\u7b49\u3002 2.\u82e5\u76f8\u7b49\uff0c\u5148\u5c06\u8fd9\u4e2a\u6570\u63d2\u5165\u5927\u9876\u5806\uff0c\u7136\u540e\u5c06\u5927\u9876\u5806\u7684 top() \u63d2\u5165\u5c0f\u9876\u5806\u3002\u8fd9\u4e48\u505a\u53ef\u4ee5\u4fdd\u8bc1\u5c0f\u9876\u5806\u7684\u6240\u6709\u6570\u6c38\u8fdc\u5927\u4e8e\u7b49\u4e8e\u5927\u9876\u5806\u7684 top()\u3002 3.\u82e5\u4e0d\u76f8\u7b49\uff0c\u5148\u5c06\u8fd9\u4e2a\u6570\u63d2\u5165\u5c0f\u9876\u5806\uff0c\u7136\u540e\u5c06\u5c0f\u9876\u5806\u7684 top() \u63d2\u5165\u5927\u9876\u5806\u3002\u8fd9\u4e48\u505a\u53ef\u4ee5\u4fdd\u8bc1\u5927\u9876\u5806\u7684\u6240\u6709\u6570\u6c38\u8fdc\u5c0f\u4e8e\u7b49\u4e8e\u5c0f\u9876\u5806\u7684 top()\u3002 class MedianFinder { public: /** initialize your data structure here. */ priority_queue<int, vector<int>, less<int> > maxheap; priority_queue<int, vector<int>, greater<int> > minheap; MedianFinder() {} void addNum(int num) { if(maxheap.size() == minheap.size()) { maxheap.push(num); minheap.push(maxheap.top()); maxheap.pop(); } else { minheap.push(num); maxheap.push(minheap.top()); minheap.pop(); } } double findMedian() { int maxSize = maxheap.size(), minSize = minheap.size(); int mid1 = maxheap.top(), mid2 = minheap.top(); return maxSize == minSize ? ((mid1 + mid2) * 0.5) : mid2; } }; \u961f\u5217\uff1a\u5148\u8fdb\u5148\u51fa \u4f18\u5148\u961f\u5217\uff1a 1.\u6700\u5927\u4f18\u5148\u961f\u5217\uff0c\u65e0\u8bba\u5165\u961f\u987a\u5e8f\uff0c\u5f53\u524d\u6700\u5927\u7684\u5143\u7d20\u4f18\u5148\u51fa\u961f\u3002 2.\u6700\u5c0f\u4f18\u5148\u961f\u5217\uff0c\u65e0\u8bba\u5165\u961f\u987a\u5e8f\uff0c\u5f53\u524d\u6700\u5c0f\u7684\u5143\u7d20\u4f18\u5148\u51fa\u961f\u3002","title":"LeetCode"},{"location":"%E5%8A%9B%E6%89%A3%E5%8A%9B%E6%89%A3/LeetCode/#_1","text":"","title":"\u6570\u7ec4"},{"location":"%E5%8A%9B%E6%89%A3%E5%8A%9B%E6%89%A3/LeetCode/#53-i-i","text":"\u6392\u5e8f\u4e2d\u7684\u641c\u7d22\u95ee\u9898\uff0c\u9996\u5148\u8003\u8651\u4e8c\u5206","title":"\u5251\u630753 - I. \u5728\u6392\u5e8f\u6570\u7ec4\u4e2d\u67e5\u627e\u6570\u5b57 I"},{"location":"%E5%8A%9B%E6%89%A3%E5%8A%9B%E6%89%A3/LeetCode/#offer-53-ii-0n-1","text":"\u201c \u8003\u70b9\u4e3b\u8981\u8fd8\u662f\u4e8c\u5206\u6cd5\uff0c\u9898\u76ee\u6bcf\u4e2a\u6761\u4ef6\u90fd\u662f\u6709\u7528\u7684\u3002\u6240\u6709\u9898\u90fd\u62ff\u6765\u904d\u5386\uff0coffer\u4e5f\u5c31\u904d\u5386\u5230\u522b\u4eba\u90a3\u91cc\u53bb\u4e86 \u201d \u6839\u636e\u9898\u610f\uff0c\u6570\u7ec4\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u89c4\u5219\u5212\u5206\u4e3a\u4e24\u90e8\u5206\u3002 \u5de6\u5b50\u6570\u7ec4\uff1a nums[i] = inums[i]=i ; \u53f3\u5b50\u6570\u7ec4\uff1a nums[i] != nums[i] ; \u7f3a\u5931\u7684\u6570\u5b57\u7b49\u4e8e \u201c\u53f3\u5b50\u6570\u7ec4\u7684\u9996\u4f4d\u5143\u7d20\u201d \u5bf9\u5e94\u7684\u7d22\u5f15\uff1b\u56e0\u6b64\u8003\u8651\u4f7f\u7528\u4e8c\u5206\u6cd5\u67e5\u627e \u201c\u53f3\u5b50\u6570\u7ec4\u7684\u9996\u4f4d\u5143\u7d20\u201d class Solution { public: int missingNumber(vector<int>& nums) { if(nums.size() == 0) { return -1; } int left = 0, right = nums.size() - 1; while(left <= right) { int mid = (left + right)/2; if(nums[mid] != mid) { right = mid - 1; } else { left = mid + 1; } } return left; } };","title":"\u5251\u6307 Offer 53 - II. 0\uff5en-1\u4e2d\u7f3a\u5931\u7684\u6570\u5b57"},{"location":"%E5%8A%9B%E6%89%A3%E5%8A%9B%E6%89%A3/LeetCode/#_2","text":"","title":"\u94fe\u8868"},{"location":"%E5%8A%9B%E6%89%A3%E5%8A%9B%E6%89%A3/LeetCode/#141","text":"\u76f8\u7231\u76f8\u6740\u597d\u57fa\u53cb\u2014\u2014\u6570\u7ec4\u4e0e\u94fe\u8868 \u4f5c\u4e3a\u7ebf\u6027\u8868\u7684\u4e24\u79cd\u5b58\u50a8\u65b9\u5f0f \u2014\u2014 \u94fe\u8868\u548c\u6570\u7ec4\uff0c\u8fd9\u5bf9\u76f8\u7231\u76f8\u6740\u7684\u597d\u57fa\u53cb\u6709\u7740\u5404\u81ea\u7684\u4f18\u7f3a\u70b9\u3002\u63a5\u4e0b\u6765\uff0c\u6211\u4eec\u68b3\u7406\u4e00\u4e0b\u8fd9\u4e24\u79cd\u65b9\u5f0f\u3002 \u6570\u7ec4 \uff0c\u6240\u6709\u5143\u7d20\u90fd\u8fde\u7eed\u7684\u5b58\u50a8\u4e8e\u4e00\u6bb5\u5185\u5b58\u4e2d\uff0c\u4e14\u6bcf\u4e2a\u5143\u7d20\u5360\u7528\u7684\u5185\u5b58\u5927\u5c0f\u76f8\u540c\u3002\u8fd9\u4f7f\u5f97\u6570\u7ec4\u5177\u5907\u4e86\u901a\u8fc7\u4e0b\u6807\u5feb\u901f\u8bbf\u95ee\u6570\u636e\u7684\u80fd\u529b\u3002 \u4f46\u8fde\u7eed\u5b58\u50a8\u7684\u7f3a\u70b9\u4e5f\u5f88\u660e\u663e\uff0c\u589e\u52a0\u5bb9\u91cf\uff0c\u589e\u5220\u5143\u7d20\u7684\u6210\u672c\u5f88\u9ad8\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5747\u4e3a O(n)\u3002\u589e\u52a0\u6570\u7ec4\u5bb9\u91cf\u9700\u8981\u5148\u7533\u8bf7\u4e00\u5757\u65b0\u7684\u5185\u5b58\uff0c\u7136\u540e\u590d\u5236\u539f\u6709\u7684\u5143\u7d20\u3002\u5982\u679c\u9700\u8981\u7684\u8bdd\uff0c\u53ef\u80fd\u8fd8\u8981\u5220\u9664\u539f\u5148\u7684\u5185\u5b58\u3002 \u5220\u9664\u5143\u7d20\u65f6\u9700\u8981\u79fb\u52a8\u88ab\u5220\u9664\u5143\u7d20\u4e4b\u540e\u7684\u6240\u6709\u5143\u7d20\u4ee5\u4fdd\u8bc1\u6240\u6709\u5143\u7d20\u662f\u8fde\u7eed\u7684\u3002\u589e\u52a0\u5143\u7d20\u65f6\u9700\u8981\u79fb\u52a8\u6307\u5b9a\u4f4d\u7f6e\u53ca\u4e4b\u540e\u7684\u6240\u6709\u5143\u7d20\uff0c\u7136\u540e\u5c06\u65b0\u589e\u5143\u7d20\u63d2\u5165\u5230\u6307\u5b9a\u4f4d\u7f6e\uff0c\u5982\u679c\u5bb9\u91cf\u4e0d\u8db3\u7684\u8bdd\u8fd8\u9700\u8981\u5148\u8fdb\u884c\u6269\u5bb9\u64cd\u4f5c\u3002 \u603b\u7ed3\u4e00\u4e0b\u6570\u7ec4\u7684\u4f18\u7f3a\u70b9\uff1a \u4f18\u70b9\uff1a\u53ef\u4ee5\u6839\u636e\u504f\u79fb\u5b9e\u73b0\u5feb\u901f\u7684\u968f\u673a\u8bfb\u5199\u3002 \u7f3a\u70b9\uff1a\u6269\u5bb9\uff0c\u589e\u5220\u5143\u7d20\u6781\u6162\u3002 \u94fe\u8868 \uff0c\u7531\u82e5\u5e72\u4e2a\u7ed3\u70b9\u7ec4\u6210\uff0c\u6bcf\u4e2a\u7ed3\u70b9\u5305\u542b\u6570\u636e\u57df\u548c\u6307\u9488\u57df\u3002\u7ed3\u70b9\u7ed3\u6784\u5982\u4e0b\u56fe\u6240\u793a\uff1a \u4e00\u822c\u6765\u8bb2\uff0c\u94fe\u8868\u4e2d\u53ea\u4f1a\u6709\u4e00\u4e2a\u7ed3\u70b9\u7684\u6307\u9488\u57df\u4e3a\u7a7a\uff0c\u8be5\u7ed3\u70b9\u4e3a\u5c3e\u7ed3\u70b9\uff0c\u5176\u4ed6\u7ed3\u70b9\u7684\u6307\u9488\u57df\u90fd\u4f1a\u5b58\u50a8\u4e00\u4e2a\u7ed3\u70b9\u7684\u5185\u5b58\u5730\u5740\u3002\u94fe\u8868\u4e2d\u4e5f\u53ea\u4f1a\u6709\u4e00\u4e2a\u7ed3\u70b9\u7684\u5185\u5b58\u5730\u5740\u6ca1\u6709\u5b58\u50a8\u5728\u5176\u4ed6\u7ed3\u70b9\u7684\u6307\u9488\u57df\uff0c\u8be5\u7ed3\u70b9\u79f0\u4e3a\u5934\u7ed3\u70b9\u3002 \u94fe\u8868\u7684\u5b58\u50a8\u65b9\u5f0f\u4f7f\u5f97\u5b83\u53ef\u4ee5\u9ad8\u6548\u7684\u5728\u6307\u5b9a\u4f4d\u7f6e\u63d2\u5165\u4e0e\u5220\u9664\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u5747\u4e3a O(1)\u3002 \u5728\u7ed3\u70b9 p \u4e4b\u540e \u589e\u52a0 \u4e00\u4e2a\u7ed3\u70b9 q \u603b\u5171\u5206\u4e09\u6b65\uff1a \u7533\u8bf7\u4e00\u6bb5\u5185\u5b58\u7528\u4ee5\u5b58\u50a8 q (\u53ef\u4ee5\u4f7f\u7528\u5185\u5b58\u6c60\u907f\u514d\u9891\u7e41\u7533\u8bf7\u548c\u9500\u6bc1\u5185\u5b58)\u3002 \u5c06 p \u7684\u6307\u9488\u57df\u6570\u636e\u590d\u5236\u5230 q \u7684\u6307\u9488\u57df\u3002 \u66f4\u65b0 p \u7684\u6307\u9488\u57df\u4e3a q \u7684\u5730\u5740\u3002 \u5220\u9664 \u7ed3\u70b9 p \u4e4b\u540e\u7684\u7ed3\u70b9 q \u603b\u5171\u5206\u4e24\u6b65\uff1a \u5c06 q \u7684\u6307\u9488\u57df\u590d\u5236\u5230 p \u7684\u6307\u9488\u57df\u3002 \u91ca\u653e q \u7ed3\u70b9\u7684\u5185\u5b58\u3002 \u94fe\u8868\u7684\u4e3b\u8981\u4ee3\u7801 #include <bits/stdc++.h> using namespace std; //\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u70b9\u6a21\u677f template<typename T> struct Node { T data; Node *next; Node() : next(nullptr) {} Node(const T &d) : data(d), next(nullptr) {} }; //\u5220\u9664 p \u7ed3\u70b9\u540e\u9762\u7684\u5143\u7d20 template<typename T> void Remove(Node<T> *p) { if (p == nullptr || p->next == nullptr) { return; } auto tmp = p->next->next; delete p->next; p->next = tmp; } //\u5728 p \u7ed3\u70b9\u540e\u9762\u63d2\u5165\u5143\u7d20 template<typename T> void Insert(Node<T> *p, const T &data) { auto tmp = new Node<T>(data); tmp->next = p->next; p->next = tmp; } //\u904d\u5386\u94fe\u8868 template<typename T, typename V> void Walk(Node<T> *p, const V &vistor) { while(p != nullptr) { vistor(p); p = p->next; } } int main() { auto p = new Node<int>(1); Insert(p, 2); int sum = 0; Walk(p, [&sum](const Node<int> *p) -> void { sum += p->data; }); cout << sum << endl; Remove(p); sum = 0; Walk(p, [&sum](const Node<int> *p) -> void { sum += p->data; }); cout << sum << endl; return 0; } \u9762\u8bd5\u95ee\u9898\u603b\u7ed3 \u65e0\u6cd5\u9ad8\u6548\u83b7\u53d6\u957f\u5ea6\uff0c\u65e0\u6cd5\u6839\u636e\u504f\u79fb\u5feb\u901f\u8bbf\u95ee\u5143\u7d20\uff0c\u662f\u94fe\u8868\u7684\u4e24\u4e2a\u52a3\u52bf\u3002\u7136\u800c\u9762\u8bd5\u7684\u65f6\u5019\u7ecf\u5e38\u78b0\u89c1\u8bf8\u5982 \u83b7\u53d6\u5012\u6570\u7b2ck\u4e2a\u5143\u7d20\uff0c\u83b7\u53d6\u4e2d\u95f4\u4f4d\u7f6e\u7684\u5143\u7d20\uff0c\u5224\u65ad\u94fe\u8868\u662f\u5426\u5b58\u5728\u73af\uff0c\u5224\u65ad\u73af\u7684\u957f\u5ea6\u7b49 \u548c\u957f\u5ea6\u4e0e\u4f4d\u7f6e\u6709\u5173\u7684\u95ee\u9898\u3002\u8fd9\u4e9b\u95ee\u9898\u90fd\u53ef\u4ee5\u901a\u8fc7\u7075\u6d3b\u8fd0\u7528\u53cc\u6307\u9488\u6765\u89e3\u51b3\u3002 Tips\uff1a\u53cc\u6307\u9488\u5e76\u4e0d\u662f\u56fa\u5b9a\u7684\u516c\u5f0f\uff0c\u800c\u662f\u4e00\u79cd\u601d\u7ef4\u65b9\u5f0f~ \u5148\u6765\u770b\" \u5012\u6570\u7b2ck\u4e2a\u5143\u7d20\u7684\u95ee\u9898 \"\u3002\u8bbe\u6709\u4e24\u4e2a\u6307\u9488 p \u548c q\uff0c\u521d\u59cb\u65f6\u5747\u6307\u5411\u5934\u7ed3\u70b9\u3002\u9996\u5148\uff0c\u5148\u8ba9 p \u6cbf\u7740 next \u79fb\u52a8 k \u6b21\u3002\u6b64\u65f6\uff0cp \u6307\u5411\u7b2c k+1\u4e2a\u7ed3\u70b9\uff0cq \u6307\u5411\u5934\u8282\u70b9\uff0c\u4e24\u4e2a\u6307\u9488\u7684\u8ddd\u79bb\u4e3a k \u3002\u7136\u540e\uff0c\u540c\u65f6\u79fb\u52a8 p \u548c q\uff0c\u76f4\u5230 p \u6307\u5411\u7a7a\uff0c\u6b64\u65f6 q \u5373\u6307\u5411\u5012\u6570\u7b2c k \u4e2a\u7ed3\u70b9\u3002\u53ef\u4ee5\u53c2\u8003\u4e0b\u56fe\u6765\u7406\u89e3\uff1a class Solution { public: ListNode* getKthFromEnd(ListNode* head, int k) { ListNode *p = head, *q = head; //\u521d\u59cb\u5316 while(k--) { //\u5c06 p\u6307\u9488\u79fb\u52a8 k \u6b21 p = p->next; } while(p != nullptr) {//\u540c\u65f6\u79fb\u52a8\uff0c\u76f4\u5230 p == nullptr p = p->next; q = q->next; } return q; } }; \u83b7\u53d6\u4e2d\u95f4\u5143\u7d20\u7684\u95ee\u9898 \u3002\u8bbe\u6709\u4e24\u4e2a\u6307\u9488 fast \u548c slow\uff0c\u521d\u59cb\u65f6\u6307\u5411\u5934\u8282\u70b9\u3002\u6bcf\u6b21\u79fb\u52a8\u65f6\uff0cfast\u5411\u540e\u8d70\u4e24\u6b21\uff0cslow\u5411\u540e\u8d70\u4e00\u6b21\uff0c\u76f4\u5230 fast \u65e0\u6cd5\u5411\u540e\u8d70\u4e24\u6b21\u3002\u8fd9\u4f7f\u5f97\u5728\u6bcf\u8f6e\u79fb\u52a8\u4e4b\u540e\u3002fast \u548c slow \u7684\u8ddd\u79bb\u5c31\u4f1a\u589e\u52a0\u4e00\u3002\u8bbe\u94fe\u8868\u6709 n \u4e2a\u5143\u7d20\uff0c\u90a3\u4e48\u6700\u591a\u79fb\u52a8 n/2 \u8f6e\u3002\u5f53 n \u4e3a\u5947\u6570\u65f6\uff0cslow \u6070\u597d\u6307\u5411\u4e2d\u95f4\u7ed3\u70b9\uff0c\u5f53 n \u4e3a \u5076\u6570\u65f6\uff0cslow \u6070\u597d\u6307\u5411\u4e2d\u95f4\u4e24\u4e2a\u7ed3\u70b9\u7684\u9760\u524d\u4e00\u4e2a(\u53ef\u4ee5\u8003\u8651\u4e0b\u5982\u4f55\u4f7f\u5176\u6307\u5411\u540e\u4e00\u4e2a\u7ed3\u70b9\u5462\uff1f)\u3002 \u4e0b\u8ff0\u4ee3\u7801\u5b9e\u73b0\u4e86 n \u4e3a\u5076\u6570\u65f6\u6162\u6307\u9488\u6307\u5411\u9760\u540e\u7ed3\u70b9\u3002 class Solution { public: ListNode* middleNode(ListNode* head) { ListNode *p = head, *q = head; while(q != nullptr && q->next != nullptr) { p = p->next; q = q->next->next; } return p; } }; \u662f\u5426\u5b58\u5728\u73af\u7684\u95ee\u9898 \u3002\u5982\u679c\u5c06\u5c3e\u7ed3\u70b9\u7684 next \u6307\u9488\u6307\u5411\u5176\u4ed6\u4efb\u610f\u4e00\u4e2a\u7ed3\u70b9\uff0c\u90a3\u4e48\u94fe\u8868\u5c31\u5b58\u5728\u4e86\u4e00\u4e2a\u73af\u3002 \u4e0a\u4e00\u90e8\u5206\u4e2d\uff0c\u603b\u7ed3\u5feb\u6162\u6307\u9488\u7684\u7279\u6027 \u2014\u2014 \u6bcf\u8f6e\u79fb\u52a8\u4e4b\u540e\u4e24\u8005\u7684\u8ddd\u79bb\u4f1a\u52a0\u4e00\u3002\u4e0b\u9762\u4f1a\u7ee7\u7eed\u7528\u8be5\u7279\u6027\u89e3\u51b3\u73af\u7684\u95ee\u9898\u3002 \u5f53\u4e00\u4e2a\u94fe\u8868\u6709\u73af\u65f6\uff0c\u5feb\u6162\u6307\u9488\u90fd\u4f1a\u9677\u5165\u73af\u4e2d\u8fdb\u884c\u65e0\u9650\u6b21\u79fb\u52a8\uff0c\u7136\u540e\u53d8\u6210\u4e86\u8ffd\u53ca\u95ee\u9898\u3002\u60f3\u8c61\u4e00\u4e0b\u5728\u64cd\u573a\u8dd1\u6b65\u7684\u573a\u666f\uff0c\u53ea\u8981\u4e00\u76f4\u8dd1\u4e0b\u53bb\uff0c\u5feb\u7684\u603b\u4f1a\u8ffd\u4e0a\u6162\u7684\u3002\u5f53\u4e24\u4e2a\u6307\u9488\u90fd\u8fdb\u5165\u73af\u540e\uff0c\u6bcf\u8f6e\u79fb\u52a8\u4f7f\u5f97\u6162\u6307\u9488\u5230\u5feb\u6307\u9488\u7684\u8ddd\u79bb\u589e\u52a0\u4e00\uff0c\u540c\u65f6\u5feb\u6307\u9488\u5230\u6162\u6307\u9488\u7684\u8ddd\u79bb\u4e5f\u51cf\u5c11\u4e00\uff0c\u53ea\u8981\u4e00\u76f4\u79fb\u52a8\u4e0b\u53bb\uff0c\u5feb\u6307\u9488\u603b\u4f1a\u8ffd\u4e0a\u6162\u6307\u9488\u3002 \u6839\u636e\u4e0a\u8ff0\u8868\u8ff0\u5f97\u51fa\uff0c\u5982\u679c\u4e00\u4e2a\u94fe\u8868\u5b58\u5728\u73af\uff0c\u90a3\u4e48\u5feb\u6162\u6307\u9488\u5fc5\u7136\u4f1a\u76f8\u9047\u3002\u5b9e\u73b0\u4ee3\u7801\u5982\u4e0b\uff1a class Solution { public: bool hasCycle(ListNode *head) { ListNode *slow = head; ListNode *fast = head; while(fast != nullptr) { fast = fast->next; if(fast != nullptr) { fast = fast->next; } if(fast == slow) { return true; } slow = slow->next; } return nullptr; } }; \u6700\u540e\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679c\u5b58\u5728\u73af\uff0c\u5982\u4f55\u5224\u65ad\u73af\u7684\u957f\u5ea6\u5462\uff1f\u65b9\u6cd5\u662f\uff0c\u5feb\u6162\u6307\u9488\u76f8\u9047\u540e\u7ee7\u7eed\u79fb\u52a8\uff0c\u76f4\u5230\u7b2c\u4e8c\u6b21\u76f8\u9047\u3002\u4e24\u6b21\u76f8\u9047\u95f4\u7684\u79fb\u52a8\u6b21\u6570\u5373\u4e3a\u73af\u7684\u957f\u5ea6\u3002","title":"141.\u73af\u5f62\u94fe\u8868"},{"location":"%E5%8A%9B%E6%89%A3%E5%8A%9B%E6%89%A3/LeetCode/#reference","text":"https://leetcode-cn.com/problems/linked-list-cycle/solution/yi-wen-gao-ding-chang-jian-de-lian-biao-wen-ti-h-2/#comment","title":"Reference"},{"location":"%E5%8A%9B%E6%89%A3%E5%8A%9B%E6%89%A3/LeetCode/#_3","text":"","title":"\u4f18\u5148\u961f\u5217 / \u5806"},{"location":"%E5%8A%9B%E6%89%A3%E5%8A%9B%E6%89%A3/LeetCode/#offer41","text":"\u5982\u4f55\u5f97\u5230\u4e00\u4e2a\u6570\u636e\u6d41\u4e2d\u7684\u4e2d\u4f4d\u6570\uff1f\u5982\u679c\u4ece\u6570\u636e\u6d41\u4e2d\u8bfb\u51fa\u5947\u6570\u4e2a\u6570\u503c\uff0c\u90a3\u4e48\u4e2d\u4f4d\u6570\u5c31\u662f\u6240\u6709\u6570\u503c\u6392\u5e8f\u4e4b\u540e\u4f4d\u4e8e\u4e2d\u95f4\u7684\u6570\u503c\u3002\u5982\u679c\u4ece\u6570\u636e\u6d41\u4e2d\u8bfb\u51fa\u5076\u6570\u4e2a\u6570\u503c\uff0c\u90a3\u4e48\u4e2d\u4f4d\u6570\u5c31\u662f\u6240\u6709\u6570\u503c\u6392\u5e8f\u4e4b\u540e\u4e2d\u95f4\u4e24\u4e2a\u6570\u7684\u5e73\u5747\u503c\u3002 \u5b9e\u73b0\uff1a 1.\u6bcf\u63d2\u5165\u4e00\u4e2a\u6570\u4e4b\u524d\uff0c\u5148\u5224\u65ad\u4e24\u4e2a\u5806\u7684 size() \u662f\u5426\u76f8\u7b49\u3002 2.\u82e5\u76f8\u7b49\uff0c\u5148\u5c06\u8fd9\u4e2a\u6570\u63d2\u5165\u5927\u9876\u5806\uff0c\u7136\u540e\u5c06\u5927\u9876\u5806\u7684 top() \u63d2\u5165\u5c0f\u9876\u5806\u3002\u8fd9\u4e48\u505a\u53ef\u4ee5\u4fdd\u8bc1\u5c0f\u9876\u5806\u7684\u6240\u6709\u6570\u6c38\u8fdc\u5927\u4e8e\u7b49\u4e8e\u5927\u9876\u5806\u7684 top()\u3002 3.\u82e5\u4e0d\u76f8\u7b49\uff0c\u5148\u5c06\u8fd9\u4e2a\u6570\u63d2\u5165\u5c0f\u9876\u5806\uff0c\u7136\u540e\u5c06\u5c0f\u9876\u5806\u7684 top() \u63d2\u5165\u5927\u9876\u5806\u3002\u8fd9\u4e48\u505a\u53ef\u4ee5\u4fdd\u8bc1\u5927\u9876\u5806\u7684\u6240\u6709\u6570\u6c38\u8fdc\u5c0f\u4e8e\u7b49\u4e8e\u5c0f\u9876\u5806\u7684 top()\u3002 class MedianFinder { public: /** initialize your data structure here. */ priority_queue<int, vector<int>, less<int> > maxheap; priority_queue<int, vector<int>, greater<int> > minheap; MedianFinder() {} void addNum(int num) { if(maxheap.size() == minheap.size()) { maxheap.push(num); minheap.push(maxheap.top()); maxheap.pop(); } else { minheap.push(num); maxheap.push(minheap.top()); minheap.pop(); } } double findMedian() { int maxSize = maxheap.size(), minSize = minheap.size(); int mid1 = maxheap.top(), mid2 = minheap.top(); return maxSize == minSize ? ((mid1 + mid2) * 0.5) : mid2; } }; \u961f\u5217\uff1a\u5148\u8fdb\u5148\u51fa \u4f18\u5148\u961f\u5217\uff1a 1.\u6700\u5927\u4f18\u5148\u961f\u5217\uff0c\u65e0\u8bba\u5165\u961f\u987a\u5e8f\uff0c\u5f53\u524d\u6700\u5927\u7684\u5143\u7d20\u4f18\u5148\u51fa\u961f\u3002 2.\u6700\u5c0f\u4f18\u5148\u961f\u5217\uff0c\u65e0\u8bba\u5165\u961f\u987a\u5e8f\uff0c\u5f53\u524d\u6700\u5c0f\u7684\u5143\u7d20\u4f18\u5148\u51fa\u961f\u3002","title":"\u5251\u6307offer41.\u6570\u636e\u6d41\u4e2d\u7684\u4e2d\u4f4d\u6570"},{"location":"%E5%8A%9B%E6%89%A3%E5%8A%9B%E6%89%A3/%E9%94%99%E9%A2%98%E6%9C%AC/","text":"1. void Func(char str_arg[100]) { printf(\"%d\\n\",sizeof(str_arg)); } int main(void) { char str[]=\"Hello\"; printf(\"%d\\n\",sizeof(str)); printf(\"%d\\n\",strlen(str)); char*p=str; printf(\"%d\\n\",sizeof(p)); Func(str); } \u8f93\u51fa\u7ed3\u679c\u4e3a\uff1a6 5 4 4 \u5bf9\u5b57\u7b26\u4e32\u8fdb\u884csizeof\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u4f1a\u628a\u5b57\u7b26\u4e32\u7684\u7ed3\u675f\u7b26\"\\0\"\u8ba1\u7b97\u8fdb\u53bb\u7684\uff0c\u8fdb\u884cstrlen\u64cd\u4f5c\u6c42\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u7684\u65f6\u5019\uff0c\u4e0d\u8ba1\u7b97\\0\u7684\u3002 \u6570\u7ec4\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u4f20\u9012\u7684\u65f6\u5019\uff0c\u5df2\u7ecf\u9000\u5316\u4e3a\u6307\u9488\u4e86\uff0cFunc\u51fd\u6570\u7684\u53c2\u6570str_arg\u53ea\u662f\u8868\u793a\u4e00\u4e2a\u6307\u9488\uff0c100\u4e0d\u8d77\u4efb\u4f55\u4f5c\u7528\u7684\u3002 c++\u4e2d\u4e0d\u5141\u8bb8\u9690\u5f0f\u7684\u6570\u7ec4\u62f7\u8d1d\uff0c\u6240\u4ee5Func\u7684\u53c2\u6570\u4f1a\u88ab\u9690\u5f0f\u5730\u8f6c\u4e3achar*,\u82e5Func\u7684\u539f\u578b\u4e3avoid Func(char (&str_arg)[6])\uff08\u82e5\u4e0d\u4e3a6\u5219\u8c03\u7528\u51fa\u9519\uff09\uff0c\u5219\u7ed3\u679c\u4e3a6. 2. C c; void main() { A*pa=new A(); B b; static D d; delete pa; } \u5168\u5c40\u53d8\u91cf\u548c\u9759\u6001\u5c40\u90e8\u53d8\u91cf\u65f6\u4ece\u9759\u6001\u5b58\u50a8\u533a\u4e2d\u5212\u5206\u7684\u7a7a\u95f4\uff0c \u4e8c\u8005\u7684\u533a\u522b\u5728\u4e8e\u4f5c\u7528\u57df\u7684\u4e0d\u540c\uff0c\u5168\u5c40\u53d8\u91cf\u4f5c\u7528\u57df\u5927\u4e8e\u9759\u6001\u5c40\u90e8\u53d8\u91cf\uff08\u53ea\u7528\u4e8e\u58f0\u660e\u5b83\u7684\u51fd\u6570\u4e2d\uff09\uff0c \u800c\u4e4b\u6240\u4ee5\u662f\u5148\u91ca\u653e D \u5728\u91ca\u653e C\u7684\u539f\u56e0\u662f\uff0c \u7a0b\u5e8f\u4e2d\u9996\u5148\u8c03\u7528\u7684\u662f C\u7684\u6784\u9020\u51fd\u6570\uff0c\u7136\u540e\u8c03\u7528\u7684\u662f D \u7684\u6784\u9020\u51fd\u6570\uff0c\u6790\u6784\u51fd\u6570\u7684\u8c03\u7528\u4e0e\u6784\u9020\u51fd\u6570\u7684\u8c03\u7528\u987a\u5e8f\u521a\u597d\u76f8\u53cd\u3002 \u5c40\u90e8\u53d8\u91cfA \u662f\u901a\u8fc7 new \u4ece\u7cfb\u7edf\u7684\u5806\u7a7a\u95f4\u4e2d\u5206\u914d\u7684\uff0c\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u675f\u4e4b\u540e\uff0c\u7cfb\u7edf\u662f\u4e0d\u4f1a\u81ea\u52a8\u56de\u6536\u5206\u914d\u7ed9\u5b83\u7684\u7a7a\u95f4\u7684\uff0c\u9700\u8981\u7a0b\u5e8f\u5458\u624b\u52a8\u8c03\u7528 delete \u6765\u91ca\u653e\u3002 \u5c40\u90e8\u53d8\u91cf B \u5bf9\u8c61\u7684\u7a7a\u95f4\u6765\u81ea\u4e8e\u7cfb\u7edf\u7684\u6808\u7a7a\u95f4\uff0c\u5728\u8be5\u65b9\u6cd5\u6267\u884c\u7ed3\u675f\u5c31\u4f1a\u7531\u7cfb\u7edf\u81ea\u52a8\u901a\u8fc7\u8c03\u7528\u6790\u6784\u65b9\u6cd5\u5c06\u5176\u7a7a\u95f4\u91ca\u653e\u3002 \u4e4b\u6240\u4ee5\u662f \u5148 A \u540e B \u662f\u56e0\u4e3a\uff0cB \u662f\u5728\u51fd\u6570\u6267\u884c\u5230 \u7ed3\u5c3e \"}\" \u7684\u65f6\u5019\u624d\u8c03\u7528\u6790\u6784\u51fd\u6570\uff0c \u800c\u8bed\u53e5 delete a ; \u4f4d\u4e8e\u51fd\u6570\u7ed3\u5c3e \"}\" \u4e4b\u524d\u3002 3. \u5728\u7c7b\u4e2d\uff0c\u5982\u679c\u4ec0\u4e48\u90fd\u6ca1\u6709\uff0c\u5219\u7c7b\u5360\u75281\u4e2a\u5b57\u8282\uff0c\u4e00\u65e6\u7c7b\u4e2d\u6709\u5176\u4ed6\u7684\u5360\u7528\u7a7a\u95f4\u6210\u5458\uff0c\u5219\u8fd91\u4e2a\u5b57\u8282\u5c31\u4e0d\u5728\u8ba1\u7b97\u4e4b\u5185\uff0c\u5982\u4e00\u4e2a\u7c7b\u53ea\u6709\u4e00\u4e2aint\u5219\u5360\u75284\u5b57\u8282\u800c\u4e0d\u662f5\u5b57\u8282\u3002 \u5982\u679c\u53ea\u6709\u6210\u5458\u51fd\u6570\uff0c\u5219\u8fd8\u662f\u53ea\u5360\u75281\u4e2a\u5b57\u8282\uff0c\u56e0\u4e3a\u7c7b\u51fd\u6570\u4e0d\u5360\u7528\u7a7a\u95f4 \u865a\u51fd\u6570\u56e0\u4e3a\u5b58\u5728\u4e00\u4e2a\u865a\u51fd\u6570\u8868\uff0c\u9700\u89814\u4e2a\u5b57\u8282\uff0c\u6570\u636e\u6210\u5458\u5bf9\u8c61\u5982\u679c\u4e3a\u6307\u9488\u5219\u4e3a4\u5b57\u8282\uff0c\u6ce8\u610f\u6709\u5b57\u8282\u5bf9\u9f50\uff0c\u5982\u679c\u4e3a13\u5b57\u8282\uff0c\u5219\u8fdb\u4f4d\u523016\u5b57\u8282\u7a7a\u95f4\u3002 4. \u7236\u7c7b\u6307\u9488\u6307\u5411\u5b50\u7c7b\u5b9e\u4f8b\u5bf9\u8c61\uff0c\u8c03\u7528\u666e\u901a\u91cd\u5199\u65b9\u6cd5\u65f6\uff0c\u4f1a\u8c03\u7528\u7236\u7c7b\u4e2d\u7684\u65b9\u6cd5\u3002\u800c\u8c03\u7528\u88ab\u5b50\u7c7b\u91cd\u5199\u865a\u51fd\u6570\u65f6\uff0c\u4f1a\u8c03\u7528\u5b50\u7c7b\u4e2d\u7684\u65b9\u6cd5\u3002 \u518d\u6b21\u8bf4\u660e\u4e86\uff0c\u5b50\u7c7b\u4e2d\u88ab\u91cd\u5199\u7684\u865a\u51fd\u6570\u7684\u8fd0\u884c\u65b9\u5f0f\u662f\u52a8\u6001\u7ed1\u5b9a\u7684\uff0c\u4e0e\u5f53\u524d\u6307\u5411\u7c7b\u5b9e\u4f8b\u7684\u7236\u7c7b\u6307\u9488\u7c7b\u578b\u65e0\u5173\uff0c\u4ec5\u548c\u7c7b\u5b9e\u4f8b\u5bf9\u8c61\u672c\u8eab\u6709\u5173\u3002 5. #include<iostream> using namespace std; class MyClass { public: MyClass(int i = 0) { cout << i; } MyClass(const MyClass &x) { cout << 2; } MyClass &operator=(const MyClass &x) { cout << 3; return *this; } ~MyClass() { cout << 4; } }; int main() { MyClass obj1(1), obj2(2); MyClass obj3 = obj1; return 0; } \u62f7\u8d1d\u6784\u9020\u51fd\u6570\u53d1\u751f\u5728\u5bf9\u8c61\u8fd8\u6ca1\u6709\u521b\u5efa\uff0c\u9700\u8981\u521b\u5efa\u65f6\uff0c\u5982obj3\uff1b\u8d4b\u503c\u64cd\u4f5c\u7b26\u91cd\u8f7d\u4ec5\u53d1\u751f\u5728\u5bf9\u8c61\u5df2\u7ecf\u6267\u884c\u8fc7\u6784\u9020\u51fd\u6570\uff0c\u5373\u5df2\u7ecf\u521b\u5efa\u7684\u60c5\u51b5\u4e0b\u3002 \u524d\u4e24\u4e2a\u5bf9\u8c61\u6784\u9020\u65f6\u5206\u522b\u8f93\u51fa1,2 \u7b2c\u4e09\u4e2a\u5bf9\u8c61\u662f\u8fd9\u6837\u6784\u9020\u7684MyClass obj3 = obj1\uff0c\u4e4b\u524d\u6ca1\u6709\u6267\u884c\u8fc7\u6784\u9020\u51fd\u6570\u521b\u5efa\u5bf9\u8c61\uff0c\u6240\u4ee5\u8fd9\u91cc\u4f1a\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u8f93\u51fa2 \u7136\u540e\u4e09\u4e2a\u5bf9\u8c61\u4f9d\u6b21\u6790\u6784\uff0c\u8f93\u51fa444 \u6240\u4ee5\u6700\u7ec8\u8f93\u51fa122444 6.","title":"\u9519\u9898\u672c"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E3%80%8A%E7%8E%B0%E4%BB%A3%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/","text":"\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf \u8fdb\u7a0b\u4e0e\u7ebf\u7a0b 2.1\u8fdb\u7a0b 2.1.1\u8fdb\u7a0b\u6a21\u578b \u8fdb\u7a0b \u662f\u5bf9\u6b63\u5728\u8fd0\u884c\u7a0b\u5e8f\u7684\u4e00\u4e2a \u62bd\u8c61 \u3002 \u4e00\u4e2a\u77ac\u95f4\u53ea\u80fd\u8fd0\u884c\u4e00\u4e2a \u8fdb\u7a0b \uff0c\u4f46\u57281\u79d2\u949f\u5185\u53ef\u80fd\u8fd0\u884c\u591a\u4e2a \u8fdb\u7a0b 2.1.2\u8fdb\u7a0b\u7684\u521b\u5efa \u5b88\u62a4\u8fdb\u7a0b \uff1a\u505c\u7559\u5728\u540e\u53f0\u5904\u7406\u5982\u7535\u5b50\u90ae\u4ef6\u3001web\u9875\u9762\u3001\u6253\u5370\u4e4b\u7c7b\u6d3b\u52a8\u7684\u8fdb\u7a0b\u79f0\u4e3a\u5b88\u62a4\u8fdb\u7a0b\u3002UNIX\u4e2d\u5229\u7528ps\u7a0b\u5e8f\u5217\u51fa\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\uff0cwindows\u4efb\u52a1\u7ba1\u7406\u5668\u3002 \u5728UNIX\u4e2d\uff0c\u53ea\u6709\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u7528\u6765\u521b\u5efa\u65b0\u8fdb\u7a0b\uff0cfork\u3002\u521b\u5efa\u4e00\u4e2a\u4e0e\u8c03\u7528\u8fdb\u7a0b\u76f8\u540c\u7684\u526f\u672c\uff0c\u4e24\u4e2a\u8fdb\u7a0b\u62e5\u6709\u76f8\u540c\u7684\u5185\u5b58\u6620\u50cf\u3001\u76f8\u540c\u7684\u73af\u5883\u5b57\u7b26\u4e32\u548c\u540c\u6837\u7684\u6253\u5f00\u6587\u4ef6\uff0c\u901a\u5e38\u5b50\u8fdb\u7a0b\u63a5\u7740\u6267\u884cexecve\u6216\u4e00\u4e2a\u7c7b\u4f3c\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u4fee\u6539\u5185\u5b58\u6620\u50cf\u5e76\u8fd0\u884c\u4e00\u4e2a\u65b0\u7684\u7a0b\u5e8f\u3002 \u5728windows\u4e2d\u6b63\u76f8\u53cd\uff0cCreateProcess\u65e2\u5904\u7406\u8fdb\u7a0b\u7684\u521b\u5efa\uff0c\u4e5f\u8d1f\u8d23\u628a\u6b63\u786e\u7684\u7a0b\u5e8f\u88c5\u5165\u8fdb\u7a0b\u3002 \u8fdb\u7a0b\u521b\u5efa\u4e4b\u540e\uff0c\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u6709\u5404\u81ea\u4e0d\u540c\u7684\u5730\u5740\u7a7a\u95f4\u3002 2.2.3\u8fdb\u7a0b\u7684\u7ec8\u6b62 \u6b63\u5e38\u9000\u51fa \u51fa\u9519\u9000\u51fa \u4e25\u91cd\u9519\u8bef 2.1.4\u8fdb\u7a0b\u7684\u5c42\u6b21\u7ed3\u6784 \u8fdb\u7a0b\u53ea\u6709\u4e00\u4e2a\u7236\u8fdb\u7a0b\uff0c\u4f46\u662f\u53ef\u4ee5\u67090.1.2.3\u591a\u4e2a\u5b50\u8fdb\u7a0b\u3002 2.1.5\u8fdb\u7a0b\u7684\u72b6\u6001 \u8fd0\u884c\u6001\uff08\u8be5\u65f6\u523b\u8fdb\u7a0b\u5b9e\u9645\u5360\u7528CPU\uff09 \u5c31\u7eea\u6001\uff08\u53ef\u8fd0\u884c\uff0c\u4f46\u662f\u56e0\u4e3a\u5176\u4ed6\u8fdb\u7a0b\u6b63\u5728\u8fd0\u884c\u800c\u6682\u65f6\u505c\u6b62\uff09 \u963b\u585e\u6001\uff08\u9664\u975e\u67d0\u79cd\u5916\u90e8\u4e8b\u4ef6\u53d1\u751f\uff0c\u5426\u5219\u8fdb\u7a0b\u4e0d\u80fd\u8fd0\u884c\uff09 2.1.6\u8fdb\u7a0b\u7684\u5b9e\u73b0 2.1.7\u591a\u9053\u7a0b\u5e8f\u8bbe\u8ba1\u6a21\u578b CPU\u5229\u7528\u7387 1-p^n 2.2 \u7ebf\u7a0b 2.21\u7ebf\u7a0b\u7684\u4f7f\u7528 \u4e3a\u4ec0\u4e48\u9700\u8981\u5728\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u518d\u6709\u4e00\u7c7b\u8fdb\u7a0b\uff1f \u5728\u8bb8\u591a\u5e94\u7528\u4e2d\u540c\u65f6\u53d1\u751f\u7740\u591a\u79cd\u6d3b\u52a8\uff0c\u67d0\u4e9b\u6d3b\u52a8\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u4f1a\u88ab\u963b\u585e\u3002\u901a\u8fc7\u5c06\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u5206\u89e3\u6210\u53ef\u4ee5\u51c6\u5e76\u884c\u8fd0\u884c\u7684\u591a\u4e2a\u987a\u5e8f\u7ebf\u7a0b\uff0c\u7a0b\u5e8f\u8bbe\u8ba1\u6a21\u578b\u4f1a\u53d8\u5f97\u7b80\u5355\u3002 \u9700\u8981\u7ebf\u7a0b\u5bf9\u540c\u4e00\u4e2a\u6587\u4ef6\u8fdb\u884c\u64cd\u4f5c\u7684\u60c5\u51b5\uff0c\u591a\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u5171\u4eab\u5185\u5b58\uff0c\u591a\u4e2a\u8fdb\u7a0b\u662f\u4e0d\u80fd\u5de5\u4f5c\u7684\u3002 2.2.2\u7ecf\u5178\u7684\u7ebf\u7a0b\u6a21\u578b \u8fdb\u7a0b\u6a21\u578b\u57fa\u4e8e\u4e24\u79cd\u72ec\u7acb\u7684\u6982\u5ff5\uff1a\u8d44\u6e90\u5206\u7ec4\u4e0e\u6267\u884c\u3002 \u8fdb\u7a0b\u7528\u4e8e\u628a\u8d44\u6e90\u96c6\u4e2d\u5230\u4e00\u8d77\uff0c\u800c\u7ebf\u7a0b\u5219\u662f\u5728CPU\u4e0a\u88ab\u8c03\u5ea6\u6267\u884c\u7684\u5b9e\u4f53\u3002 \u5728\u540c\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u5e76\u884c\u8fd0\u884c\u591a\u4e2a\u7ebf\u7a0b\uff0c\u662f\u5bf9\u5728\u540c\u4e00\u8ba1\u7b97\u673a\u4e0a\u5e76\u884c\u8fd0\u884c\u591a\u4e2a\u8fdb\u7a0b\u7684\u6a21\u62df\u3002 \u591a\u4e2a\u7ebf\u7a0b\u5171\u4eab\u540c\u4e00\u4e2a\u5730\u5740\u7a7a\u95f4\u548c\u5176\u4ed6\u8d44\u6e90\uff0c\u591a\u4e2a\u8fdb\u7a0b\u5171\u4eab\u7269\u7406\u5185\u5b58\u3001\u78c1\u76d8\u3001\u6253\u5370\u673a\u548c\u5176\u4ed6\u8d44\u6e90\u3002 \u901a\u8fc7\u5728\u591a\u4e2a \u8fdb\u7a0b \u4e4b\u95f4\u6765\u56de\u5207\u6362\uff0c\u7cfb\u7edf\u5236\u9020\u4e86\u4e0d\u540c\u7684\u987a\u5e8f\u8fdb\u7a0b\u5e76\u884c\u8fd0\u884c\u7684\u5047\u8c61\u3002\u591a\u7ebf\u7a0b\u7684\u5de5\u4f5c\u65b9\u5f0f\u4e5f\u662f\u7c7b\u4f3c\u7684\uff0cCPU\u5728\u7ebf\u7a0b\u4e4b\u95f4\u7684\u5feb\u901f\u5207\u6362\uff0c\u5236\u9020\u4e86\u7ebf\u7a0b\u5e76\u884c\u8fd0\u884c\u7684\u5047\u8c61\u3002 \u7ebf\u7a0b\u4e4b\u95f4\u662f\u6ca1\u6709\u4fdd\u62a4\u7684\uff0c\u4e0d\u53ef\u80fd\u4e5f\u6ca1\u6709\u5fc5\u8981\u3002 \u8d44\u6e90\u7ba1\u7406\u7684\u5355\u4f4d\u662f\u8fdb\u7a0b\u800c\u975e\u7ebf\u7a0b\u3002 \u6bcf\u4e2a\u7ebf\u7a0b\u6709\u81ea\u5df1\u7684\u5806\u6808\uff0c\u5b58\u653e\u76f8\u5e94\u8fc7\u7a0b\u7684\u5c40\u90e8\u53d8\u91cf\u4ee5\u53ca\u8c03\u7528\u5b8c\u6210\u4e4b\u540e\u4f7f\u7528\u7684\u8fd4\u56de\u5730\u5740\u3002 2.2.3POSIX\u7ebf\u7a0b pthread\u7ebf\u7a0b\u5305 2.2.4\u5728\u7528\u6237\u7a7a\u95f4\u4e2d\u5b9e\u73b0\u7ebf\u7a0b \u6574\u4e2a\u7ebf\u7a0b\u5305\u653e\u5728\u7528\u6237\u7a7a\u95f4\u4e2d\uff0c\u7528\u6237\u7ea7\u7ebf\u7a0b\u5305\u53ef\u4ee5\u5728\u4e0d\u652f\u6301\u7ebf\u7a0b\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u5b9e\u73b0\u3002 2.2.5\u5728\u5185\u6838\u4e2d\u5b9e\u73b0\u7ebf\u7a0b 2.2.6\u6df7\u5408\u5b9e\u73b0 2.3\u8fdb\u7a0b\u95f4\u901a\u4fe1 \u540c\u6837\u7684\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6cd5\u9002\u7528\u4e8e\u7ebf\u7a0b\u3002 \u4e00\u4e2a\u8fdb\u7a0b\u5982\u4f55\u628a\u4fe1\u606f\u4f20\u9012\u7ed9\u53e6\u4e00\u4e2a \u4e24\u4e2a\u6216\u591a\u4e2a\u8fdb\u7a0b\u5728\u5173\u952e\u6d3b\u52a8\u4e2d\u4e0d\u4f1a\u4ea4\u53c9 \u6b63\u786e\u7684\u987a\u5e8f\uff0cA\u4ea7\u751f\u6570\u636eB\u6253\u5370\u6570\u636e\uff0cB\u5728\u6253\u5370\u4e4b\u524d\u5fc5\u987b\u7b49\u5f85A\u3002 2.3.1\u7ade\u4e89\u6761\u4ef6 \u5f53\u4e24\u4e2a\u6216\u591a\u4e2a\u8fdb\u7a0b\u8bfb\u5199\u67d0\u4e9b\u5171\u4eab\u6570\u636e\uff0c\u6700\u540e\u7684\u7ed3\u679c\u53d6\u51b3\u4e8e\u8fdb\u7a0b\u8fd0\u884c\u7684\u7cbe\u786e\u65f6\u5e8f\u3002 2.3.2\u4e34\u754c\u533a \u600e\u6837\u907f\u514d\u7ade\u4e89\u6761\u4ef6\uff1f\u51e1\u662f\u6d89\u53ca\u5171\u4eab\u5185\u5b58\u3001\u5171\u4eab\u6587\u4ef6\u4ee5\u53ca\u5171\u4eab\u4efb\u4f55\u8d44\u6e90\u7684\u60c5\u51b5\u90fd\u4f1a\u5f15\u53d1\u7c7b\u4f3c\u7684\u9519\u8bef\u3002 \u907f\u514d\uff1a\u67d0\u79cd\u963b\u6b62\u591a\u4e2a\u8fdb\u7a0b\u540c\u65f6\u8bfb\u5199\u5171\u4eab\u6570\u636e\u7684\u9014\u5f84\u3002 \uff08\u4e92\u65a5\uff09 \u628a\u5bf9\u5171\u4eab\u5185\u5b58\u8fdb\u884c\u8bbf\u95ee\u7684\u7a0b\u5e8f\u7247\u6bb5\u79f0\u4f5c\u4e34\u754c\u533a\u3002 2.3.3\u5fd9\u7b49\u5f85\u7684\u4e92\u65a5 1.\u5c4f\u853d\u4e2d\u65ad \u5728\u5355\u5904\u7406\u5668\u7cfb\u7edf\u4e2d\uff0c\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f\u4f7f\u6bcf\u4e2a\u8fdb\u7a0b\u5728\u521a\u521a\u8fdb\u5165\u4e34\u754c\u533a\u540e\u7acb\u5373\u5c4f\u853d\u6240\u6709\u4e2d\u65ad\uff0c\u8fd9\u6837\u5728\u5c4f\u853d\u4e2d\u65ad\u4e4b\u540eCPU\u5c06\u4e0d\u4f1a\u88ab\u5207\u6362\u5230\u5176\u4ed6\u8fdb\u7a0b\u3002 \u4e0d\u597d\uff01 2.\u9501\u53d8\u91cf \u8bbe\u60f3\u6709\u4e00\u4e2a\u5171\u4eab\u9501\u53d8\u91cf\uff0c\u521d\u59cb\u503c\u4e3a0\uff0c\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u60f3\u8fdb\u5165\u5176\u4e34\u754c\u533a\u65f6\uff0c\u9996\u5148\u6d4b\u8bd5\u8fd9\u628a\u9501\uff0c\u5982\u679c\u8be5\u9501\u7684\u503c\u4e3a0\uff0c\u5219\u8be5\u8fdb\u7a0b\u5c06\u5176\u8bbe\u4e3a1\u5e76\u8fdb\u5165\u4e34\u754c\u533a\uff0c\u82e5\u9501\u7684\u503c\u5df2\u7ecf\u4e3a1\uff0c\u5219\u8fdb\u7a0b\u5c06\u7b49\u5f85\u76f4\u5230\u5176\u503c\u53d8\u4e3a0. 0\u5c31\u8868\u793a\u4e34\u754c\u533a\u5185\u6ca1\u6709\u8fdb\u7a0b\uff0c1\u8868\u793a\u5df2\u7ecf\u6709\u67d0\u4e2a\u8fdb\u7a0b\u8fdb\u5165\u4e34\u754c\u533a\u3002 3.\u4e25\u683c\u8f6e\u6362\u6cd5 \u8fde\u7eed\u4e00\u4e2a\u53d8\u91cf\u76f4\u5230\u67d0\u4e2a\u503c\u51fa\u73b0\u4e3a\u6b62\uff0c\u6210\u4e3a\u5fd9\u7b49\u5f85\u3002\u53ea\u6709\u5728\u6709\u7406\u7531\u8ba4\u4e3a\u7b49\u5f85\u65f6\u95f4\u662f\u975e\u5e38\u77ed\u7684\u60c5\u51b5\u4e0b\u624d\u4f7f\u7528\u5fd9\u7b49\u5f85\u3002\u7528\u4e8e\u5fd9\u7b49\u5f85\u7684\u9501\uff0c\u79f0\u4e3a \u81ea\u65cb\u9501 \u3002 4.Peterson\u4e92\u65a5\u7b97\u6cd5 5.TSL\u6307\u4ee4\uff08\u8df3\u8fc7\u4e86\uff09 2.3.4\u7761\u7720\u4e0e\u5524\u9192 4\u30015\u90fd\u6709\u5fd9\u7b49\u5f85\u7684\u7f3a\u70b9\uff0c\u8fd9\u4e9b\u89e3\u6cd5\u7684 \u672c\u8d28 \u4e0a\u662f\uff1a\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u60f3\u8981\u8fdb\u5165\u4e34\u754c\u533a\u65f6\uff0c\u5148\u68c0\u67e5\u662f\u5426\u5141\u8bb8\u8fdb\u5165\uff0c\u82e5\u4e0d\u5141\u8bb8\uff0c\u5219\u8be5\u8fdb\u7a0b\u539f\u5730\u7b49\u5f85\uff0c\u76f4\u5230\u5141\u8bb8\u4e3a\u6b62\u3002 \u6d6a\u8d39CPU\u7684\u65f6\u95f4\uff0c\u4e5f\u53ef\u80fd\u5f15\u8d77\u610f\u60f3\u4e0d\u5230\u7684\u7ed3\u679c\u3002\uff08\u4f18\u5148\u7ea7\u53cd\u8f6c\u95ee\u9898\uff09 sleep\u662f\u4e00\u4e2a\u5f15\u8d77\u8c03\u7528\u8fdb\u7a0b\u963b\u585e\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u5373\u88ab\u6302\u8d77\uff0c\u76f4\u5230\u53e6\u5916\u4e00\u4e2a\u8fdb\u7a0b\u5c06\u5176\u5524\u9192\u3002 wakeup\u8c03\u7528\u6709\u4e00\u4e2a\u53c2\u6570\uff0c\u5373\u8981\u88ab\u5524\u9192\u7684\u7cfb\u7edf\u8c03\u7528\u3002 2.3.5\u4fe1\u53f7\u91cf \u5f15\u5165\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf\u7c7b\u578b\uff0c\u4fe1\u53f7\u91cf\u3002 \u4e00\u65e6\u4e00\u4e2a\u4fe1\u53f7\u91cf\u64cd\u4f5c\u5f00\u59cb\uff0c\u5219\u5728\u8be5\u64cd\u4f5c\u5b8c\u6210\u6216\u963b\u585e\u4e4b\u524d\uff0c\u5176\u4ed6\u8fdb\u7a0b\u5747\u4e0d\u5141\u8bb8\u8bbf\u95ee\u8be5\u4fe1\u53f7\u91cf\u3002 \u539f\u5b50\u64cd\u4f5c\uff1a\u4e00\u7ec4\u76f8\u5173\u8054\u7684\u64cd\u4f5c\u8981\u4e48\u90fd\u4e0d\u95f4\u65ad\u7684\u6267\u884c\uff0c\u8981\u4e48\u90fd\u4e0d\u6267\u884c\u3002 2.3.6\u4e92\u65a5\u91cf \u5982\u679c\u4e0d\u9700\u8981\u4fe1\u53f7\u91cf\u7684\u8ba1\u6570\u80fd\u529b\uff0c\u6709\u65f6\u53ef\u4ee5\u4f7f\u7528\u4fe1\u53f7\u91cf\u7684\u4e00\u4e2a\u7b80\u5316\u7248\u672c\uff0c\u6210\u4e3a\u4e92\u65a5\u91cf\u3002\u4e92\u65a5\u91cf\u4ec5\u4ec5\u9002\u7528\u4e8e\u7ba1\u7406\u5171\u4eab\u8d44\u6e90\u6216\u4e00\u5c0f\u6bb5\u4ee3\u7801\u3002 \u4e92\u65a5\u91cf\u662f\u4e00\u4e2a\u53ef\u4ee5\u5904\u4e8e\u4e24\u6001\u4e4b\u4e00\u7684\u53d8\u91cf\uff0c\u89e3\u9501\u548c\u52a0\u9501\u3002 \u5f53\u4e00\u4e2a\u7ebf\u7a0b\uff08\u6216\u8fdb\u7a0b\uff09\u9700\u8981\u8bbf\u95ee\u4e34\u754c\u533a\u65f6\uff0c\u5b83\u8c03\u7528mutex_lock\uff0c\u5982\u679c\u8be5\u4e92\u65a5\u91cf\u5f53\u524d\u662f\u89e3\u9501\u7684\uff0c\u5219\u6b64\u8c03\u7528\u6210\u529f\uff0c\u8c03\u7528\u7ebf\u7a0b\u53ef\u81ea\u7531\u8fdb\u5165\u8be5\u4e34\u754c\u533a\uff0c\u5982\u679c\u8be5\u4e92\u65a5\u91cf\u5df2\u7ecf\u52a0\u9501\uff0c\u8c03\u7528\u7ebf\u7a0b\u88ab\u963b\u585e\uff0c\u76f4\u5230\u5728\u4e34\u754c\u533a\u4e2d\u7684\u7ebf\u7a0b\u5b8c\u6210\u5e76\u8c03\u7528mutex_unlock\u3002\u5982\u679c\u591a\u4e2a\u7ebf\u7a0b\u88ab\u963b\u585e\u5728\u8be5\u4e92\u65a5\u91cf\u4e0a\uff0c\u5219\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u7ebf\u7a0b\u5141\u8bb8\u5b83\u83b7\u5f97\u9501\u3002 POSIX\u7ebf\u7a0b\u2014Pthreads\u662fPOSIX\u7684\u7ebf\u7a0b\u6807\u51c6\uff0c\u5b9a\u4e49\u4e86\u521b\u5efa\u548c\u64cd\u7eb5\u7ebf\u7a0b\u7684\u4e00\u5957API\u3002Pthread\u63d0\u4f9b\u8bb8\u591a\u53ef\u4ee5\u7528\u6765\u540c\u6b65\u7ebf\u7a0b\u7684\u51fd\u6570\uff0c\u5176\u57fa\u672c\u673a\u5236\u662f\u4f7f\u7528\u4e00\u4e2a\u53ef\u4ee5\u88ab\u9501\u5b9a\u548c\u89e3\u9501\u7684\u4e92\u65a5\u91cf\u6765\u4fdd\u62a4\u6bcf\u4e2a\u4e34\u754c\u533a\u3002","title":"\u300a\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u300b"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E3%80%8A%E7%8E%B0%E4%BB%A3%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_1","text":"","title":"\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E3%80%8A%E7%8E%B0%E4%BB%A3%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#_2","text":"","title":"\u8fdb\u7a0b\u4e0e\u7ebf\u7a0b"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E3%80%8A%E7%8E%B0%E4%BB%A3%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#21","text":"2.1.1\u8fdb\u7a0b\u6a21\u578b \u8fdb\u7a0b \u662f\u5bf9\u6b63\u5728\u8fd0\u884c\u7a0b\u5e8f\u7684\u4e00\u4e2a \u62bd\u8c61 \u3002 \u4e00\u4e2a\u77ac\u95f4\u53ea\u80fd\u8fd0\u884c\u4e00\u4e2a \u8fdb\u7a0b \uff0c\u4f46\u57281\u79d2\u949f\u5185\u53ef\u80fd\u8fd0\u884c\u591a\u4e2a \u8fdb\u7a0b 2.1.2\u8fdb\u7a0b\u7684\u521b\u5efa \u5b88\u62a4\u8fdb\u7a0b \uff1a\u505c\u7559\u5728\u540e\u53f0\u5904\u7406\u5982\u7535\u5b50\u90ae\u4ef6\u3001web\u9875\u9762\u3001\u6253\u5370\u4e4b\u7c7b\u6d3b\u52a8\u7684\u8fdb\u7a0b\u79f0\u4e3a\u5b88\u62a4\u8fdb\u7a0b\u3002UNIX\u4e2d\u5229\u7528ps\u7a0b\u5e8f\u5217\u51fa\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\uff0cwindows\u4efb\u52a1\u7ba1\u7406\u5668\u3002 \u5728UNIX\u4e2d\uff0c\u53ea\u6709\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528\u7528\u6765\u521b\u5efa\u65b0\u8fdb\u7a0b\uff0cfork\u3002\u521b\u5efa\u4e00\u4e2a\u4e0e\u8c03\u7528\u8fdb\u7a0b\u76f8\u540c\u7684\u526f\u672c\uff0c\u4e24\u4e2a\u8fdb\u7a0b\u62e5\u6709\u76f8\u540c\u7684\u5185\u5b58\u6620\u50cf\u3001\u76f8\u540c\u7684\u73af\u5883\u5b57\u7b26\u4e32\u548c\u540c\u6837\u7684\u6253\u5f00\u6587\u4ef6\uff0c\u901a\u5e38\u5b50\u8fdb\u7a0b\u63a5\u7740\u6267\u884cexecve\u6216\u4e00\u4e2a\u7c7b\u4f3c\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u4fee\u6539\u5185\u5b58\u6620\u50cf\u5e76\u8fd0\u884c\u4e00\u4e2a\u65b0\u7684\u7a0b\u5e8f\u3002 \u5728windows\u4e2d\u6b63\u76f8\u53cd\uff0cCreateProcess\u65e2\u5904\u7406\u8fdb\u7a0b\u7684\u521b\u5efa\uff0c\u4e5f\u8d1f\u8d23\u628a\u6b63\u786e\u7684\u7a0b\u5e8f\u88c5\u5165\u8fdb\u7a0b\u3002 \u8fdb\u7a0b\u521b\u5efa\u4e4b\u540e\uff0c\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u6709\u5404\u81ea\u4e0d\u540c\u7684\u5730\u5740\u7a7a\u95f4\u3002 2.2.3\u8fdb\u7a0b\u7684\u7ec8\u6b62 \u6b63\u5e38\u9000\u51fa \u51fa\u9519\u9000\u51fa \u4e25\u91cd\u9519\u8bef 2.1.4\u8fdb\u7a0b\u7684\u5c42\u6b21\u7ed3\u6784 \u8fdb\u7a0b\u53ea\u6709\u4e00\u4e2a\u7236\u8fdb\u7a0b\uff0c\u4f46\u662f\u53ef\u4ee5\u67090.1.2.3\u591a\u4e2a\u5b50\u8fdb\u7a0b\u3002 2.1.5\u8fdb\u7a0b\u7684\u72b6\u6001 \u8fd0\u884c\u6001\uff08\u8be5\u65f6\u523b\u8fdb\u7a0b\u5b9e\u9645\u5360\u7528CPU\uff09 \u5c31\u7eea\u6001\uff08\u53ef\u8fd0\u884c\uff0c\u4f46\u662f\u56e0\u4e3a\u5176\u4ed6\u8fdb\u7a0b\u6b63\u5728\u8fd0\u884c\u800c\u6682\u65f6\u505c\u6b62\uff09 \u963b\u585e\u6001\uff08\u9664\u975e\u67d0\u79cd\u5916\u90e8\u4e8b\u4ef6\u53d1\u751f\uff0c\u5426\u5219\u8fdb\u7a0b\u4e0d\u80fd\u8fd0\u884c\uff09 2.1.6\u8fdb\u7a0b\u7684\u5b9e\u73b0 2.1.7\u591a\u9053\u7a0b\u5e8f\u8bbe\u8ba1\u6a21\u578b CPU\u5229\u7528\u7387 1-p^n","title":"2.1\u8fdb\u7a0b"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E3%80%8A%E7%8E%B0%E4%BB%A3%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#22","text":"2.21\u7ebf\u7a0b\u7684\u4f7f\u7528 \u4e3a\u4ec0\u4e48\u9700\u8981\u5728\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u518d\u6709\u4e00\u7c7b\u8fdb\u7a0b\uff1f \u5728\u8bb8\u591a\u5e94\u7528\u4e2d\u540c\u65f6\u53d1\u751f\u7740\u591a\u79cd\u6d3b\u52a8\uff0c\u67d0\u4e9b\u6d3b\u52a8\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\u4f1a\u88ab\u963b\u585e\u3002\u901a\u8fc7\u5c06\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u5206\u89e3\u6210\u53ef\u4ee5\u51c6\u5e76\u884c\u8fd0\u884c\u7684\u591a\u4e2a\u987a\u5e8f\u7ebf\u7a0b\uff0c\u7a0b\u5e8f\u8bbe\u8ba1\u6a21\u578b\u4f1a\u53d8\u5f97\u7b80\u5355\u3002 \u9700\u8981\u7ebf\u7a0b\u5bf9\u540c\u4e00\u4e2a\u6587\u4ef6\u8fdb\u884c\u64cd\u4f5c\u7684\u60c5\u51b5\uff0c\u591a\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u5171\u4eab\u5185\u5b58\uff0c\u591a\u4e2a\u8fdb\u7a0b\u662f\u4e0d\u80fd\u5de5\u4f5c\u7684\u3002 2.2.2\u7ecf\u5178\u7684\u7ebf\u7a0b\u6a21\u578b \u8fdb\u7a0b\u6a21\u578b\u57fa\u4e8e\u4e24\u79cd\u72ec\u7acb\u7684\u6982\u5ff5\uff1a\u8d44\u6e90\u5206\u7ec4\u4e0e\u6267\u884c\u3002 \u8fdb\u7a0b\u7528\u4e8e\u628a\u8d44\u6e90\u96c6\u4e2d\u5230\u4e00\u8d77\uff0c\u800c\u7ebf\u7a0b\u5219\u662f\u5728CPU\u4e0a\u88ab\u8c03\u5ea6\u6267\u884c\u7684\u5b9e\u4f53\u3002 \u5728\u540c\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u5e76\u884c\u8fd0\u884c\u591a\u4e2a\u7ebf\u7a0b\uff0c\u662f\u5bf9\u5728\u540c\u4e00\u8ba1\u7b97\u673a\u4e0a\u5e76\u884c\u8fd0\u884c\u591a\u4e2a\u8fdb\u7a0b\u7684\u6a21\u62df\u3002 \u591a\u4e2a\u7ebf\u7a0b\u5171\u4eab\u540c\u4e00\u4e2a\u5730\u5740\u7a7a\u95f4\u548c\u5176\u4ed6\u8d44\u6e90\uff0c\u591a\u4e2a\u8fdb\u7a0b\u5171\u4eab\u7269\u7406\u5185\u5b58\u3001\u78c1\u76d8\u3001\u6253\u5370\u673a\u548c\u5176\u4ed6\u8d44\u6e90\u3002 \u901a\u8fc7\u5728\u591a\u4e2a \u8fdb\u7a0b \u4e4b\u95f4\u6765\u56de\u5207\u6362\uff0c\u7cfb\u7edf\u5236\u9020\u4e86\u4e0d\u540c\u7684\u987a\u5e8f\u8fdb\u7a0b\u5e76\u884c\u8fd0\u884c\u7684\u5047\u8c61\u3002\u591a\u7ebf\u7a0b\u7684\u5de5\u4f5c\u65b9\u5f0f\u4e5f\u662f\u7c7b\u4f3c\u7684\uff0cCPU\u5728\u7ebf\u7a0b\u4e4b\u95f4\u7684\u5feb\u901f\u5207\u6362\uff0c\u5236\u9020\u4e86\u7ebf\u7a0b\u5e76\u884c\u8fd0\u884c\u7684\u5047\u8c61\u3002 \u7ebf\u7a0b\u4e4b\u95f4\u662f\u6ca1\u6709\u4fdd\u62a4\u7684\uff0c\u4e0d\u53ef\u80fd\u4e5f\u6ca1\u6709\u5fc5\u8981\u3002 \u8d44\u6e90\u7ba1\u7406\u7684\u5355\u4f4d\u662f\u8fdb\u7a0b\u800c\u975e\u7ebf\u7a0b\u3002 \u6bcf\u4e2a\u7ebf\u7a0b\u6709\u81ea\u5df1\u7684\u5806\u6808\uff0c\u5b58\u653e\u76f8\u5e94\u8fc7\u7a0b\u7684\u5c40\u90e8\u53d8\u91cf\u4ee5\u53ca\u8c03\u7528\u5b8c\u6210\u4e4b\u540e\u4f7f\u7528\u7684\u8fd4\u56de\u5730\u5740\u3002 2.2.3POSIX\u7ebf\u7a0b pthread\u7ebf\u7a0b\u5305 2.2.4\u5728\u7528\u6237\u7a7a\u95f4\u4e2d\u5b9e\u73b0\u7ebf\u7a0b \u6574\u4e2a\u7ebf\u7a0b\u5305\u653e\u5728\u7528\u6237\u7a7a\u95f4\u4e2d\uff0c\u7528\u6237\u7ea7\u7ebf\u7a0b\u5305\u53ef\u4ee5\u5728\u4e0d\u652f\u6301\u7ebf\u7a0b\u7684\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u5b9e\u73b0\u3002 2.2.5\u5728\u5185\u6838\u4e2d\u5b9e\u73b0\u7ebf\u7a0b 2.2.6\u6df7\u5408\u5b9e\u73b0","title":"2.2 \u7ebf\u7a0b"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E3%80%8A%E7%8E%B0%E4%BB%A3%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E3%80%8B/#23","text":"\u540c\u6837\u7684\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6cd5\u9002\u7528\u4e8e\u7ebf\u7a0b\u3002 \u4e00\u4e2a\u8fdb\u7a0b\u5982\u4f55\u628a\u4fe1\u606f\u4f20\u9012\u7ed9\u53e6\u4e00\u4e2a \u4e24\u4e2a\u6216\u591a\u4e2a\u8fdb\u7a0b\u5728\u5173\u952e\u6d3b\u52a8\u4e2d\u4e0d\u4f1a\u4ea4\u53c9 \u6b63\u786e\u7684\u987a\u5e8f\uff0cA\u4ea7\u751f\u6570\u636eB\u6253\u5370\u6570\u636e\uff0cB\u5728\u6253\u5370\u4e4b\u524d\u5fc5\u987b\u7b49\u5f85A\u3002 2.3.1\u7ade\u4e89\u6761\u4ef6 \u5f53\u4e24\u4e2a\u6216\u591a\u4e2a\u8fdb\u7a0b\u8bfb\u5199\u67d0\u4e9b\u5171\u4eab\u6570\u636e\uff0c\u6700\u540e\u7684\u7ed3\u679c\u53d6\u51b3\u4e8e\u8fdb\u7a0b\u8fd0\u884c\u7684\u7cbe\u786e\u65f6\u5e8f\u3002 2.3.2\u4e34\u754c\u533a \u600e\u6837\u907f\u514d\u7ade\u4e89\u6761\u4ef6\uff1f\u51e1\u662f\u6d89\u53ca\u5171\u4eab\u5185\u5b58\u3001\u5171\u4eab\u6587\u4ef6\u4ee5\u53ca\u5171\u4eab\u4efb\u4f55\u8d44\u6e90\u7684\u60c5\u51b5\u90fd\u4f1a\u5f15\u53d1\u7c7b\u4f3c\u7684\u9519\u8bef\u3002 \u907f\u514d\uff1a\u67d0\u79cd\u963b\u6b62\u591a\u4e2a\u8fdb\u7a0b\u540c\u65f6\u8bfb\u5199\u5171\u4eab\u6570\u636e\u7684\u9014\u5f84\u3002 \uff08\u4e92\u65a5\uff09 \u628a\u5bf9\u5171\u4eab\u5185\u5b58\u8fdb\u884c\u8bbf\u95ee\u7684\u7a0b\u5e8f\u7247\u6bb5\u79f0\u4f5c\u4e34\u754c\u533a\u3002 2.3.3\u5fd9\u7b49\u5f85\u7684\u4e92\u65a5 1.\u5c4f\u853d\u4e2d\u65ad \u5728\u5355\u5904\u7406\u5668\u7cfb\u7edf\u4e2d\uff0c\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u5c31\u662f\u4f7f\u6bcf\u4e2a\u8fdb\u7a0b\u5728\u521a\u521a\u8fdb\u5165\u4e34\u754c\u533a\u540e\u7acb\u5373\u5c4f\u853d\u6240\u6709\u4e2d\u65ad\uff0c\u8fd9\u6837\u5728\u5c4f\u853d\u4e2d\u65ad\u4e4b\u540eCPU\u5c06\u4e0d\u4f1a\u88ab\u5207\u6362\u5230\u5176\u4ed6\u8fdb\u7a0b\u3002 \u4e0d\u597d\uff01 2.\u9501\u53d8\u91cf \u8bbe\u60f3\u6709\u4e00\u4e2a\u5171\u4eab\u9501\u53d8\u91cf\uff0c\u521d\u59cb\u503c\u4e3a0\uff0c\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u60f3\u8fdb\u5165\u5176\u4e34\u754c\u533a\u65f6\uff0c\u9996\u5148\u6d4b\u8bd5\u8fd9\u628a\u9501\uff0c\u5982\u679c\u8be5\u9501\u7684\u503c\u4e3a0\uff0c\u5219\u8be5\u8fdb\u7a0b\u5c06\u5176\u8bbe\u4e3a1\u5e76\u8fdb\u5165\u4e34\u754c\u533a\uff0c\u82e5\u9501\u7684\u503c\u5df2\u7ecf\u4e3a1\uff0c\u5219\u8fdb\u7a0b\u5c06\u7b49\u5f85\u76f4\u5230\u5176\u503c\u53d8\u4e3a0. 0\u5c31\u8868\u793a\u4e34\u754c\u533a\u5185\u6ca1\u6709\u8fdb\u7a0b\uff0c1\u8868\u793a\u5df2\u7ecf\u6709\u67d0\u4e2a\u8fdb\u7a0b\u8fdb\u5165\u4e34\u754c\u533a\u3002 3.\u4e25\u683c\u8f6e\u6362\u6cd5 \u8fde\u7eed\u4e00\u4e2a\u53d8\u91cf\u76f4\u5230\u67d0\u4e2a\u503c\u51fa\u73b0\u4e3a\u6b62\uff0c\u6210\u4e3a\u5fd9\u7b49\u5f85\u3002\u53ea\u6709\u5728\u6709\u7406\u7531\u8ba4\u4e3a\u7b49\u5f85\u65f6\u95f4\u662f\u975e\u5e38\u77ed\u7684\u60c5\u51b5\u4e0b\u624d\u4f7f\u7528\u5fd9\u7b49\u5f85\u3002\u7528\u4e8e\u5fd9\u7b49\u5f85\u7684\u9501\uff0c\u79f0\u4e3a \u81ea\u65cb\u9501 \u3002 4.Peterson\u4e92\u65a5\u7b97\u6cd5 5.TSL\u6307\u4ee4\uff08\u8df3\u8fc7\u4e86\uff09 2.3.4\u7761\u7720\u4e0e\u5524\u9192 4\u30015\u90fd\u6709\u5fd9\u7b49\u5f85\u7684\u7f3a\u70b9\uff0c\u8fd9\u4e9b\u89e3\u6cd5\u7684 \u672c\u8d28 \u4e0a\u662f\uff1a\u5f53\u4e00\u4e2a\u8fdb\u7a0b\u60f3\u8981\u8fdb\u5165\u4e34\u754c\u533a\u65f6\uff0c\u5148\u68c0\u67e5\u662f\u5426\u5141\u8bb8\u8fdb\u5165\uff0c\u82e5\u4e0d\u5141\u8bb8\uff0c\u5219\u8be5\u8fdb\u7a0b\u539f\u5730\u7b49\u5f85\uff0c\u76f4\u5230\u5141\u8bb8\u4e3a\u6b62\u3002 \u6d6a\u8d39CPU\u7684\u65f6\u95f4\uff0c\u4e5f\u53ef\u80fd\u5f15\u8d77\u610f\u60f3\u4e0d\u5230\u7684\u7ed3\u679c\u3002\uff08\u4f18\u5148\u7ea7\u53cd\u8f6c\u95ee\u9898\uff09 sleep\u662f\u4e00\u4e2a\u5f15\u8d77\u8c03\u7528\u8fdb\u7a0b\u963b\u585e\u7684\u7cfb\u7edf\u8c03\u7528\uff0c\u5373\u88ab\u6302\u8d77\uff0c\u76f4\u5230\u53e6\u5916\u4e00\u4e2a\u8fdb\u7a0b\u5c06\u5176\u5524\u9192\u3002 wakeup\u8c03\u7528\u6709\u4e00\u4e2a\u53c2\u6570\uff0c\u5373\u8981\u88ab\u5524\u9192\u7684\u7cfb\u7edf\u8c03\u7528\u3002 2.3.5\u4fe1\u53f7\u91cf \u5f15\u5165\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf\u7c7b\u578b\uff0c\u4fe1\u53f7\u91cf\u3002 \u4e00\u65e6\u4e00\u4e2a\u4fe1\u53f7\u91cf\u64cd\u4f5c\u5f00\u59cb\uff0c\u5219\u5728\u8be5\u64cd\u4f5c\u5b8c\u6210\u6216\u963b\u585e\u4e4b\u524d\uff0c\u5176\u4ed6\u8fdb\u7a0b\u5747\u4e0d\u5141\u8bb8\u8bbf\u95ee\u8be5\u4fe1\u53f7\u91cf\u3002 \u539f\u5b50\u64cd\u4f5c\uff1a\u4e00\u7ec4\u76f8\u5173\u8054\u7684\u64cd\u4f5c\u8981\u4e48\u90fd\u4e0d\u95f4\u65ad\u7684\u6267\u884c\uff0c\u8981\u4e48\u90fd\u4e0d\u6267\u884c\u3002 2.3.6\u4e92\u65a5\u91cf \u5982\u679c\u4e0d\u9700\u8981\u4fe1\u53f7\u91cf\u7684\u8ba1\u6570\u80fd\u529b\uff0c\u6709\u65f6\u53ef\u4ee5\u4f7f\u7528\u4fe1\u53f7\u91cf\u7684\u4e00\u4e2a\u7b80\u5316\u7248\u672c\uff0c\u6210\u4e3a\u4e92\u65a5\u91cf\u3002\u4e92\u65a5\u91cf\u4ec5\u4ec5\u9002\u7528\u4e8e\u7ba1\u7406\u5171\u4eab\u8d44\u6e90\u6216\u4e00\u5c0f\u6bb5\u4ee3\u7801\u3002 \u4e92\u65a5\u91cf\u662f\u4e00\u4e2a\u53ef\u4ee5\u5904\u4e8e\u4e24\u6001\u4e4b\u4e00\u7684\u53d8\u91cf\uff0c\u89e3\u9501\u548c\u52a0\u9501\u3002 \u5f53\u4e00\u4e2a\u7ebf\u7a0b\uff08\u6216\u8fdb\u7a0b\uff09\u9700\u8981\u8bbf\u95ee\u4e34\u754c\u533a\u65f6\uff0c\u5b83\u8c03\u7528mutex_lock\uff0c\u5982\u679c\u8be5\u4e92\u65a5\u91cf\u5f53\u524d\u662f\u89e3\u9501\u7684\uff0c\u5219\u6b64\u8c03\u7528\u6210\u529f\uff0c\u8c03\u7528\u7ebf\u7a0b\u53ef\u81ea\u7531\u8fdb\u5165\u8be5\u4e34\u754c\u533a\uff0c\u5982\u679c\u8be5\u4e92\u65a5\u91cf\u5df2\u7ecf\u52a0\u9501\uff0c\u8c03\u7528\u7ebf\u7a0b\u88ab\u963b\u585e\uff0c\u76f4\u5230\u5728\u4e34\u754c\u533a\u4e2d\u7684\u7ebf\u7a0b\u5b8c\u6210\u5e76\u8c03\u7528mutex_unlock\u3002\u5982\u679c\u591a\u4e2a\u7ebf\u7a0b\u88ab\u963b\u585e\u5728\u8be5\u4e92\u65a5\u91cf\u4e0a\uff0c\u5219\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u7ebf\u7a0b\u5141\u8bb8\u5b83\u83b7\u5f97\u9501\u3002 POSIX\u7ebf\u7a0b\u2014Pthreads\u662fPOSIX\u7684\u7ebf\u7a0b\u6807\u51c6\uff0c\u5b9a\u4e49\u4e86\u521b\u5efa\u548c\u64cd\u7eb5\u7ebf\u7a0b\u7684\u4e00\u5957API\u3002Pthread\u63d0\u4f9b\u8bb8\u591a\u53ef\u4ee5\u7528\u6765\u540c\u6b65\u7ebf\u7a0b\u7684\u51fd\u6570\uff0c\u5176\u57fa\u672c\u673a\u5236\u662f\u4f7f\u7528\u4e00\u4e2a\u53ef\u4ee5\u88ab\u9501\u5b9a\u548c\u89e3\u9501\u7684\u4e92\u65a5\u91cf\u6765\u4fdd\u62a4\u6bcf\u4e2a\u4e34\u754c\u533a\u3002","title":"2.3\u8fdb\u7a0b\u95f4\u901a\u4fe1"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%93%88%E5%B7%A5%E5%A4%A7%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BD%91%E8%AF%BE/","text":"\u64cd\u4f5c\u7cfb\u7edf \u7ba1\u7406\u8ba1\u7b97\u673a\u786c\u4ef6\u7684\u8f6f\u4ef6\u7cfb\u7edf \u64cd\u4f5c\u7cfb\u7edf\u63a5\u53e3 \u64cd\u4f5c\u7cfb\u7edf\u63a5\u53e3\u3002\u8fde\u63a5\u64cd\u4f5c\u7cfb\u7edf\u548c\u5e94\u7528\u8f6f\u4ef6\uff0c\u8868\u73b0\u4e3a\u4e00\u4e9b\u51fd\u6570\u3002 \u5373\u7cfb\u7edf\u8c03\u7528\uff0c\u63a5\u53e3\u8868\u73b0\u4e3a\u51fd\u6570\u8c03\u7528\uff0c\u7531\u7cfb\u7edf\u63d0\u4f9b,\u6240\u4ee5\u79f0\u4f5c\u7cfb\u7edf\u8c03\u7528\u3002 POSIX\uff1aPortable Operating System Interface Of Unix \u7cfb\u7edf\u8c03\u7528\u7684\u5b9e\u73b0 \uff08System Call\uff01\uff09 \u5c06\u5185\u6838\u7a0b\u5e8f\u548c\u7528\u6237\u7a0b\u5e8f\u9694\u79bb \u533a\u5206\u5185\u6838\u6001\u548c\u7528\u6237\u6001\u3002 \u5f53\u524d\u7a0b\u5e8f\u5728\u4ec0\u4e48\u6001\uff0c\u7531\u4e8ePC\u2014CS\uff1aIP\u662f\u5f53\u524d\u6307\u4ee4\uff0c\u6240\u4ee5\u7528CS\u6700\u4f4e\u4e24\u4f4d\u8868\u793a\uff1a0\u5185\u6838\u6001\uff0c3\u7528\u6237\u6001\u3002 \u521d\u59cbDPL = 0 \u3001CPL = 3\u3002 \u786c\u4ef6\u63d0\u4f9b\u4e86\u4e3b\u52a8\u8fdb\u5165\u5185\u6838\u7684\u65b9\u6cd5\uff0c\u8fdb\u5165\u5185\u6838\u7684\u552f\u4e00\u65b9\u6cd5\u3002int \u6307\u4ee4\u4f7fCS\u4e2d\u7684CPL\u66f4\u6539\u4e3a0\uff0c\u8fdb\u5165\u5185\u6838\u3002 \u7cfb\u7edf\u8c03\u7528\u7684\u6838\u5fc3\uff1a \u7528\u6237\u7a0b\u5e8f\u4e2d\u5305\u542bint\u6307\u4ee4\u7684\u4ee3\u7801 \u64cd\u4f5c\u7cfb\u7edf\u5199\u4e2d\u65ad\u5904\u7406\uff0c\u83b7\u53d6\u60f3\u8c03\u7a0b\u5e8f\u7684\u7f16\u53f7 \u64cd\u4f5c\u7cfb\u7edf\u6839\u636e\u7f16\u53f7\u6267\u884c\u76f8\u5e94\u7684\u4ee3\u7801 \u5b66\u4e60\u4efb\u52a1 \u638c\u63e1CPU\u7ba1\u7406\u3001\u5185\u5b58\u7ba1\u7406\uff0c\u78c1\u76d8\u7ba1\u7406\u3001\u7ec8\u7aef\u8bbe\u5907\u7ba1\u7406\u3002 \u8fdb\u7a0b\u3001\u8fdb\u7a0b\u7ba1\u7406\u3001\u5730\u5740\uff08*p = 7\uff09\u3001\u865a\u62df\u5185\u5b58\u3001\u6587\u4ef6\u7cfb\u7edf\u3001\u6587\u4ef6\u3001\u8bbe\u5907\u6587\u4ef6\u3001\u8bbe\u5907\u9a71\u52a8 CPU\u7ba1\u7406 \u5de5\u4f5c\u539f\u7406\uff1a\u53d6\u5740\u6267\u884c \u6709IO\u6307\u4ee4\u548c\u65e0IO\u6307\u4ee4\u8ba1\u7b97\u65f6\u95f4\u7684\u5dee\u522b \u4e00\u4e2aCPU\u4e0a\u4ea4\u66ff\u6267\u884c\u591a\u4e2a\u7a0b\u5e8f\uff1a\u5e76\u53d1 \u591a\u8fdb\u7a0b\u56fe\u50cf PCB\uff1aProcess Control Block \u7528\u6765\u8bb0\u5f55\u8fdb\u7a0b\u4fe1\u606f\u7684\u6570\u636e\u7ed3\u6784 \u8fdb\u7a0b\u8c03\u5ea6\uff1aFIFO\u3001Priority \u5185\u5b58\u7ba1\u7406\u7684\u4e3b\u8981\u5185\u5bb9\uff1a\u591a\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\u5206\u79bb \u5982\u4f55\u5f62\u6210\u591a\u8fdb\u7a0b\u56fe\u50cf\uff1f \u8bfb\u5199PCB \u64cd\u4f5c\u5bc4\u5b58\u5668\u5b8c\u6210\u5207\u6362 \u8c03\u5ea6\u7a0b\u5e8f \u8fdb\u7a0b\u7684\u540c\u6b65\u4e0e\u5408\u4f5c \u6709\u5730\u5740\u6620\u5c04 \u7528\u6237\u7ea7\u7ebf\u7a0b \u7ebf\u7a0b\u4e4b\u95f4\u5171\u4eab\u8d44\u6e90 Create\uff1fYield\uff1f \u5185\u6838\u7ea7\u7ebf\u7a0b \u7528\u6237\u6808 \u5185\u6838\u6808 \u5185\u6838\u7ea7\u7ebf\u7a0b\u5b9e\u73b0 P13 \u64cd\u4f5c\u7cfb\u7edf\u4e4b\u201c\u6811\u201d P14 CPU\u8c03\u5ea6\u7b56\u7565 FIFO\uff1f Priority\uff1f \u5982\u4f55\u5408\u7406\u7684\u8c03\u5ea6\uff1f \u541e\u5410\u91cf\u548c\u54cd\u5e94\u65f6\u95f4\u6709\u77db\u76fe \u524d\u53f0\u4efb\u52a1\u548c\u540e\u53f0\u4efb\u52a1\u7684\u5173\u6ce8\u70b9\u4e0d\u540c IO\u5bc6\u96c6\u578b\u548cCPU\u5bc6\u96c6\u578b\u4efb\u52a1\u6709\u5404\u81ea\u7684\u7279\u70b9 \u57fa\u672cCPU\u8c03\u5ea6\u7b97\u6cd5 FCFS\uff08First Come First Served\uff09 \u5982\u4f55\u964d\u4f4e\u5468\u8f6c\u65f6\u95f4\uff1a SJF\uff08\u77ed\u4f5c\u4e1a\u4f18\u5148\uff09 \u90a3\u54cd\u5e94\u65f6\u95f4\u600e\u4e48\u529e\uff1f RR\uff1a\u6309\u65f6\u95f4\u7247\u8f6e\u8f6c\u8c03\u5ea6 \uff0c\u65f6\u95f4\u7247\u5927\uff1a\u54cd\u5e94\u65f6\u95f4\u957f\uff1b\u65f6\u95f4\u7247\u5c0f\uff0c\u541e\u5410\u91cf\u5c0f\u3002 \u540c\u65f6\u5b58\u5728\u8981\u6c42\u5468\u8f6c\u65f6\u95f4\u548c\u54cd\u5e94\u65f6\u95f4\u4e24\u79cd\u4efb\u52a1\uff1f \u6b7b\u677f\u7684\u6267\u884c\u4f18\u5148\u7ea7\u8c03\u5ea6\u4f1a\u4ea7\u751f\u9965\u997f\u3002 P15 \u4e00\u4e2a\u5b9e\u9645\u7684schedule\u51fd\u6570 P16 \u8fdb\u7a0b\u540c\u6b65\u4e0e\u4fe1\u53f7\u91cf \u591a\u4e2a\u8fdb\u7a0b\u5408\u7406\u6709\u5e8f\u7684\u5411\u524d\u6267\u884c\uff0c\u63a7\u5236\u8fd9\u4e2a\u6709\u5e8f\u8fc7\u7a0b\u7684\u5173\u952e\u662f\u4fe1\u53f7\u3002 \u5f15\u5165\u4fe1\u53f7\u91cf \u751f\u4ea7\u8005\u2014\u2014\u6d88\u8d39\u8005\u6a21\u5f0f \u5b58\u5728\u591a\u4e2a\u751f\u4ea7\u8005\u65f6\uff0c\u65e0\u6cd5\u5524\u9192\u5176\u4ed6\u751f\u4ea7\u8005\uff0ccounter\u65e0\u6cd5\u6ee1\u8db3\u8981\u6c42\u4e86\u3002 P17 \u4fe1\u53f7\u91cf\u4e34\u754c\u533a\u4fdd\u62a4 \u4ec0\u4e48\u662f\u4fe1\u53f7\u91cf\uff1f \u901a\u8fc7\u5bf9\u8fd9\u4e2a\u91cf\u7684\u8bbf\u95ee\u548c\u4fee\u6539\uff0c\u8ba9\u5927\u5bb6\u6709\u5e8f\u63a8\u8fdb\u3002 \u4e34\u754c\u533a\uff1a \u4e00\u6bb5\u4ee3\u7801\u4e00\u6b21\u53ea\u5141\u8bb8\u4e00\u4e2a\u8fdb\u7a0b\u8fdb\u5165\u3002\u8bfb\u5199\u4fe1\u53f7\u91cf\u7684\u4ee3\u7801\u4e00\u5b9a\u662f\u4e34\u754c\u533a \u4e34\u754c\u533a\u4ee3\u7801\u4fdd\u62a4\u539f\u5219 \u57fa\u672c\u539f\u5219\uff1a\u4e92\u65a5\u8fdb\u5165 \u597d\u7684\u4e34\u754c\u533a\u4fdd\u62a4\u539f\u5219\uff1a\u6709\u7a7a\u8ba9\u8fdb\u3001\u6709\u9650\u7b49\u5f85 1.\u8f6e\u6362\u6cd5 2.\u6807\u8bb0\u6cd5 3.Peterson\u7b97\u6cd5 \u4e34\u754c\u533a\u4fdd\u62a4\u7684\u53e6\u4e00\u7c7b\u89e3\u6cd5 \u53ea\u5141\u8bb8\u4e00\u4e2a\u8fdb\u7a0b\u8fdb\u5165\uff0c\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u8fdb\u5165\u65f6\u610f\u5473\u7740\u4ec0\u4e48\uff1f \u88ab\u8c03\u5ea6\uff1a\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u53ea\u6709\u88ab\u8c03\u5ea6\u624d\u80fd\u6267\u884c\uff0c\u624d\u80fd\u8fdb\u5165\u4e34\u754c\u533a\uff0c\uff0c\u5982\u4f55\u963b\u6b62\u8c03\u5ea6\uff1f \u5173\u4e2d\u65ad\u3002 \u539f\u5b50\u4fdd\u62a4\u6cd5 \u7528\u4e34\u754c\u533a\u4fdd\u62a4\u4fe1\u53f7\u91cf\uff0c\u7528\u4fe1\u53f7\u91cf\u5b9e\u73b0\u540c\u6b65 P18 \u4fe1\u53f7\u91cf\u7684\u4ee3\u7801\u5b9e\u73b0 P19 \u6b7b\u9501\u5904\u7406 \u6b7b\u9501\u7684\u5904\u7406\u65b9\u6cd5 \u6b7b\u9501\u9884\u9632 \u6b7b\u9501\u907f\u514d m-\u8d44\u6e90\u4e2a\u6570 n-\u8fdb\u7a0b\u4e2a\u6570\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u9ad8 \u6b7b\u9501\u68c0\u6d4b+\u6062\u590d \u6b7b\u9501\u5ffd\u7565 P20 \u5185\u5b58\u7684\u4f7f\u7528\u548c\u5206\u6bb5 \u5f15\u5165\u5206\u6bb5\uff1a\u662f\u5c06\u6574\u4e2a\u7a0b\u5e8f\u4e00\u8d77\u8f7d\u5165\u5185\u5b58\u4e2d\u5417\uff1f P21 \u5185\u5b58\u5206\u533a\u4e0e\u5206\u9875 \u5185\u5b58\u600e\u4e48\u5206\u5272\uff1f \u56fa\u5b9a\u5206\u533a\u4e0e\u53ef\u53d8\u5206\u533a \u4f46\u7269\u7406\u5185\u5b58\u91c7\u7528\u5206\u9875\u65b9\u5f0f\u3002 \u5f15\u5165\u5206\u9875\uff1a\u89e3\u51b3\u5185\u5b58\u5206\u533a\u5bfc\u81f4\u7684\u5185\u5b58\u6548\u7387\u95ee\u9898 \u5185\u5b58\u7684\u89d2\u5ea6\u4e0a\uff0c\u7a7a\u95f4\u6d6a\u8d39\u5c11\uff1b\u7528\u6237\u7684\u89d2\u5ea6\u4e0a\uff0c\u652f\u6301\u5206\u6bb5 P22 \u591a\u7ea7\u9875\u8868\u548c\u5feb\u8868 \u5927\u9875\u8868\u5360\u7528\u5185\u5b58\uff0c\u9020\u6210\u6d6a\u8d39 \u7b2c\u4e00\u79cd\u65b9\u6cd5\uff0c\u53ea\u5b58\u653e\u7528\u5230\u7684\u9875 \u7528\u5230\u7684\u903b\u8f91\u9875\u624d\u6709\u9875\u8868\u9879 \u4f46\u662f\u9875\u8868\u4e2d\u7684\u9875\u53f7\u4e0d\u8fde\u7eed\uff0c\u5c31\u9700\u8981\u6bd4\u8f83\u3001\u67e5\u627e \u65f6\u95f4\u590d\u6742\u5ea6\u9ad8\uff0c\u65f6\u95f4\u6362\u7a7a\u95f4 \u65e2\u8981\u8fde\u7eed\u53c8\u8981\u8ba9\u9875\u8868\u5360\u7528\u5185\u5b58\u5c11\uff0c\u8be5\u600e\u4e48\u529e\uff1f \u7528\u4e66\u7684\u7ae0\u76ee\u5f55\u548c\u8282\u76ee\u5f55\u7c7b\u6bd4\u601d\u8003... \u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff0c\u591a\u7ea7\u9875\u8868 \u591a\u7ea7\u9875\u8868\u589e\u52a0\u4e86\u8bbf\u5b58\u7684\u6b21\u6570\uff0c\u5c24\u5176\u662f64\u4f4d\u7cfb\u7edf TLB\u662f\u4e00\u7ec4\u76f8\u8054\u5feb\u901f\u5b58\u50a8\uff0c\u662f\u5bc4\u5b58\u5668 TLB\u547d\u4e2d\u65f6\u6548\u7387\u4f1a\u5f88\u9ad8\uff0c\u672a\u547d\u4e2d\u65f6\u6548\u7387\u964d\u4f4e\u3002\u6240\u4ee5TLB\u8d8a\u5927\u8d8a\u597d\uff0c\u4f46\u662fTLB\u5f88\u8d35\uff0c\u901a\u5e38\u53ea\u6709\u301064\uff0c1024\u3011\u3002 P23 \u6bb5\u9875\u7ed3\u5408\u7684\u5b9e\u9645\u5185\u5b58\u7ba1\u7406 \u5148\u901a\u8fc7\u6bb5\u53f7\u627e\u5230\u57fa\u5740\u52a0\u4e0a\u504f\u79fb\u5730\u5740\u540e\u5f97\u5230\u7684\u662f\u865a\u62df\u5730\u5740\uff0c\u9700\u8981\u7ecf\u8fc7\u6620\u5c04\u5f97\u5230\u9875\u53f7\u5f97\u5230\u7269\u7406\u5730\u5740\u3002 \u4e24\u5c42\u5730\u5740\u7ffb\u8bd1\uff0c\u65e2\u652f\u6301\u4e86\u6bb5\u53c8\u652f\u6301\u4e86\u9875\u3002 \u4e00\u4e2a\u5b9e\u9645\u7684\u6bb5\u3001\u9875\u5f0f\u5185\u5b58\u7ba1\u7406 \u5185\u5b58\u7ba1\u7406\u6838\u5fc3\u5c31\u662f\u5185\u5b58\u5206\u914d\uff0c\u6240\u4ee5\u4ece\u7a0b\u5e8f\u653e\u5165\u5185\u5b58\u3001\u4f7f\u7528\u5185\u5b58\u5f00\u59cb \u7b2c\u4e00\u6b65\uff1a \uff08linux0.11\uff09 \u5b50\u8fdb\u7a0b\u5b8c\u5168\u62f7\u8d1d\u7236\u8fdb\u7a0b\u7684\u9875\u8868 \u7b2c\u4e8c\u6b65\uff1a \u7b2c\u4e09\u6b65\uff1a\u80fd\u7528\u8d77\u6765 \u7ecf\u8fc7\u4e24\u6b21\u5730\u5740\u7ffb\u8bd1 P24 \u5185\u5b58\u6362\u5165-\u8bf7\u6c42\u8c03\u9875 swap in \u4e4b\u524d\u8fdb\u7a0b\u4e5f\u6709\u7c7b\u4f3c\u7684\u8bf4\u6cd5\uff0c\u597d\u50cf\u8ba1\u7b97\u673a\u5728\u5355\u72ec\u7684\u4e3a\u7528\u6237\u8fdb\u7a0b\u670d\u52a1\u3002 \u7528\u6362\u5165\u6362\u51fa\u5b9e\u73b0\u5927\u5185\u5b58 \u5de6\u8fb94G\uff0c\u53f3\u8fb91G\u600e\u4e48\u529e\uff1f \u4ece\u78c1\u76d8\u4e0a\u6362\u8fdb\u6765\uff0c\u518d\u5efa\u7acb\u6620\u5c04\u3002\u8bf7\u6c42\u7684\u65f6\u5019\u624d\u6362\u5165\u624d\u5efa\u7acb\u6620\u5c04\u3002 \u6ca1\u6709\u6620\u5c04\uff0c\u7f3a\u9875\u4e2d\u65ad\u3002\u9875\u5904\u7406\u7a0b\u5e8f\u3002 \u4e00\u4e2a\u5b9e\u9645\u7cfb\u7edf\u7684\u8bf7\u6c42\u8c03\u9875 call _do_no_page , \u8be5\u51fd\u6570\u5728linux/mm/memory\u4e2d\uff0c\u7533\u8bf7\u7a7a\u95f2\u9875\uff0c\u4ece\u78c1\u76d8\u8bfb\u8fdb\uff0c\u5efa\u7acb\u6620\u5c04\u3002 P25 \u5185\u5b58\u6362\u51fa swap out LRU\u7684\u5b9e\u73b0 \u6bcf\u9875\u7ef4\u62a4\u4e00\u4e2a\u65f6\u95f4\u6233timestamp\uff0c\u9009\u5177\u6709\u6700\u5c0f\u65f6\u95f4\u6233\u7684\u9875\u6dd8\u6c70\u3002\u6bcf\u6267\u884c\u4e00\u6761\u6307\u4ee4\u90fd\u8981\u4fee\u6539\u65f6\u95f4\u6233\uff0c\u5b9e\u73b0\u4ee3\u4ef7\u592a\u5927\u3002 \u7ef4\u62a4\u4e00\u4e2a\u9875\u7801\u6808\uff0c\u9009\u6808\u5e95\u9875\u6dd8\u6c70\u3002\u6bcf\u6b21\u5730\u5740\u8bbf\u95ee\u90fd\u8981\u4fee\u6539\u6808\uff0c\u5b9e\u73b0\u4ee3\u4ef7\u4ecd\u7136\u8f83\u5927\u3002 LRU\u8fd1\u4f3c\u5b9e\u73b0-\u5c06\u65f6\u95f4\u8ba1\u6570\u53d8\u4e3a\u662f\u548c\u5426 \u4e8c\u6b21\u673a\u4f1a\u7b97\u6cd5\uff0c\u662f1\u65f6\u6e050\uff0c\u5faa\u73af\u4e00\u6b21\u540e\u4ecd\u7136\u662f0\u5219\u6dd8\u6c70\u3002 P26 IO\u4e0e\u663e\u793a\u5668 \u7ed9\u5916\u8bbe\u5bf9\u5e94\u7684\u63a7\u5236\u5668\u5199\u5185\u5bb9\uff0c\u7136\u540e\u63a7\u5236\u5668\u63a7\u5236\u5916\u8bbe\u3002 \u5411\u8bbe\u5907\u63a7\u5236\u5668\u7684\u5bc4\u5b58\u5668\u76f4\u63a5\u5199\u4e0d\u5c31\u884c\u4e86\uff1f \u9700\u8981\u67e5\u5bc4\u5b58\u5668\u5730\u5740\u3001\u5185\u5bb9\u7684\u683c\u5f0f\u548c\u8bed\u4e49...\u64cd\u4f5c\u7cfb\u7edf\u8981\u7ed9\u7528\u6237\u548c\u63d0\u4f9b\u4e00\u4e2a\u7b80\u5355\u89c6\u56fe\u2014\u2014\u6587\u4ef6\u89c6\u56fe\u8fd9\u6837\u65b9\u4fbf\u3002 P27 \u952e\u76d8 \u5982\u4f55\u4f7f\u7528\u952e\u76d8\uff1f \u4f7f\u7528\u8005\uff1a\u6572\u952e\u76d8\u3001\u770b\u5230\u7ed3\u679c \u64cd\u4f5c\u7cfb\u7edf\uff1a\u201c\u7b49\u7740\u201d\u6572\u952e\u76d8\u3001\u6572\u4e86\u5c31\u4e2d\u65ad inb\u3001outb P28 \u751f\u78c1\u76d8\u7684\u4f7f\u7528 \u8ba9\u78c1\u76d8\u7528\u8d77\u6765 \u78c1\u76d8\u7684\u8bbf\u95ee\u5355\u4f4d\u662f\u6247\u533a \u6247\u533a\u5927\u5c0f\uff1a512\u5b57\u8282 \u6247\u533a\u7684\u5927\u5c0f\u662f\u4f20\u8f93\u65f6\u95f4\u548c\u788e\u7247\u6d6a\u8d39\u7684\u6298\u8877 \u7b80\u5316\u62bd\u8c61 \u64cd\u4f5c\u7cfb\u7edf\u5e0c\u671b\u4e0a\u5c42\u7528\u6237\u4f7f\u7528\u4e0b\u5c42\u66f4\u52a0\u7b80\u5355\u9ad8\u6548 \u6247\u533a\u8d8a\u5927\u8bbf\u95ee\u901f\u5ea6\u8d8a\u5feb\uff0c\u4e8e\u662f\u7528\u7a7a\u95f4\u6362\u65f6\u95f4 FCFS\u78c1\u76d8\u8c03\u5ea6\u7b97\u6cd5 \u8c01\u5148\u6765\u5148\u8c03\u5ea6 SSTF\u78c1\u76d8\u8c03\u5ea6 Shortest-seek-time \u77ed\u5bfb\u9053\u4f18\u5148 SCAN\u78c1\u76d8\u8c03\u5ea6 SSTF+\u4e2d\u9014\u4e0d\u56de\u6298\uff1a\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u6709\u5904\u7406\u673a\u4f1a C-SCAN\u78c1\u76d8\u8c03\u5ea6 \uff08\u7535\u68af\u7b97\u6cd5\uff09 SCAN+\u76f4\u63a5\u79fb\u5230\u53e6\u4e00\u7aef\uff1a\u4e24\u7aef\u7684\u8bf7\u6c42\u90fd\u80fd\u5f88\u5feb\u5904\u7406 P29 \u4ece\u751f\u78c1\u76d8\u5230\u6587\u4ef6 \u4ece\u6587\u4ef6\u600e\u4e48\u5f97\u5230\u76d8\u5757\u53f7 \u4e3a\u4ec0\u4e48\u5f15\u5165\u6587\u4ef6\uff1f File control block \u8fde\u7eed\u7ed3\u6784\u7c7b\u4f3c\u6570\u7ec4\uff0c\u5728\u9762\u5bf9\u8fde\u7eed\u589e\u5220\u6539\u65f6\u8868\u73b0\u4e0d\u4f73 \u9002\u5408\u52a8\u6001\u589e\u957f\uff0c\u5b58\u53d6\u8d77\u6765\u6162 Index\uff0c\u65e2\u9002\u5408\u589e\u957f\uff0c\u8bfb\u5199\u4e5f\u4e0d\u6162 P30 \u6587\u4ef6\u4f7f\u7528\u78c1\u76d8\u7684\u5b9e\u73b0 P31 \u76ee\u5f55\u4e0e\u6587\u4ef6\u7cfb\u7edf \u5982\u4f55\u6839\u636e\u8def\u5f84\u540d\u627e\u5230\u6587\u4ef6\u7684FCB \u8981\u4f7f\u6574\u4e2a\u7cfb\u7edf\u80fd\u81ea\u4e3e\uff0c\u8fd8\u9700\u8981\u5176\u4ed6\u4fe1\u606f inode\u4f4d\u56fe\uff1a\u90a3\u4e9binode\u7a7a\u95f2\uff0c\u54ea\u4e9b\u88ab\u5360\u7528 \u76d8\u5757\u4f4d\u56fe\uff1a\u54ea\u4e9b\u76d8\u5757\u4f7f\u7a7a\u95f2\u7684\uff0c\u786c\u76d8\u5927\u5c0f\u4e0d\u540c\u8fd9\u4e2a\u4f4d\u56fe\u5927\u5c0f\u4e5f\u4e0d\u540c \u7a7a\u95f2\u4f4d\u56fe \u8d85\u7ea7\u5feb P32 \u76ee\u5f55\u89e3\u6790\u4ee3\u7801\u5b9e\u73b0 \u8bfb\u53d6inode\u2014\u2014iget \u5f00\u59cb\u76ee\u5f55\u89e3\u6790\u2014\u2014find_entry","title":"\u54c8\u5de5\u5927\u64cd\u4f5c\u7cfb\u7edf\u7f51\u8bfe"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%93%88%E5%B7%A5%E5%A4%A7%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BD%91%E8%AF%BE/#_1","text":"\u7ba1\u7406\u8ba1\u7b97\u673a\u786c\u4ef6\u7684\u8f6f\u4ef6\u7cfb\u7edf","title":"\u64cd\u4f5c\u7cfb\u7edf"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%93%88%E5%B7%A5%E5%A4%A7%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BD%91%E8%AF%BE/#_2","text":"\u64cd\u4f5c\u7cfb\u7edf\u63a5\u53e3\u3002\u8fde\u63a5\u64cd\u4f5c\u7cfb\u7edf\u548c\u5e94\u7528\u8f6f\u4ef6\uff0c\u8868\u73b0\u4e3a\u4e00\u4e9b\u51fd\u6570\u3002 \u5373\u7cfb\u7edf\u8c03\u7528\uff0c\u63a5\u53e3\u8868\u73b0\u4e3a\u51fd\u6570\u8c03\u7528\uff0c\u7531\u7cfb\u7edf\u63d0\u4f9b,\u6240\u4ee5\u79f0\u4f5c\u7cfb\u7edf\u8c03\u7528\u3002 POSIX\uff1aPortable Operating System Interface Of Unix","title":"\u64cd\u4f5c\u7cfb\u7edf\u63a5\u53e3"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%93%88%E5%B7%A5%E5%A4%A7%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BD%91%E8%AF%BE/#system-call","text":"\u5c06\u5185\u6838\u7a0b\u5e8f\u548c\u7528\u6237\u7a0b\u5e8f\u9694\u79bb \u533a\u5206\u5185\u6838\u6001\u548c\u7528\u6237\u6001\u3002 \u5f53\u524d\u7a0b\u5e8f\u5728\u4ec0\u4e48\u6001\uff0c\u7531\u4e8ePC\u2014CS\uff1aIP\u662f\u5f53\u524d\u6307\u4ee4\uff0c\u6240\u4ee5\u7528CS\u6700\u4f4e\u4e24\u4f4d\u8868\u793a\uff1a0\u5185\u6838\u6001\uff0c3\u7528\u6237\u6001\u3002 \u521d\u59cbDPL = 0 \u3001CPL = 3\u3002 \u786c\u4ef6\u63d0\u4f9b\u4e86\u4e3b\u52a8\u8fdb\u5165\u5185\u6838\u7684\u65b9\u6cd5\uff0c\u8fdb\u5165\u5185\u6838\u7684\u552f\u4e00\u65b9\u6cd5\u3002int \u6307\u4ee4\u4f7fCS\u4e2d\u7684CPL\u66f4\u6539\u4e3a0\uff0c\u8fdb\u5165\u5185\u6838\u3002 \u7cfb\u7edf\u8c03\u7528\u7684\u6838\u5fc3\uff1a \u7528\u6237\u7a0b\u5e8f\u4e2d\u5305\u542bint\u6307\u4ee4\u7684\u4ee3\u7801 \u64cd\u4f5c\u7cfb\u7edf\u5199\u4e2d\u65ad\u5904\u7406\uff0c\u83b7\u53d6\u60f3\u8c03\u7a0b\u5e8f\u7684\u7f16\u53f7 \u64cd\u4f5c\u7cfb\u7edf\u6839\u636e\u7f16\u53f7\u6267\u884c\u76f8\u5e94\u7684\u4ee3\u7801","title":"\u7cfb\u7edf\u8c03\u7528\u7684\u5b9e\u73b0 \uff08System Call\uff01\uff09"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%93%88%E5%B7%A5%E5%A4%A7%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BD%91%E8%AF%BE/#_3","text":"\u638c\u63e1CPU\u7ba1\u7406\u3001\u5185\u5b58\u7ba1\u7406\uff0c\u78c1\u76d8\u7ba1\u7406\u3001\u7ec8\u7aef\u8bbe\u5907\u7ba1\u7406\u3002 \u8fdb\u7a0b\u3001\u8fdb\u7a0b\u7ba1\u7406\u3001\u5730\u5740\uff08*p = 7\uff09\u3001\u865a\u62df\u5185\u5b58\u3001\u6587\u4ef6\u7cfb\u7edf\u3001\u6587\u4ef6\u3001\u8bbe\u5907\u6587\u4ef6\u3001\u8bbe\u5907\u9a71\u52a8","title":"\u5b66\u4e60\u4efb\u52a1"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%93%88%E5%B7%A5%E5%A4%A7%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BD%91%E8%AF%BE/#cpu","text":"\u5de5\u4f5c\u539f\u7406\uff1a\u53d6\u5740\u6267\u884c \u6709IO\u6307\u4ee4\u548c\u65e0IO\u6307\u4ee4\u8ba1\u7b97\u65f6\u95f4\u7684\u5dee\u522b \u4e00\u4e2aCPU\u4e0a\u4ea4\u66ff\u6267\u884c\u591a\u4e2a\u7a0b\u5e8f\uff1a\u5e76\u53d1","title":"CPU\u7ba1\u7406"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%93%88%E5%B7%A5%E5%A4%A7%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BD%91%E8%AF%BE/#_4","text":"PCB\uff1aProcess Control Block \u7528\u6765\u8bb0\u5f55\u8fdb\u7a0b\u4fe1\u606f\u7684\u6570\u636e\u7ed3\u6784 \u8fdb\u7a0b\u8c03\u5ea6\uff1aFIFO\u3001Priority \u5185\u5b58\u7ba1\u7406\u7684\u4e3b\u8981\u5185\u5bb9\uff1a\u591a\u8fdb\u7a0b\u7684\u5730\u5740\u7a7a\u95f4\u5206\u79bb \u5982\u4f55\u5f62\u6210\u591a\u8fdb\u7a0b\u56fe\u50cf\uff1f \u8bfb\u5199PCB \u64cd\u4f5c\u5bc4\u5b58\u5668\u5b8c\u6210\u5207\u6362 \u8c03\u5ea6\u7a0b\u5e8f \u8fdb\u7a0b\u7684\u540c\u6b65\u4e0e\u5408\u4f5c \u6709\u5730\u5740\u6620\u5c04","title":"\u591a\u8fdb\u7a0b\u56fe\u50cf"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%93%88%E5%B7%A5%E5%A4%A7%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BD%91%E8%AF%BE/#_5","text":"\u7ebf\u7a0b\u4e4b\u95f4\u5171\u4eab\u8d44\u6e90 Create\uff1fYield\uff1f","title":"\u7528\u6237\u7ea7\u7ebf\u7a0b"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%93%88%E5%B7%A5%E5%A4%A7%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BD%91%E8%AF%BE/#_6","text":"\u7528\u6237\u6808 \u5185\u6838\u6808","title":"\u5185\u6838\u7ea7\u7ebf\u7a0b"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%93%88%E5%B7%A5%E5%A4%A7%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BD%91%E8%AF%BE/#_7","text":"","title":"\u5185\u6838\u7ea7\u7ebf\u7a0b\u5b9e\u73b0"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%93%88%E5%B7%A5%E5%A4%A7%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BD%91%E8%AF%BE/#p13","text":"","title":"P13 \u64cd\u4f5c\u7cfb\u7edf\u4e4b\u201c\u6811\u201d"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%93%88%E5%B7%A5%E5%A4%A7%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BD%91%E8%AF%BE/#p14-cpu","text":"FIFO\uff1f Priority\uff1f \u5982\u4f55\u5408\u7406\u7684\u8c03\u5ea6\uff1f \u541e\u5410\u91cf\u548c\u54cd\u5e94\u65f6\u95f4\u6709\u77db\u76fe \u524d\u53f0\u4efb\u52a1\u548c\u540e\u53f0\u4efb\u52a1\u7684\u5173\u6ce8\u70b9\u4e0d\u540c IO\u5bc6\u96c6\u578b\u548cCPU\u5bc6\u96c6\u578b\u4efb\u52a1\u6709\u5404\u81ea\u7684\u7279\u70b9 \u57fa\u672cCPU\u8c03\u5ea6\u7b97\u6cd5 FCFS\uff08First Come First Served\uff09 \u5982\u4f55\u964d\u4f4e\u5468\u8f6c\u65f6\u95f4\uff1a SJF\uff08\u77ed\u4f5c\u4e1a\u4f18\u5148\uff09 \u90a3\u54cd\u5e94\u65f6\u95f4\u600e\u4e48\u529e\uff1f RR\uff1a\u6309\u65f6\u95f4\u7247\u8f6e\u8f6c\u8c03\u5ea6 \uff0c\u65f6\u95f4\u7247\u5927\uff1a\u54cd\u5e94\u65f6\u95f4\u957f\uff1b\u65f6\u95f4\u7247\u5c0f\uff0c\u541e\u5410\u91cf\u5c0f\u3002 \u540c\u65f6\u5b58\u5728\u8981\u6c42\u5468\u8f6c\u65f6\u95f4\u548c\u54cd\u5e94\u65f6\u95f4\u4e24\u79cd\u4efb\u52a1\uff1f \u6b7b\u677f\u7684\u6267\u884c\u4f18\u5148\u7ea7\u8c03\u5ea6\u4f1a\u4ea7\u751f\u9965\u997f\u3002","title":"P14 CPU\u8c03\u5ea6\u7b56\u7565"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%93%88%E5%B7%A5%E5%A4%A7%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BD%91%E8%AF%BE/#p15-schedule","text":"","title":"P15 \u4e00\u4e2a\u5b9e\u9645\u7684schedule\u51fd\u6570"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%93%88%E5%B7%A5%E5%A4%A7%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BD%91%E8%AF%BE/#p16","text":"\u591a\u4e2a\u8fdb\u7a0b\u5408\u7406\u6709\u5e8f\u7684\u5411\u524d\u6267\u884c\uff0c\u63a7\u5236\u8fd9\u4e2a\u6709\u5e8f\u8fc7\u7a0b\u7684\u5173\u952e\u662f\u4fe1\u53f7\u3002 \u5f15\u5165\u4fe1\u53f7\u91cf \u751f\u4ea7\u8005\u2014\u2014\u6d88\u8d39\u8005\u6a21\u5f0f \u5b58\u5728\u591a\u4e2a\u751f\u4ea7\u8005\u65f6\uff0c\u65e0\u6cd5\u5524\u9192\u5176\u4ed6\u751f\u4ea7\u8005\uff0ccounter\u65e0\u6cd5\u6ee1\u8db3\u8981\u6c42\u4e86\u3002","title":"P16 \u8fdb\u7a0b\u540c\u6b65\u4e0e\u4fe1\u53f7\u91cf"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%93%88%E5%B7%A5%E5%A4%A7%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BD%91%E8%AF%BE/#p17","text":"\u4ec0\u4e48\u662f\u4fe1\u53f7\u91cf\uff1f \u901a\u8fc7\u5bf9\u8fd9\u4e2a\u91cf\u7684\u8bbf\u95ee\u548c\u4fee\u6539\uff0c\u8ba9\u5927\u5bb6\u6709\u5e8f\u63a8\u8fdb\u3002 \u4e34\u754c\u533a\uff1a \u4e00\u6bb5\u4ee3\u7801\u4e00\u6b21\u53ea\u5141\u8bb8\u4e00\u4e2a\u8fdb\u7a0b\u8fdb\u5165\u3002\u8bfb\u5199\u4fe1\u53f7\u91cf\u7684\u4ee3\u7801\u4e00\u5b9a\u662f\u4e34\u754c\u533a \u4e34\u754c\u533a\u4ee3\u7801\u4fdd\u62a4\u539f\u5219 \u57fa\u672c\u539f\u5219\uff1a\u4e92\u65a5\u8fdb\u5165 \u597d\u7684\u4e34\u754c\u533a\u4fdd\u62a4\u539f\u5219\uff1a\u6709\u7a7a\u8ba9\u8fdb\u3001\u6709\u9650\u7b49\u5f85 1.\u8f6e\u6362\u6cd5 2.\u6807\u8bb0\u6cd5 3.Peterson\u7b97\u6cd5 \u4e34\u754c\u533a\u4fdd\u62a4\u7684\u53e6\u4e00\u7c7b\u89e3\u6cd5 \u53ea\u5141\u8bb8\u4e00\u4e2a\u8fdb\u7a0b\u8fdb\u5165\uff0c\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u8fdb\u5165\u65f6\u610f\u5473\u7740\u4ec0\u4e48\uff1f \u88ab\u8c03\u5ea6\uff1a\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u53ea\u6709\u88ab\u8c03\u5ea6\u624d\u80fd\u6267\u884c\uff0c\u624d\u80fd\u8fdb\u5165\u4e34\u754c\u533a\uff0c\uff0c\u5982\u4f55\u963b\u6b62\u8c03\u5ea6\uff1f \u5173\u4e2d\u65ad\u3002 \u539f\u5b50\u4fdd\u62a4\u6cd5 \u7528\u4e34\u754c\u533a\u4fdd\u62a4\u4fe1\u53f7\u91cf\uff0c\u7528\u4fe1\u53f7\u91cf\u5b9e\u73b0\u540c\u6b65","title":"P17 \u4fe1\u53f7\u91cf\u4e34\u754c\u533a\u4fdd\u62a4"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%93%88%E5%B7%A5%E5%A4%A7%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BD%91%E8%AF%BE/#p18","text":"","title":"P18 \u4fe1\u53f7\u91cf\u7684\u4ee3\u7801\u5b9e\u73b0"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%93%88%E5%B7%A5%E5%A4%A7%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BD%91%E8%AF%BE/#p19","text":"\u6b7b\u9501\u7684\u5904\u7406\u65b9\u6cd5 \u6b7b\u9501\u9884\u9632 \u6b7b\u9501\u907f\u514d m-\u8d44\u6e90\u4e2a\u6570 n-\u8fdb\u7a0b\u4e2a\u6570\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u9ad8 \u6b7b\u9501\u68c0\u6d4b+\u6062\u590d \u6b7b\u9501\u5ffd\u7565","title":"P19 \u6b7b\u9501\u5904\u7406"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%93%88%E5%B7%A5%E5%A4%A7%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BD%91%E8%AF%BE/#p20","text":"\u5f15\u5165\u5206\u6bb5\uff1a\u662f\u5c06\u6574\u4e2a\u7a0b\u5e8f\u4e00\u8d77\u8f7d\u5165\u5185\u5b58\u4e2d\u5417\uff1f","title":"P20 \u5185\u5b58\u7684\u4f7f\u7528\u548c\u5206\u6bb5"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%93%88%E5%B7%A5%E5%A4%A7%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BD%91%E8%AF%BE/#p21","text":"\u5185\u5b58\u600e\u4e48\u5206\u5272\uff1f \u56fa\u5b9a\u5206\u533a\u4e0e\u53ef\u53d8\u5206\u533a \u4f46\u7269\u7406\u5185\u5b58\u91c7\u7528\u5206\u9875\u65b9\u5f0f\u3002 \u5f15\u5165\u5206\u9875\uff1a\u89e3\u51b3\u5185\u5b58\u5206\u533a\u5bfc\u81f4\u7684\u5185\u5b58\u6548\u7387\u95ee\u9898 \u5185\u5b58\u7684\u89d2\u5ea6\u4e0a\uff0c\u7a7a\u95f4\u6d6a\u8d39\u5c11\uff1b\u7528\u6237\u7684\u89d2\u5ea6\u4e0a\uff0c\u652f\u6301\u5206\u6bb5","title":"P21 \u5185\u5b58\u5206\u533a\u4e0e\u5206\u9875"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%93%88%E5%B7%A5%E5%A4%A7%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BD%91%E8%AF%BE/#p22","text":"\u5927\u9875\u8868\u5360\u7528\u5185\u5b58\uff0c\u9020\u6210\u6d6a\u8d39 \u7b2c\u4e00\u79cd\u65b9\u6cd5\uff0c\u53ea\u5b58\u653e\u7528\u5230\u7684\u9875 \u7528\u5230\u7684\u903b\u8f91\u9875\u624d\u6709\u9875\u8868\u9879 \u4f46\u662f\u9875\u8868\u4e2d\u7684\u9875\u53f7\u4e0d\u8fde\u7eed\uff0c\u5c31\u9700\u8981\u6bd4\u8f83\u3001\u67e5\u627e \u65f6\u95f4\u590d\u6742\u5ea6\u9ad8\uff0c\u65f6\u95f4\u6362\u7a7a\u95f4 \u65e2\u8981\u8fde\u7eed\u53c8\u8981\u8ba9\u9875\u8868\u5360\u7528\u5185\u5b58\u5c11\uff0c\u8be5\u600e\u4e48\u529e\uff1f \u7528\u4e66\u7684\u7ae0\u76ee\u5f55\u548c\u8282\u76ee\u5f55\u7c7b\u6bd4\u601d\u8003... \u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff0c\u591a\u7ea7\u9875\u8868 \u591a\u7ea7\u9875\u8868\u589e\u52a0\u4e86\u8bbf\u5b58\u7684\u6b21\u6570\uff0c\u5c24\u5176\u662f64\u4f4d\u7cfb\u7edf TLB\u662f\u4e00\u7ec4\u76f8\u8054\u5feb\u901f\u5b58\u50a8\uff0c\u662f\u5bc4\u5b58\u5668 TLB\u547d\u4e2d\u65f6\u6548\u7387\u4f1a\u5f88\u9ad8\uff0c\u672a\u547d\u4e2d\u65f6\u6548\u7387\u964d\u4f4e\u3002\u6240\u4ee5TLB\u8d8a\u5927\u8d8a\u597d\uff0c\u4f46\u662fTLB\u5f88\u8d35\uff0c\u901a\u5e38\u53ea\u6709\u301064\uff0c1024\u3011\u3002","title":"P22 \u591a\u7ea7\u9875\u8868\u548c\u5feb\u8868"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%93%88%E5%B7%A5%E5%A4%A7%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BD%91%E8%AF%BE/#p23","text":"\u5148\u901a\u8fc7\u6bb5\u53f7\u627e\u5230\u57fa\u5740\u52a0\u4e0a\u504f\u79fb\u5730\u5740\u540e\u5f97\u5230\u7684\u662f\u865a\u62df\u5730\u5740\uff0c\u9700\u8981\u7ecf\u8fc7\u6620\u5c04\u5f97\u5230\u9875\u53f7\u5f97\u5230\u7269\u7406\u5730\u5740\u3002 \u4e24\u5c42\u5730\u5740\u7ffb\u8bd1\uff0c\u65e2\u652f\u6301\u4e86\u6bb5\u53c8\u652f\u6301\u4e86\u9875\u3002 \u4e00\u4e2a\u5b9e\u9645\u7684\u6bb5\u3001\u9875\u5f0f\u5185\u5b58\u7ba1\u7406 \u5185\u5b58\u7ba1\u7406\u6838\u5fc3\u5c31\u662f\u5185\u5b58\u5206\u914d\uff0c\u6240\u4ee5\u4ece\u7a0b\u5e8f\u653e\u5165\u5185\u5b58\u3001\u4f7f\u7528\u5185\u5b58\u5f00\u59cb \u7b2c\u4e00\u6b65\uff1a \uff08linux0.11\uff09 \u5b50\u8fdb\u7a0b\u5b8c\u5168\u62f7\u8d1d\u7236\u8fdb\u7a0b\u7684\u9875\u8868 \u7b2c\u4e8c\u6b65\uff1a \u7b2c\u4e09\u6b65\uff1a\u80fd\u7528\u8d77\u6765 \u7ecf\u8fc7\u4e24\u6b21\u5730\u5740\u7ffb\u8bd1","title":"P23  \u6bb5\u9875\u7ed3\u5408\u7684\u5b9e\u9645\u5185\u5b58\u7ba1\u7406"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%93%88%E5%B7%A5%E5%A4%A7%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BD%91%E8%AF%BE/#p24-swap-in","text":"\u4e4b\u524d\u8fdb\u7a0b\u4e5f\u6709\u7c7b\u4f3c\u7684\u8bf4\u6cd5\uff0c\u597d\u50cf\u8ba1\u7b97\u673a\u5728\u5355\u72ec\u7684\u4e3a\u7528\u6237\u8fdb\u7a0b\u670d\u52a1\u3002 \u7528\u6362\u5165\u6362\u51fa\u5b9e\u73b0\u5927\u5185\u5b58 \u5de6\u8fb94G\uff0c\u53f3\u8fb91G\u600e\u4e48\u529e\uff1f \u4ece\u78c1\u76d8\u4e0a\u6362\u8fdb\u6765\uff0c\u518d\u5efa\u7acb\u6620\u5c04\u3002\u8bf7\u6c42\u7684\u65f6\u5019\u624d\u6362\u5165\u624d\u5efa\u7acb\u6620\u5c04\u3002 \u6ca1\u6709\u6620\u5c04\uff0c\u7f3a\u9875\u4e2d\u65ad\u3002\u9875\u5904\u7406\u7a0b\u5e8f\u3002 \u4e00\u4e2a\u5b9e\u9645\u7cfb\u7edf\u7684\u8bf7\u6c42\u8c03\u9875 call _do_no_page , \u8be5\u51fd\u6570\u5728linux/mm/memory\u4e2d\uff0c\u7533\u8bf7\u7a7a\u95f2\u9875\uff0c\u4ece\u78c1\u76d8\u8bfb\u8fdb\uff0c\u5efa\u7acb\u6620\u5c04\u3002","title":"P24 \u5185\u5b58\u6362\u5165-\u8bf7\u6c42\u8c03\u9875 swap in"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%93%88%E5%B7%A5%E5%A4%A7%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BD%91%E8%AF%BE/#p25-swap-out","text":"LRU\u7684\u5b9e\u73b0 \u6bcf\u9875\u7ef4\u62a4\u4e00\u4e2a\u65f6\u95f4\u6233timestamp\uff0c\u9009\u5177\u6709\u6700\u5c0f\u65f6\u95f4\u6233\u7684\u9875\u6dd8\u6c70\u3002\u6bcf\u6267\u884c\u4e00\u6761\u6307\u4ee4\u90fd\u8981\u4fee\u6539\u65f6\u95f4\u6233\uff0c\u5b9e\u73b0\u4ee3\u4ef7\u592a\u5927\u3002 \u7ef4\u62a4\u4e00\u4e2a\u9875\u7801\u6808\uff0c\u9009\u6808\u5e95\u9875\u6dd8\u6c70\u3002\u6bcf\u6b21\u5730\u5740\u8bbf\u95ee\u90fd\u8981\u4fee\u6539\u6808\uff0c\u5b9e\u73b0\u4ee3\u4ef7\u4ecd\u7136\u8f83\u5927\u3002 LRU\u8fd1\u4f3c\u5b9e\u73b0-\u5c06\u65f6\u95f4\u8ba1\u6570\u53d8\u4e3a\u662f\u548c\u5426 \u4e8c\u6b21\u673a\u4f1a\u7b97\u6cd5\uff0c\u662f1\u65f6\u6e050\uff0c\u5faa\u73af\u4e00\u6b21\u540e\u4ecd\u7136\u662f0\u5219\u6dd8\u6c70\u3002","title":"P25 \u5185\u5b58\u6362\u51fa swap out"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%93%88%E5%B7%A5%E5%A4%A7%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BD%91%E8%AF%BE/#p26-io","text":"\u7ed9\u5916\u8bbe\u5bf9\u5e94\u7684\u63a7\u5236\u5668\u5199\u5185\u5bb9\uff0c\u7136\u540e\u63a7\u5236\u5668\u63a7\u5236\u5916\u8bbe\u3002 \u5411\u8bbe\u5907\u63a7\u5236\u5668\u7684\u5bc4\u5b58\u5668\u76f4\u63a5\u5199\u4e0d\u5c31\u884c\u4e86\uff1f \u9700\u8981\u67e5\u5bc4\u5b58\u5668\u5730\u5740\u3001\u5185\u5bb9\u7684\u683c\u5f0f\u548c\u8bed\u4e49...\u64cd\u4f5c\u7cfb\u7edf\u8981\u7ed9\u7528\u6237\u548c\u63d0\u4f9b\u4e00\u4e2a\u7b80\u5355\u89c6\u56fe\u2014\u2014\u6587\u4ef6\u89c6\u56fe\u8fd9\u6837\u65b9\u4fbf\u3002","title":"P26 IO\u4e0e\u663e\u793a\u5668"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%93%88%E5%B7%A5%E5%A4%A7%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BD%91%E8%AF%BE/#p27","text":"\u5982\u4f55\u4f7f\u7528\u952e\u76d8\uff1f \u4f7f\u7528\u8005\uff1a\u6572\u952e\u76d8\u3001\u770b\u5230\u7ed3\u679c \u64cd\u4f5c\u7cfb\u7edf\uff1a\u201c\u7b49\u7740\u201d\u6572\u952e\u76d8\u3001\u6572\u4e86\u5c31\u4e2d\u65ad inb\u3001outb","title":"P27 \u952e\u76d8"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%93%88%E5%B7%A5%E5%A4%A7%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BD%91%E8%AF%BE/#p28","text":"\u8ba9\u78c1\u76d8\u7528\u8d77\u6765 \u78c1\u76d8\u7684\u8bbf\u95ee\u5355\u4f4d\u662f\u6247\u533a \u6247\u533a\u5927\u5c0f\uff1a512\u5b57\u8282 \u6247\u533a\u7684\u5927\u5c0f\u662f\u4f20\u8f93\u65f6\u95f4\u548c\u788e\u7247\u6d6a\u8d39\u7684\u6298\u8877 \u7b80\u5316\u62bd\u8c61 \u64cd\u4f5c\u7cfb\u7edf\u5e0c\u671b\u4e0a\u5c42\u7528\u6237\u4f7f\u7528\u4e0b\u5c42\u66f4\u52a0\u7b80\u5355\u9ad8\u6548 \u6247\u533a\u8d8a\u5927\u8bbf\u95ee\u901f\u5ea6\u8d8a\u5feb\uff0c\u4e8e\u662f\u7528\u7a7a\u95f4\u6362\u65f6\u95f4 FCFS\u78c1\u76d8\u8c03\u5ea6\u7b97\u6cd5 \u8c01\u5148\u6765\u5148\u8c03\u5ea6 SSTF\u78c1\u76d8\u8c03\u5ea6 Shortest-seek-time \u77ed\u5bfb\u9053\u4f18\u5148 SCAN\u78c1\u76d8\u8c03\u5ea6 SSTF+\u4e2d\u9014\u4e0d\u56de\u6298\uff1a\u6bcf\u4e2a\u8bf7\u6c42\u90fd\u6709\u5904\u7406\u673a\u4f1a C-SCAN\u78c1\u76d8\u8c03\u5ea6 \uff08\u7535\u68af\u7b97\u6cd5\uff09 SCAN+\u76f4\u63a5\u79fb\u5230\u53e6\u4e00\u7aef\uff1a\u4e24\u7aef\u7684\u8bf7\u6c42\u90fd\u80fd\u5f88\u5feb\u5904\u7406","title":"P28 \u751f\u78c1\u76d8\u7684\u4f7f\u7528"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%93%88%E5%B7%A5%E5%A4%A7%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BD%91%E8%AF%BE/#p29","text":"\u4ece\u6587\u4ef6\u600e\u4e48\u5f97\u5230\u76d8\u5757\u53f7 \u4e3a\u4ec0\u4e48\u5f15\u5165\u6587\u4ef6\uff1f File control block \u8fde\u7eed\u7ed3\u6784\u7c7b\u4f3c\u6570\u7ec4\uff0c\u5728\u9762\u5bf9\u8fde\u7eed\u589e\u5220\u6539\u65f6\u8868\u73b0\u4e0d\u4f73 \u9002\u5408\u52a8\u6001\u589e\u957f\uff0c\u5b58\u53d6\u8d77\u6765\u6162 Index\uff0c\u65e2\u9002\u5408\u589e\u957f\uff0c\u8bfb\u5199\u4e5f\u4e0d\u6162 P30 \u6587\u4ef6\u4f7f\u7528\u78c1\u76d8\u7684\u5b9e\u73b0","title":"P29 \u4ece\u751f\u78c1\u76d8\u5230\u6587\u4ef6"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%93%88%E5%B7%A5%E5%A4%A7%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BD%91%E8%AF%BE/#p31","text":"\u5982\u4f55\u6839\u636e\u8def\u5f84\u540d\u627e\u5230\u6587\u4ef6\u7684FCB \u8981\u4f7f\u6574\u4e2a\u7cfb\u7edf\u80fd\u81ea\u4e3e\uff0c\u8fd8\u9700\u8981\u5176\u4ed6\u4fe1\u606f inode\u4f4d\u56fe\uff1a\u90a3\u4e9binode\u7a7a\u95f2\uff0c\u54ea\u4e9b\u88ab\u5360\u7528 \u76d8\u5757\u4f4d\u56fe\uff1a\u54ea\u4e9b\u76d8\u5757\u4f7f\u7a7a\u95f2\u7684\uff0c\u786c\u76d8\u5927\u5c0f\u4e0d\u540c\u8fd9\u4e2a\u4f4d\u56fe\u5927\u5c0f\u4e5f\u4e0d\u540c \u7a7a\u95f2\u4f4d\u56fe \u8d85\u7ea7\u5feb","title":"P31 \u76ee\u5f55\u4e0e\u6587\u4ef6\u7cfb\u7edf"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%93%88%E5%B7%A5%E5%A4%A7%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%BD%91%E8%AF%BE/#p32","text":"\u8bfb\u53d6inode\u2014\u2014iget \u5f00\u59cb\u76ee\u5f55\u89e3\u6790\u2014\u2014find_entry","title":"P32 \u76ee\u5f55\u89e3\u6790\u4ee3\u7801\u5b9e\u73b0"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%A4%9A%E8%BF%9B%E7%A8%8B%E5%A4%9A%E7%BA%BF%E7%A8%8B/","text":"\u7ebf\u7a0b\u548c\u8fdb\u7a0b\u6709\u4ec0\u4e48\u533a\u522b\uff1f \u8fdb\u7a0b\uff08process\uff09\u662f\u64cd\u4f5c\u7cfb\u7edf\u4e3a\u6b63\u5728\u8fd0\u884c\u7684\u7a0b\u5e8f\u63d0\u4f9b\u7684\u62bd\u8c61\u3002 \u7ebf\u7a0b\uff08thread\uff09\u662f\u64cd\u4f5c\u7cfb\u7edf\u80fd\u591f\u8fdb\u884c\u8fd0\u7b97\u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u4f4d\u3002\u88ab\u5305\u542b\u5728\u8fdb\u7a0b\u4e2d\uff0c\u662f\u8fdb\u7a0b\u7684\u5b9e\u9645\u8fd0\u4f5c\u5355\u4f4d\u3002 \u6709\u4e86\u7ebf\u7a0b\u6280\u672f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u521b\u5efa\u591a\u4e2a\u7ebf\u7a0b\uff0c\u8ba9\u5b83\u4eec\u5728 \u201c\u540c\u4e00\u65f6\u523b\u201d \u5206\u522b\u53bb\u505a\u4e0d\u540c\u7684\u5de5\u4f5c\u4e86\u3002\u8fd9\u4e9b\u7ebf\u7a0b\u5171\u4eab\u540c\u4e00\u5757\u5185\u5b58\uff0c\u7ebf\u7a0b\u4e4b\u95f4\u53ef\u4ee5\u5171\u4eab\u5bf9\u8c61\u3001\u8d44\u6e90\uff0c\u5982\u679c\u6709\u51b2\u7a81\u6216\u9700\u8981\u534f\u540c\uff0c\u8fd8\u53ef\u4ee5\u968f\u65f6\u6c9f\u901a\u4ee5\u89e3\u51b3\u51b2\u7a81\u6216\u4fdd\u6301\u540c\u6b65\u3002 \u7f3a\u70b9\uff1a \u5728\u4e00\u4e2a\u8fdb\u7a0b\u5185\uff0c\u4e0d\u7ba1\u4f60\u521b\u5efa\u4e86\u591a\u5c11\u7ebf\u7a0b\uff0c\u5b83\u4eec\u603b\u662f\u88ab\u9650\u5b9a\u5728\u4e00\u9897CPU\u5185\uff0c\u6216\u8005\u591a\u6838CPU\u7684\u4e00\u4e2a\u6838\u5185\u3002\u8fd9\u610f\u5473\u7740\uff0c\u591a\u7ebf\u7a0b\u5728\u5b8f\u89c2\u4e0a\u662f\u5e76\u884c\u7684\uff0c\u5728\u5fae\u89c2\u4e0a\u5219\u662f\u5206\u65f6\u5207\u6362\u4e32\u884c\u7684\uff0c\u591a\u7ebf\u7a0b\u7f16\u7a0b\u65e0\u6cd5\u5145\u5206\u53d1\u6325\u591a\u6838\u8ba1\u7b97\u8d44\u6e90\u7684\u4f18\u52bf\u3002\u8fd9\u4e5f\u662f\u4f7f\u7528\u591a\u7ebf\u7a0b\u505a\u4efb\u52a1\u5e76\u884c\u5904\u7406\u65f6\uff0c\u7ebf\u7a0b\u6570\u91cf\u8d85\u8fc7\u4e00\u5b9a\u6570\u503c\u540e\uff0c\u7ebf\u7a0b\u8d8a\u591a\u901f\u5ea6\u53cd\u5012\u8d8a\u6162\u7684\u539f\u56e0\u3002 \u591a\u8fdb\u7a0b\u6280\u672f\u6b63\u597d\u5f25\u8865\u4e86\u591a\u7ebf\u7a0b\u7f16\u7a0b\u7684\u4e0d\u8db3\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u4e00\u9897CPU\u4e0a\uff0c\u6216\u8005\u591a\u6838CPU\u7684\u6bcf\u4e00\u4e2a\u6838\u4e0a\u542f\u52a8\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u5982\u679c\u6709\u5fc5\u8981\uff0c\u8fd8\u53ef\u4ee5\u5728\u6bcf\u4e2a\u8fdb\u7a0b\u5185\u518d\u521b\u5efa\u9002\u91cf\u7684\u7ebf\u7a0b\uff0c\u6700\u5927\u9650\u5ea6\u5730\u4f7f\u7528\u8ba1\u7b97\u8d44\u6e90\u89e3\u51b3\u95ee\u9898\u3002\u56e0\u4e3a\u4e0d\u5728\u540c\u4e00\u5757\u5185\u5b58\u533a\u57df\u5185\uff0c\u548c\u7ebf\u7a0b\u76f8\u6bd4\uff0c\u8fdb\u7a0b\u95f4\u7684\u8d44\u6e90\u5171\u4eab\u3001\u901a\u4fe1\u3001\u540c\u6b65\u7b49\uff0c\u90fd\u8981\u9ebb\u70e6\u5f97\u591a\uff0c\u53d7\u5230\u7684\u9650\u5236\u4e5f\u66f4\u591a\u3002 Reference https://www.zhihu.com/question/25532384","title":"\u591a\u8fdb\u7a0b\u591a\u7ebf\u7a0b"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%A4%9A%E8%BF%9B%E7%A8%8B%E5%A4%9A%E7%BA%BF%E7%A8%8B/#_1","text":"\u8fdb\u7a0b\uff08process\uff09\u662f\u64cd\u4f5c\u7cfb\u7edf\u4e3a\u6b63\u5728\u8fd0\u884c\u7684\u7a0b\u5e8f\u63d0\u4f9b\u7684\u62bd\u8c61\u3002 \u7ebf\u7a0b\uff08thread\uff09\u662f\u64cd\u4f5c\u7cfb\u7edf\u80fd\u591f\u8fdb\u884c\u8fd0\u7b97\u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u4f4d\u3002\u88ab\u5305\u542b\u5728\u8fdb\u7a0b\u4e2d\uff0c\u662f\u8fdb\u7a0b\u7684\u5b9e\u9645\u8fd0\u4f5c\u5355\u4f4d\u3002 \u6709\u4e86\u7ebf\u7a0b\u6280\u672f\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5728\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u521b\u5efa\u591a\u4e2a\u7ebf\u7a0b\uff0c\u8ba9\u5b83\u4eec\u5728 \u201c\u540c\u4e00\u65f6\u523b\u201d \u5206\u522b\u53bb\u505a\u4e0d\u540c\u7684\u5de5\u4f5c\u4e86\u3002\u8fd9\u4e9b\u7ebf\u7a0b\u5171\u4eab\u540c\u4e00\u5757\u5185\u5b58\uff0c\u7ebf\u7a0b\u4e4b\u95f4\u53ef\u4ee5\u5171\u4eab\u5bf9\u8c61\u3001\u8d44\u6e90\uff0c\u5982\u679c\u6709\u51b2\u7a81\u6216\u9700\u8981\u534f\u540c\uff0c\u8fd8\u53ef\u4ee5\u968f\u65f6\u6c9f\u901a\u4ee5\u89e3\u51b3\u51b2\u7a81\u6216\u4fdd\u6301\u540c\u6b65\u3002 \u7f3a\u70b9\uff1a \u5728\u4e00\u4e2a\u8fdb\u7a0b\u5185\uff0c\u4e0d\u7ba1\u4f60\u521b\u5efa\u4e86\u591a\u5c11\u7ebf\u7a0b\uff0c\u5b83\u4eec\u603b\u662f\u88ab\u9650\u5b9a\u5728\u4e00\u9897CPU\u5185\uff0c\u6216\u8005\u591a\u6838CPU\u7684\u4e00\u4e2a\u6838\u5185\u3002\u8fd9\u610f\u5473\u7740\uff0c\u591a\u7ebf\u7a0b\u5728\u5b8f\u89c2\u4e0a\u662f\u5e76\u884c\u7684\uff0c\u5728\u5fae\u89c2\u4e0a\u5219\u662f\u5206\u65f6\u5207\u6362\u4e32\u884c\u7684\uff0c\u591a\u7ebf\u7a0b\u7f16\u7a0b\u65e0\u6cd5\u5145\u5206\u53d1\u6325\u591a\u6838\u8ba1\u7b97\u8d44\u6e90\u7684\u4f18\u52bf\u3002\u8fd9\u4e5f\u662f\u4f7f\u7528\u591a\u7ebf\u7a0b\u505a\u4efb\u52a1\u5e76\u884c\u5904\u7406\u65f6\uff0c\u7ebf\u7a0b\u6570\u91cf\u8d85\u8fc7\u4e00\u5b9a\u6570\u503c\u540e\uff0c\u7ebf\u7a0b\u8d8a\u591a\u901f\u5ea6\u53cd\u5012\u8d8a\u6162\u7684\u539f\u56e0\u3002 \u591a\u8fdb\u7a0b\u6280\u672f\u6b63\u597d\u5f25\u8865\u4e86\u591a\u7ebf\u7a0b\u7f16\u7a0b\u7684\u4e0d\u8db3\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u4e00\u9897CPU\u4e0a\uff0c\u6216\u8005\u591a\u6838CPU\u7684\u6bcf\u4e00\u4e2a\u6838\u4e0a\u542f\u52a8\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u5982\u679c\u6709\u5fc5\u8981\uff0c\u8fd8\u53ef\u4ee5\u5728\u6bcf\u4e2a\u8fdb\u7a0b\u5185\u518d\u521b\u5efa\u9002\u91cf\u7684\u7ebf\u7a0b\uff0c\u6700\u5927\u9650\u5ea6\u5730\u4f7f\u7528\u8ba1\u7b97\u8d44\u6e90\u89e3\u51b3\u95ee\u9898\u3002\u56e0\u4e3a\u4e0d\u5728\u540c\u4e00\u5757\u5185\u5b58\u533a\u57df\u5185\uff0c\u548c\u7ebf\u7a0b\u76f8\u6bd4\uff0c\u8fdb\u7a0b\u95f4\u7684\u8d44\u6e90\u5171\u4eab\u3001\u901a\u4fe1\u3001\u540c\u6b65\u7b49\uff0c\u90fd\u8981\u9ebb\u70e6\u5f97\u591a\uff0c\u53d7\u5230\u7684\u9650\u5236\u4e5f\u66f4\u591a\u3002","title":"\u7ebf\u7a0b\u548c\u8fdb\u7a0b\u6709\u4ec0\u4e48\u533a\u522b\uff1f"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E5%A4%9A%E8%BF%9B%E7%A8%8B%E5%A4%9A%E7%BA%BF%E7%A8%8B/#reference","text":"https://www.zhihu.com/question/25532384","title":"Reference"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84OS%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/%E5%86%85%E6%A0%B8%E7%A9%BA%E9%97%B4%E4%B8%8E%E7%94%A8%E6%88%B7%E7%A9%BA%E9%97%B4/","text":"\u5185\u6838\u7a7a\u95f4\u548c\u7528\u6237\u7a7a\u95f4 \u4e3a\u4e86\u4fdd\u8bc1\u4e0d\u540c\u8fdb\u7a0b\u4e4b\u95f4\u7684\u76f8\u4e92\u72ec\u7acb\uff08\u4e00\u4e2a\u8fdb\u7a0b\u7684\u5d29\u6e83\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u8fdb\u7a0b\uff0c\u6076\u610f\u8fdb\u7a0b\u4e0d\u80fd\u8bfb\u53d6\u548c\u4fee\u6539\u5176\u4ed6\u8fdb\u7a0b\u8fd0\u884c\u65f6\u7684\u4ee3\u7801\u548c\u6570\u636e\uff09\u3002 \u56e0\u6b64\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838 \u9700\u8981\u62e5\u6709\u9ad8\u4e8e\u666e\u901a\u8fdb\u7a0b\u7684\u6743\u9650 \uff0c \u4ee5\u6b64\u6765\u8c03\u5ea6\u548c\u7ba1\u7406\u7528\u6237\u7684\u5e94\u7528\u7a0b\u5e8f\u3002 \u4e8e\u662f\u5185\u5b58\u7a7a\u95f4\u88ab\u5212\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u4e3a \u5185\u6838\u7a7a\u95f4 \uff0c\u4e00\u90e8\u5206\u4e3a \u7528\u6237\u7a7a\u95f4 \uff0c\u5185\u6838\u7a7a\u95f4\u5b58\u50a8\u7684\u4ee3\u7801\u548c\u6570\u636e\u5177\u6709\u66f4\u9ad8\u7ea7\u522b\u7684\u6743\u9650\u3002\u5185\u5b58\u8bbf\u95ee\u7684\u76f8\u5173\u786c\u4ef6\u5728\u7a0b\u5e8f\u6267\u884c\u671f\u95f4\u4f1a\u8fdb\u884c\u8bbf\u95ee\u63a7\u5236\uff08Access Control\uff09\uff0c\u4f7f\u5f97\u7528\u6237\u7a7a\u95f4\u7684\u7a0b\u5e8f\u4e0d\u80fd\u76f4\u63a5\u8bfb\u5199\u5185\u6838\u7a7a\u95f4\u7684\u5185\u5b58\u3002","title":"\u5185\u6838\u7a7a\u95f4\u4e0e\u7528\u6237\u7a7a\u95f4"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84OS%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/%E5%86%85%E6%A0%B8%E7%A9%BA%E9%97%B4%E4%B8%8E%E7%94%A8%E6%88%B7%E7%A9%BA%E9%97%B4/#_1","text":"\u4e3a\u4e86\u4fdd\u8bc1\u4e0d\u540c\u8fdb\u7a0b\u4e4b\u95f4\u7684\u76f8\u4e92\u72ec\u7acb\uff08\u4e00\u4e2a\u8fdb\u7a0b\u7684\u5d29\u6e83\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u8fdb\u7a0b\uff0c\u6076\u610f\u8fdb\u7a0b\u4e0d\u80fd\u8bfb\u53d6\u548c\u4fee\u6539\u5176\u4ed6\u8fdb\u7a0b\u8fd0\u884c\u65f6\u7684\u4ee3\u7801\u548c\u6570\u636e\uff09\u3002 \u56e0\u6b64\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838 \u9700\u8981\u62e5\u6709\u9ad8\u4e8e\u666e\u901a\u8fdb\u7a0b\u7684\u6743\u9650 \uff0c \u4ee5\u6b64\u6765\u8c03\u5ea6\u548c\u7ba1\u7406\u7528\u6237\u7684\u5e94\u7528\u7a0b\u5e8f\u3002 \u4e8e\u662f\u5185\u5b58\u7a7a\u95f4\u88ab\u5212\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u4e00\u90e8\u5206\u4e3a \u5185\u6838\u7a7a\u95f4 \uff0c\u4e00\u90e8\u5206\u4e3a \u7528\u6237\u7a7a\u95f4 \uff0c\u5185\u6838\u7a7a\u95f4\u5b58\u50a8\u7684\u4ee3\u7801\u548c\u6570\u636e\u5177\u6709\u66f4\u9ad8\u7ea7\u522b\u7684\u6743\u9650\u3002\u5185\u5b58\u8bbf\u95ee\u7684\u76f8\u5173\u786c\u4ef6\u5728\u7a0b\u5e8f\u6267\u884c\u671f\u95f4\u4f1a\u8fdb\u884c\u8bbf\u95ee\u63a7\u5236\uff08Access Control\uff09\uff0c\u4f7f\u5f97\u7528\u6237\u7a7a\u95f4\u7684\u7a0b\u5e8f\u4e0d\u80fd\u76f4\u63a5\u8bfb\u5199\u5185\u6838\u7a7a\u95f4\u7684\u5185\u5b58\u3002","title":"\u5185\u6838\u7a7a\u95f4\u548c\u7528\u6237\u7a7a\u95f4"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84OS%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/%E6%80%8E%E4%B9%88%E7%90%86%E8%A7%A3%E9%98%BB%E5%A1%9E%E9%9D%9E%E9%98%BB%E5%A1%9E%E4%B8%8E%E5%90%8C%E6%AD%A5%E5%BC%82%E6%AD%A5/","text":"A1\uff1a IO\u5bc6\u96c6\u578b\u548cCPU\u5bc6\u96c6\u578b IO\u5bc6\u96c6\u578b\u4efb\u52a1\u3002\u7f51\u7edc\u722c\u866b\u5c31\u662f\u4e00\u4e2a\u975e\u5e38\u5178\u578b\u7684\u4f8b\u5b50\uff0c\u722c\u866b\u5728\u5411\u670d\u52a1\u5668\u53d1\u8d77\u8bf7\u6c42\u4e4b\u540e\uff0c\u6709\u4e00\u6bb5\u65f6\u95f4\u5fc5\u987b\u8981\u7b49\u5f85\u670d\u52a1\u5668\u7684\u54cd\u5e94\u8fd4\u56de\uff0c\u8fd9\u79cd\u4efb\u52a1\u5c31\u5c5e\u4e8e IO \u5bc6\u96c6\u578b\u4efb\u52a1\u3002\u5bf9\u4e8e\u8fd9\u79cd\u4efb\u52a1\uff0c\u5982\u679c\u6211\u4eec\u542f\u7528\u591a\u7ebf\u7a0b\uff0c\u5904\u7406\u5668\u5c31\u53ef\u4ee5\u5728\u67d0\u4e2a\u7ebf\u7a0b\u7b49\u5f85\u7684\u8fc7\u7a0b\u4e2d\u53bb\u5904\u7406\u5176\u4ed6\u7684\u4efb\u52a1\uff0c\u4ece\u800c\u63d0\u9ad8\u6574\u4f53\u7684\u722c\u53d6\u6548\u7387\u3002 CPU \u5bc6\u96c6\u578b\u4efb\u52a1\u3002\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u4efb\u52a1\u7684\u8fd0\u884c\u4e00\u76f4\u9700\u8981\u5904\u7406\u5668\u7684\u53c2\u4e0e\u3002\u6b64\u65f6\u5982\u679c\u6211\u4eec\u5f00\u542f\u4e86\u591a\u7ebf\u7a0b\uff0c\u4e00\u4e2a\u5904\u7406\u5668\u4ece\u4e00\u4e2a\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u5207\u6362\u5230\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u4e0a\u53bb\uff0c\u5904\u7406\u5668\u4f9d\u7136\u4e0d\u4f1a\u505c\u4e0b\u6765\uff0c\u59cb\u7ec8\u4f1a\u5fd9\u4e8e\u8ba1\u7b97\uff0c\u8fd9\u6837\u5e76\u4e0d\u4f1a\u8282\u7701\u603b\u4f53\u7684\u65f6\u95f4\uff0c\u56e0\u4e3a\u9700\u8981\u5904\u7406\u7684\u4efb\u52a1\u7684\u8ba1\u7b97\u603b\u91cf\u662f\u4e0d\u53d8\u7684\u3002\u5982\u679c\u7ebf\u7a0b\u6570\u76ee\u8fc7\u591a\uff0c\u53cd\u800c\u8fd8\u4f1a\u5728\u7ebf\u7a0b\u5207\u6362\u7684\u8fc7\u7a0b\u4e2d\u591a\u8017\u8d39\u4e00\u4e9b\u65f6\u95f4\uff0c\u6574\u4f53\u6548\u7387\u4f1a\u53d8\u4f4e\u3002 \u963b\u585e\u548c\u975e\u963b\u585e \u963b\u585e\u548c\u975e\u963b\u585e\u5173\u6ce8\u7684\u662f\u7a0b\u5e8f\u5728\u7b49\u5f85\u8c03\u7528\u7ed3\u679c\uff08\u6d88\u606f\u3001\u8fd4\u56de\u503c\uff09\u65f6\u7684\u72b6\u6001\u3002 \u963b\u585e\u65f6\uff0c\u5728\u8c03\u7528\u7ed3\u679c\u8fd4\u56de\u524d\uff0c\u5f53\u524d\u7ebf\u7a0b\u4f1a\u88ab\u6302\u8d77\uff0c\u5e76\u5728\u5f97\u5230\u7ed3\u679c\u4e4b\u540e\u8fd4\u56de\u3002 \u975e\u963b\u585e\u65f6\uff0c\u5982\u679c\u4e0d\u80fd\u7acb\u523b\u5f97\u5230\u7ed3\u679c\uff0c\u5219\u8be5\u8c03\u7528\u8005\u4e0d\u4f1a\u963b\u585e\u5f53\u524d\u7ebf\u7a0b\u3002\u56e0\u6b64\u5bf9\u5e94\u975e\u963b\u585e\u7684\u60c5\u51b5\uff0c\u8c03\u7528\u8005\u9700\u8981\u5b9a\u65f6\u8f6e\u8be2\u67e5\u770b\u5904\u7406\u72b6\u6001\u3002 \u540c\u6b65\u548c\u5f02\u6b65 \u540c\u6b65\u548c\u5f02\u6b65\u5173\u6ce8\u7684\u662f\u6d88\u606f\u901a\u77e5\u673a\u5236\u3002 \u540c\u6b65\uff0c\u662f\u5728\u53d1\u51fa\u4e00\u4e2a\u8c03\u7528\u65f6\uff0c\u5728\u6ca1\u6709\u5f97\u5230\u7ed3\u679c\u4e4b\u524d\u8be5\u8c03\u7528\u4e0d\u8fd4\u56de\u3002\u4e00\u65e6\u8be5\u8c03\u7528\u8fd4\u56de\uff0c\u5c31\u8868\u793a\u5f97\u5230\u8fd4\u56de\u503c\u4e86\u3002 \u5f02\u6b65\uff0c\u662f\u5728\u8c03\u7528\u53d1\u51fa\u4e4b\u540e\uff0c\u8be5\u8c03\u7528\u5c31\u76f4\u63a5\u8fd4\u56de\u4e86\uff0c\u6240\u4ee5\u6ca1\u6709\u8fd4\u56de\u7ed3\u679c\u3002\u5f53\u4e00\u4e2a\u5f02\u6b65\u8fc7\u7a0b\u8c03\u7528\u53d1\u51fa\u540e\uff0c\u8c03\u7528\u8005\u4e0d\u4f1a\u7acb\u523b\u5f97\u5230\u7ed3\u679c\uff0c\u800c\u662f\u5728\u8c03\u7528\u53d1\u51fa\u540e\uff0c\u88ab\u8c03\u7528\u8005\u901a\u8fc7\u72b6\u6001\u3001\u901a\u77e5\u6765\u901a\u77e5\u8c03\u7528\u8005\uff0c\u6216\u8005\u901a\u8fc7\u56de\u8c03\u51fd\u6570\u5904\u7406\u8fd9\u4e2a\u8c03\u7528\u3002 \u5c0f\u7ed3\uff1a \u5728\u8fdb\u7a0b\u901a\u4fe1\u5c42\u9762\uff0c \u963b\u585e/\u975e\u963b\u585e\uff0c \u540c\u6b65/\u5f02\u6b65\u57fa\u672c\u662f\u540c\u4e49\u8bcd\uff0c \u4f46\u662f\u9700\u8981\u6ce8\u610f\u533a\u5206\u8ba8\u8bba\u7684\u5bf9\u8c61\u662f\u53d1\u9001\u65b9\u8fd8\u662f\u63a5\u6536\u65b9\u3002 \u53d1\u9001\u65b9\u963b\u585e/\u975e\u963b\u585e\uff08\u540c\u6b65/\u5f02\u6b65\uff09\u548c\u63a5\u6536\u65b9\u7684\u963b\u585e/\u975e\u963b\u585e\uff08\u540c\u6b65/\u5f02\u6b65\uff09 \u662f\u4e92\u4e0d\u5f71\u54cd\u7684\u3002 \u5728 IO \u7cfb\u7edf\u8c03\u7528\u5c42\u9762\uff08 IO system call \uff09\u5c42\u9762\uff0c \u975e\u963b\u585e IO \u7cfb\u7edf\u8c03\u7528 \u548c \u5f02\u6b65 IO \u7cfb\u7edf\u8c03\u7528 \u5b58\u5728\u7740\u4e00\u5b9a\u7684\u5dee\u522b\uff0c \u5b83\u4eec\u90fd\u4e0d\u4f1a\u963b\u585e\u8fdb\u7a0b\uff0c \u4f46\u662f\u8fd4\u56de\u7ed3\u679c\u7684\u65b9\u5f0f\u548c\u5185\u5bb9\u6709\u6240\u5dee\u522b\uff0c \u4f46\u662f\u90fd\u5c5e\u4e8e\u975e\u963b\u585e\u7cfb\u7edf\u8c03\u7528\uff08 non-blocing system call \uff09 \u975e\u963b\u585e\u7cfb\u7edf\u8c03\u7528\uff08non-blocking I/O system call \u4e0e asynchronous I/O system call\uff09 \u7684\u5b58\u5728\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0\u7ebf\u7a0b\u7ea7\u522b\u7684 I/O \u5e76\u53d1\uff0c \u4e0e\u901a\u8fc7\u591a\u8fdb\u7a0b\u5b9e\u73b0\u7684 I/O \u5e76\u53d1\u76f8\u6bd4\u53ef\u4ee5\u51cf\u5c11\u5185\u5b58\u6d88\u8017\u4ee5\u53ca\u8fdb\u7a0b\u5207\u6362\u7684\u5f00\u9500\u3002 \u8fdb\u7a0b\u95f4\u901a\u4fe1\u7684\u540c\u6b65/\u5f02\u6b65\uff0c\u963b\u585e/\u975e\u963b\u585e \u963b\u585e\u5f0f\u53d1\u9001\uff08blocking send\uff09. \u53d1\u9001\u65b9\u8fdb\u7a0b\u4f1a\u88ab\u4e00\u76f4\u963b\u585e\uff0c \u76f4\u5230\u6d88\u606f\u88ab\u63a5\u53d7\u65b9\u8fdb\u7a0b\u6536\u5230\u3002 \u975e\u963b\u585e\u5f0f\u53d1\u9001\uff08nonblocking send\uff09\u3002 \u53d1\u9001\u65b9\u8fdb\u7a0b\u8c03\u7528 send() \u540e\uff0c \u7acb\u5373\u5c31\u53ef\u4ee5\u5176\u4ed6\u64cd\u4f5c\u3002 \u963b\u585e\u5f0f\u63a5\u6536\uff08blocking receive\uff09 \u63a5\u6536\u65b9\u8c03\u7528 receive() \u540e\u4e00\u76f4\u963b\u585e\uff0c \u76f4\u5230\u6d88\u606f\u5230\u8fbe\u53ef\u7528\u3002 \u975e\u963b\u585e\u5f0f\u63a5\u53d7\uff08nonblocking receive\uff09 \u63a5\u6536\u65b9\u8c03\u7528 receive() \u51fd\u6570\u540e\uff0c \u8981\u4e48\u5f97\u5230\u4e00\u4e2a\u6709\u6548\u7684\u7ed3\u679c\uff0c \u8981\u4e48\u5f97\u5230\u4e00\u4e2a\u7a7a\u503c\uff0c \u5373\u4e0d\u4f1a\u88ab\u963b\u585e\u3002 \u4e0a\u8ff0\u4e0d\u540c\u7c7b\u578b\u7684\u53d1\u9001\u65b9\u5f0f\u548c\u4e0d\u540c\u7c7b\u578b\u7684\u63a5\u6536\u65b9\u5f0f\uff0c\u53ef\u4ee5\u81ea\u7531\u7ec4\u5408\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c \u4ece\u8fdb\u7a0b\u7ea7\u901a\u4fe1\u7684\u7ef4\u5ea6\u8ba8\u8bba\u65f6\uff0c \u963b\u585e\u548c\u540c\u6b65\uff08\u975e\u963b\u585e\u548c\u5f02\u6b65\uff09\u5c31\u662f\u4e00\u5bf9\u540c\u4e49\u8bcd\uff0c \u4e14\u9700\u8981\u9488\u5bf9 \u53d1\u9001\u65b9 \u548c \u63a5\u6536\u65b9 \u4f5c\u533a\u5206\u5bf9\u5f85\u3002 \u8fdb\u7a0b\u963b\u585e New. \u8fdb\u7a0b\u6b63\u5728\u88ab\u521b\u5efa. Running. \u8fdb\u7a0b\u7684\u6307\u4ee4\u6b63\u5728\u88ab\u6267\u884c Waiting. \u8fdb\u7a0b\u6b63\u5728\u7b49\u5f85\u4e00\u4e9b\u4e8b\u4ef6\u7684\u53d1\u751f\uff08\u4f8b\u5982 I/O \u7684\u5b8c\u6210\u6216\u8005\u6536\u5230\u67d0\u4e2a\u4fe1\u53f7\uff09 Ready. \u8fdb\u7a0b\u5728\u7b49\u5f85\u88ab\u64cd\u4f5c\u7cfb\u7edf\u8c03\u5ea6 Terminated. \u8fdb\u7a0b\u6267\u884c\u5b8c\u6bd5\uff08\u53ef\u80fd\u662f\u88ab\u5f3a\u884c\u7ec8\u6b62\u7684\uff09 \u6211\u4eec\u6240\u8bf4\u7684 \u201c\u963b\u585e\u201d\u662f\u6307\u8fdb\u7a0b\u5728 \u53d1\u8d77\u4e86\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528 \uff08System Call\uff09 \u540e\uff0c \u7531\u4e8e\u8be5\u7cfb\u7edf\u8c03\u7528\u7684\u64cd\u4f5c\u4e0d\u80fd\u7acb\u5373\u5b8c\u6210\uff0c\u9700\u8981\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4\uff0c\u4e8e\u662f\u5185\u6838\u5c06\u8fdb\u7a0b\u6302\u8d77\u4e3a \u7b49\u5f85 \uff08waiting\uff09 \u72b6\u6001\uff0c \u4ee5\u786e\u4fdd\u5b83\u4e0d\u4f1a\u88ab\u8c03\u5ea6\u6267\u884c\uff0c \u5360\u7528 CPU \u8d44\u6e90\u3002 \u53cb\u60c5\u63d0\u793a\uff1a \u5728\u4efb\u610f\u65f6\u523b\uff0c \u4e00\u4e2a CPU \u6838\u5fc3\u4e0a\uff08processor\uff09\u53ea\u53ef\u80fd\u8fd0\u884c\u4e00\u4e2a\u8fdb\u7a0b IO System Call\u7684\u963b\u585e\u975e\u963b\u585e\uff0c\u540c\u6b65\u5f02\u6b65 \u963b\u585e \u8fd9\u4e2a\u8bcd\u662f\u4e0e\u7cfb\u7edf\u8c03\u7528 System Call \u7d27\u7d27\u8054\u7cfb\u5728\u4e00\u8d77\u7684\uff0c \u56e0\u4e3a\u8981\u8ba9\u4e00\u4e2a\u8fdb\u7a0b\u8fdb\u5165 \u7b49\u5f85\uff08waiting\uff09 \u7684\u72b6\u6001, \u8981\u4e48\u662f\u5b83\u4e3b\u52a8\u8c03\u7528 wait() \u6216 sleep() \u7b49\u6302\u8d77\u81ea\u5df1\u7684\u64cd\u4f5c\uff0c \u53e6\u4e00\u79cd\u5c31\u662f\u5b83\u8c03\u7528 System Call, \u800c System Call \u56e0\u4e3a\u6d89\u53ca\u5230\u4e86 I/O \u64cd\u4f5c\uff0c \u4e0d\u80fd\u7acb\u5373\u5b8c\u6210\uff0c \u4e8e\u662f\u5185\u6838\u5c31\u4f1a\u5148\u5c06\u8be5\u8fdb\u7a0b\u7f6e\u4e3a\u7b49\u5f85\u72b6\u6001\uff0c \u8c03\u5ea6\u5176\u4ed6\u8fdb\u7a0b\u7684\u8fd0\u884c\uff0c \u7b49\u5230 \u5b83\u6240\u8bf7\u6c42\u7684 I/O \u64cd\u4f5c\u5b8c\u6210\u4e86\u4ee5\u540e\uff0c \u518d\u5c06\u5176\u72b6\u6001\u66f4\u6539\u56de ready \u3002 \u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u5728\u6267\u884c System Call \u65f6\uff0c CPU \u9700\u8981\u4e0e IO \u8bbe\u5907\u5b8c\u6210\u4e00\u7cfb\u5217\u7269\u7406\u901a\u4fe1\u4e0a\u7684\u4ea4\u4e92\uff0c \u5176\u5b9e\u518d\u4e00\u6b21\u4f1a\u6d89\u53ca\u5230\u963b\u585e\u548c\u975e\u963b\u585e\u7684\u95ee\u9898\uff0c \u4f8b\u5982\uff0c \u64cd\u4f5c\u7cfb\u7edf\u53d1\u8d77\u4e86\u4e00\u4e2a\u8bfb\u786c\u76d8\u7684\u8bf7\u6c42\u540e\uff0c \u5176\u5b9e\u662f\u5411\u786c\u76d8\u8bbe\u5907\u901a\u8fc7\u603b\u7ebf\u53d1\u51fa\u4e86\u4e00\u4e2a\u8bf7\u6c42\uff0c\u5b83\u5373\u53ef\u4ee5\u963b\u585e\u5f0f\u5730\u7b49\u5f85IO \u8bbe\u5907\u7684\u8fd4\u56de\u7ed3\u679c\uff0c\u4e5f\u53ef\u4ee5\u975e\u963b\u585e\u5f0f\u7684\u7ee7\u7eed\u5176\u4ed6\u7684\u64cd\u4f5c\u3002 \u5728\u73b0\u4ee3\u8ba1\u7b97\u673a\u4e2d\uff0c\u8fd9\u4e9b\u7269\u7406\u901a\u4fe1\u64cd\u4f5c\u57fa\u672c\u90fd\u662f\u5f02\u6b65\u5b8c\u6210\u7684\uff0c \u5373\u53d1\u51fa\u8bf7\u6c42\u540e\uff0c \u7b49\u5f85 I/O \u8bbe\u5907\u7684\u4e2d\u65ad\u4fe1\u53f7\u540e\uff0c \u518d\u6765\u8bfb\u53d6\u76f8\u5e94\u7684\u8bbe\u5907\u7f13\u51b2\u533a\u3002 \u4f46\u662f\uff0c\u5927\u90e8\u5206\u64cd\u4f5c\u7cfb\u7edf\u9ed8\u8ba4\u4e3a\u7528\u6237\u7ea7\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u7684\u90fd\u662f \u963b\u585e\u5f0f \u7684\u7cfb\u7edf\u8c03\u7528 \uff08blocking systemcall\uff09\u63a5\u53e3\uff0c \u56e0\u4e3a\u963b\u585e\u5f0f\u7684\u8c03\u7528\uff0c\u4f7f\u5f97\u5e94\u7528\u7ea7\u4ee3\u7801\u7684\u7f16\u5199\u66f4\u5bb9\u6613\uff08\u4ee3\u7801\u7684\u6267\u884c\u987a\u5e8f\u548c\u7f16\u5199\u987a\u5e8f\u662f\u4e00\u81f4\u7684\uff09\u3002 \u4f46\u540c\u6837\uff0c \u73b0\u5728\u7684\u5927\u90e8\u5206\u64cd\u4f5c\u7cfb\u7edf\u4e5f\u4f1a\u63d0\u4f9b \u975e\u963b\u585e I/O \u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\uff08Nonblocking I/O system call\uff09\u3002 \u4e00\u4e2a\u975e\u963b\u585e\u8c03\u7528\u4e0d\u4f1a\u6302\u8d77\u8c03\u7528\u7a0b\u5e8f\uff0c \u800c\u662f\u4f1a\u7acb\u5373\u8fd4\u56de\u4e00\u4e2a\u503c\uff0c \u8868\u793a\u6709\u591a\u5c11bytes \u7684\u6570\u636e\u88ab\u6210\u529f\u8bfb\u53d6\uff08\u6216\u5199\u5165\uff09\u3002 \u975e\u963b\u585eI/O \u7cfb\u7edf\u8c03\u7528 ( nonblocking system call )\u7684\u53e6\u4e00\u4e2a\u66ff\u4ee3\u54c1\u662f \u5f02\u6b65I/O\u7cfb\u7edf\u8c03\u7528 \uff08asychronous system call\uff09 \u3002 \u4e0e\u975e\u963b\u585e I/O \u7cfb\u7edf\u8c03\u7528\u7c7b\u4f3c\uff0casychronous system call \u4e5f\u662f\u4f1a\u7acb\u5373\u8fd4\u56de\uff0c \u4e0d\u4f1a\u7b49\u5f85 I/O \u64cd\u4f5c\u7684\u5b8c\u6210\uff0c \u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\u5176\u4ed6\u7684\u64cd\u4f5c\uff0c \u7b49\u5230 I/O \u64cd\u4f5c\u5b8c\u6210\u4e86\u4ee5\u540e\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u901a\u77e5\u8c03\u7528\u8fdb\u7a0b\uff08\u8bbe\u7f6e\u4e00\u4e2a\u7528\u6237\u7a7a\u95f4\u7279\u6b8a\u7684\u53d8\u91cf\u503c \u6216\u8005 \u89e6\u53d1\u4e00\u4e2a signal \u6216\u8005 \u4ea7\u751f\u4e00\u4e2a\u8f6f\u4e2d\u65ad \u6216\u8005 \u8c03\u7528\u5e94\u7528\u7a0b\u5e8f\u7684\u56de\u8c03\u51fd\u6570\uff09\u3002 \u6b64\u5904\uff0c \u975e\u963b\u585eI/O \u7cfb\u7edf\u8c03\u7528( nonblocking system call ) \u548c \u5f02\u6b65I/O\u7cfb\u7edf\u8c03\u7528 \uff08asychronous system call\uff09 \u7684\u533a\u522b\u662f\uff1a \u4e00\u4e2a \u975e\u963b\u585eI/O \u7cfb\u7edf\u8c03\u7528 read() \u64cd\u4f5c\u7acb\u5373\u8fd4\u56de\u7684\u662f\u4efb\u4f55\u53ef\u4ee5\u7acb\u5373\u62ff\u5230\u7684\u6570\u636e\uff0c \u53ef\u4ee5\u662f\u5b8c\u6574\u7684\u7ed3\u679c\uff0c \u4e5f\u53ef\u4ee5\u662f\u4e0d\u5b8c\u6574\u7684\u7ed3\u679c\uff0c \u8fd8\u53ef\u4ee5\u662f\u4e00\u4e2a\u7a7a\u503c\u3002 \u800c \u5f02\u6b65I/O\u7cfb\u7edf\u8c03\u7528 read\uff08\uff09\u7ed3\u679c\u5fc5\u987b\u662f\u5b8c\u6574\u7684\uff0c \u4f46\u662f\u8fd9\u4e2a\u64cd\u4f5c\u5b8c\u6210\u7684\u901a\u77e5\u53ef\u4ee5\u5ef6\u8fdf\u5230\u5c06\u6765\u7684\u4e00\u4e2a\u65f6\u95f4\u70b9\u3002 \u975e\u963b\u585e\u5f0fIO\u5982\u4f55\u5e2e\u52a9\u670d\u52a1\u5668\u63d0\u9ad8\u541e\u5410\u91cf \u5355\u8fdb\u7a0b \u670d\u52a1\u5668\u7a0b\u5e8f\uff0c \u6536\u5230\u4e00\u4e2a Socket \u8fde\u63a5\u8bf7\u6c42\u540e\uff0c \u8bfb\u53d6\u8bf7\u6c42\u4e2d\u7684\u6587\u4ef6\u540d\uff0c\u7136\u540e\u8bfb\u8bf7\u6c42\u7684\u6587\u4ef6\u540d\u5185\u5bb9\uff0c\u5c06\u6587\u4ef6\u5185\u5bb9\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u3002 \u90a3\u4e48\u4e00\u4e2a\u8bf7\u6c42\u7684\u5904\u7406\u6d41\u7a0b\u4f1a\u5982\u56fe\u6240\u793a\u3002 CPU\u548c\u786c\u76d8IO\u5927\u90e8\u5206\u662f\u95f2\u7f6e\u7684 \u65b9\u6848\u4e00\uff1a \u591a\u8fdb\u7a0b \u6bcf\u5230\u8fbe\u4e00\u4e2a\u8bf7\u6c42\uff0c \u6211\u4eec\u4e3a\u8fd9\u4e2a\u8bf7\u6c42\u65b0\u521b\u5efa\u4e00\u4e2a\u8fdb\u7a0b\u6765\u5904\u7406\u3002 \u8fd9\u6837\uff0c \u4e00\u4e2a\u8fdb\u7a0b\u5728\u7b49\u5f85 IO \u65f6\uff0c \u5176\u4ed6\u7684\u8fdb\u7a0b\u53ef\u4ee5\u88ab\u8c03\u5ea6\u6267\u884c\uff0c \u66f4\u52a0\u5145\u5206\u5730\u5229\u7528 CPU \u7b49\u8d44\u6e90\u3002 \u95ee\u9898\uff1a \u6bcf\u65b0\u521b\u5efa\u4e00\u4e2a\u8fdb\u7a0b\u90fd\u4f1a\u6d88\u8017\u4e00\u5b9a\u7684\u5185\u5b58\u7a7a\u95f4\uff0c \u4e14\u8fdb\u7a0b\u5207\u6362\u4e5f\u4f1a\u6709\u65f6\u95f4\u6d88\u8017\uff0c \u9ad8\u5e76\u53d1\u65f6\uff0c \u5927\u91cf\u8fdb\u7a0b\u6765\u56de\u5207\u6362\u7684\u65f6\u95f4\u5f00\u9500\u4f1a\u53d8\u5f97\u660e\u663e\u8d77\u6765\u3002 \u65b9\u6848\u4e8c\uff1a\u591a\u7ebf\u7a0b \u548c\u591a\u8fdb\u7a0b\u65b9\u6848\u7c7b\u4f3c\uff0c\u4e3a\u6bcf\u4e00\u4e2a\u8bf7\u6c42\u65b0\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u8fdb\u884c\u5904\u7406\uff0c\u8fd9\u6837\u505a\u7684\u91cd\u8981\u533a\u522b\u662f\uff0c \u6240\u6709\u7684\u7ebf\u7a0b\u90fd\u5171\u4eab\u540c\u4e00\u4e2a\u8fdb\u7a0b\u7a7a\u95f4 \u95ee\u9898\uff1a \u9700\u8981\u8003\u8651\u662f\u5426\u9700\u8981\u4e3a\u7279\u5b9a\u7684\u903b\u8f91\u4f7f\u7528\u9501\u3002 \u5f15\u7533\u95ee\u9898\uff1a \u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u7684\u67d0\u4e00\u4e2a\u7ebf\u7a0b\u53d1\u8d77\u4e86 system call \u540e\uff0c \u662f\u5426\u9020\u6210\u6574\u4e2a\u8fdb\u7a0b\u7684\u963b\u585e\uff1f \u5982\u679c\u4f1a\uff0c \u90a3\u4e48\u591a\u7ebf\u7a0b\u65b9\u6848\u4e0e\u5355\u8fdb\u7a0b\u65b9\u6848\u76f8\u6bd4\u5c31\u6ca1\u6709\u660e\u663e\u7684\u6539\u5584\u3002 \u89e3\u51b3\u529e\u6cd51\uff1a\u5185\u6838\u652f\u6301\u7684\u7ebf\u7a0b\uff08kenerl supported threads\uff09 \u5185\u6838\u7ea7\u7ebf\u7a0b \u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u80fd\u591f\u611f\u77e5\u5230\u7ebf\u7a0b\uff0c \u6bcf\u4e00\u4e2a\u7ebf\u7a0b\u90fd\u4f1a\u6709\u4e00\u4e2a\u5185\u6838\u8c03\u7528\u6808\uff08kenerl stack\uff09 \u548c \u4fdd\u5b58CPU \u5bc4\u5b58\u5668\u4e0b\u6587\u7684 table \u3002 \u95ee\u9898\uff1a \u5185\u6838\u652f\u6301\u7ebf\u7a0b\u53ef\u79fb\u690d\u6027\u5dee\uff0c \u5176\u5b9e\u73b0\u5bf9\u4e8e\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u800c\u8a00\u6709\u6240\u5dee\u522b\u3002 \u89e3\u51b3\u529e\u6cd52\uff1a \u7528\u6237\u652f\u6301\u7684\u7ebf\u7a0b\uff08user supported threads\uff09 \u7528\u6237\u7ea7\u7ebf\u7a0b \u5185\u6838\u611f\u77e5\u4e0d\u5230\u7528\u6237\u7ebf\u7a0b\uff0c \u6bcf\u4e00\u4e2a\u7528\u6237\u7684\u8fdb\u7a0b\u62e5\u6709\u4e00\u4e2a\u8c03\u5ea6\u5668\uff0c \u8be5\u8c03\u5ea6\u5668\u53ef\u4ee5\u611f\u77e5\u5230\u7ebf\u7a0b\u53d1\u8d77\u7684\u7cfb\u7edf\u8c03\u7528\uff0c \u5f53\u4e00\u4e2a\u7ebf\u7a0b\u4ea7\u751f\u7cfb\u7edf\u8c03\u7528\u65f6\uff0c \u4e0d\u963b\u585e\u6574\u4e2a\u8fdb\u7a0b\uff0c \u5207\u6362\u5230\u5176\u4ed6\u7ebf\u7a0b\u7ee7\u7eed\u8fd0\u884c\u3002 \u5f53 I/O \u8c03\u7528\u5b8c\u6210\u4ee5\u540e\uff0c \u80fd\u591f\u91cd\u65b0\u5524\u9192\u88ab\u963b\u585e\u7684\u7ebf\u7a0b\u3002\u5b9e\u73b0\u7ec6\u8282\uff1a \u5e94\u7528\u7a0b\u5e8f\u57fa\u4e8e\u7ebf\u7a0b\u5e93 thread libray \u7f16\u5199 \u7ebf\u7a0b\u5e93\u4e2d\u5305\u542b \u201c\u865a\u5047\u7684\u201d read(), write(), accept()\u7b49\u7cfb\u7edf\u8c03\u7528\u3002 \u7ebf\u7a0b\u5e93\u4e2d\u7684 read(), write(), accept() \u7684\u5e95\u5c42\u5b9e\u73b0\u4e3a\u975e\u963b\u585e\u7cfb\u7edf\u8c03\u7528\uff08Non-blocking system call\uff09\uff0c \u8c03\u7528\u540e\uff0c\u7531\u4e8e\u53ef\u4ee5\u7acb\u5373\u8fd4\u56de\uff0c \u5219\u5c06\u7279\u5b9a\u7684\u7ebf\u7a0b\u72b6\u6001\u6807\u8bb0\u4e3a waiting, \u8c03\u5ea6\u5176\u4ed6\u7684\u53ef\u6267\u884c\u7ebf\u7a0b\u3002 \u5185\u6838\u5b8c\u6210\u4e86 IO \u64cd\u4f5c\u540e\uff0c \u8c03\u7528\u7ebf\u7a0b\u5e93\u7684\u56de\u8c03\u51fd\u6570\uff0c \u5c06\u539f\u6765\u5904\u4e8e waiting \u72b6\u6001\u7684\u7ebf\u7a0b\u6807\u8bb0\u4e3a runnable. A2\uff1a \u540c\u6b65\u3001\u5f02\u6b65\u3001\u963b\u585e\u3001\u975e\u963b\u585e\uff0c\u662f\u52063\u4e2a\u5c42\u6b21\u7684\uff1a CPU\u5c42\u6b21\uff1b \u7ebf\u7a0b\u5c42\u6b21\uff1b \u7a0b\u5e8f\u5458\u611f\u77e5\u5c42\u6b21\u3002 \u8fd9\u51e0\u4e2a\u6982\u5ff5\u4e4b\u6240\u4ee5\u5bb9\u6613\u6df7\u6dc6\uff0c\u662f\u56e0\u4e3a\u6ca1\u6709\u5206\u6e05\u695a\u662f\u5728\u54ea\u4e2a\u5c42\u6b21\u8fdb\u884c\u8ba8\u8bba\u3002 CPU\u5c42\u6b21 \u5728CPU\u5c42\u6b21\uff0c\u6216\u8005\u8bf4\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u884cIO\u548c\u4efb\u52a1\u8c03\u5ea6\u7684\u5c42\u6b21\uff0c\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u901a\u5e38\u4f7f\u7528\u5f02\u6b65\u975e\u963b\u585e\u65b9\u5f0f\u8fdb\u884cIO\uff08\u6709\u5c11\u90e8\u5206IO\u53ef\u80fd\u4f1a\u4f7f\u7528\u540c\u6b65\u975e\u963b\u585e\u8f6e\u8be2\uff09\uff0c\u5373\u53d1\u51faIO\u8bf7\u6c42\u4e4b\u540e\uff0c\u5e76\u4e0d\u7b49\u5f85IO\u64cd\u4f5c\u5b8c\u6210\uff0c\u800c\u662f\u7ee7\u7eed\u6267\u884c\u4e0b\u9762\u7684\u6307\u4ee4\uff08\u975e\u963b\u585e\uff09\uff0cIO\u64cd\u4f5c\u548cCPU\u6307\u4ee4\u4e92\u4e0d\u5e72\u6270\uff08\u5f02\u6b65\uff09\uff0c\u6700\u540e\u901a\u8fc7\u4e2d\u65ad\u7684\u65b9\u5f0f\u6765\u901a\u77e5IO\u64cd\u4f5c\u5b8c\u6210\u7ed3\u679c\u3002 \u7ebf\u7a0b\u5c42\u6b21 \u5728\u7ebf\u7a0b\u5c42\u6b21\uff0c\u6216\u8005\u8bf4\u64cd\u4f5c\u7cfb\u7edf\u8c03\u5ea6\u5355\u5143\u7684\u5c42\u6b21\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4e3a\u4e86\u51cf\u8f7b\u7a0b\u5e8f\u5458\u7684\u601d\u8003\u8d1f\u62c5\uff0c\u5c06\u5e95\u5c42\u7684\u5f02\u6b65\u975e\u963b\u585e\u7684IO\u65b9\u5f0f\u8fdb\u884c\u5c01\u88c5\uff0c\u628a\u76f8\u5173\u7cfb\u7edf\u8c03\u7528\uff08\u5982read\uff0cwrite\u7b49\uff09\u4ee5\u540c\u6b65\u7684\u65b9\u5f0f\u5c55\u73b0\u51fa\u6765\u3002\u7136\u800c\uff0c\u540c\u6b65\u963b\u585e\u7684IO\u4f1a\u4f7f\u7ebf\u7a0b\u6302\u8d77\uff0c\u540c\u6b65\u975e\u963b\u585e\u7684IO\u4f1a\u6d88\u8017CPU\u8d44\u6e90\u5728\u8f6e\u8be2\u4e0a\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\uff0c\u5c31\u67093\u79cd\u601d\u8def\uff1a \u591a\u7ebf\u7a0b\uff08\u540c\u6b65\u963b\u585e\uff09\uff1b IO\u591a\u8def\u590d\u7528\uff08select\uff0cpoll\uff0cepoll\uff09\uff08\u540c\u6b65\u975e\u963b\u585e\uff0c\u4e25\u683c\u5730\u6765\u8bb2\uff0c\u662f\u628a\u963b\u585e\u70b9\u6539\u53d8\u4e86\u4f4d\u7f6e\uff09\uff1b \u76f4\u63a5\u66b4\u9732\u51fa\u5f02\u6b65\u7684IO\u63a5\u53e3\uff0c\u5982kernel-aio\u548cIOCP\uff08\u5f02\u6b65\u975e\u963b\u585e\uff09\u3002 \u7a0b\u5e8f\u5458\u611f\u77e5\u5c42\u6b21 \u5728Linux\u4e2d\uff0c\u4e0a\u9762\u63d0\u5230\u7684\u7b2c2\u79cd\u601d\u8def\u7528\u5f97\u6bd4\u8f83\u5e7f\u6cdb\uff0c\u4e5f\u662f\u6bd4\u8f83\u7406\u60f3\u7684\u89e3\u51b3\u65b9\u6848\u3002\u7136\u800c\uff0c\u76f4\u63a5\u4f7f\u7528select\u4e4b\u7c7b\u7684\u63a5\u53e3\uff0c\u4f9d\u7136\u6bd4\u8f83\u590d\u6742\uff0c\u6240\u4ee5\u5404\u79cd\u5e93\u548c\u6846\u67b6\u767e\u82b1\u9f50\u653e\uff0c\u90fd\u8bd5\u56fe\u5bf9IO\u591a\u8def\u590d\u7528\u8fdb\u884c\u5c01\u88c5\u3002\u6b64\u65f6\uff0c\u5e93\u548c\u6846\u67b6\u63d0\u4f9b\u7684API\u53c8\u53ef\u4ee5\u9009\u62e9\u662f\u4ee5\u540c\u6b65\u7684 \u65b9\u5f0f \u8fd8\u662f\u5f02\u6b65\u7684 \u65b9\u5f0f \u6765\u5c55\u73b0\u3002\u5982python\u7684asyncio\u5e93\u4e2d\uff0c\u5c31\u901a\u8fc7\u534f\u7a0b\uff0c\u63d0\u4f9b\u4e86\u540c\u6b65\u963b\u585e\u5f0f\u7684API\uff1b\u5982node.js\u4e2d\uff0c\u5c31\u901a\u8fc7\u56de\u8c03\u51fd\u6570\uff0c\u63d0\u4f9b\u4e86\u5f02\u6b65\u975e\u963b\u585e\u5f0f\u7684API\u3002 A3\uff1a Reference https://www.zhihu.com/question/19732473","title":"\u600e\u4e48\u7406\u89e3\u963b\u585e\u975e\u963b\u585e\u4e0e\u540c\u6b65\u5f02\u6b65"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84OS%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/%E6%80%8E%E4%B9%88%E7%90%86%E8%A7%A3%E9%98%BB%E5%A1%9E%E9%9D%9E%E9%98%BB%E5%A1%9E%E4%B8%8E%E5%90%8C%E6%AD%A5%E5%BC%82%E6%AD%A5/#a1","text":"","title":"A1\uff1a"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84OS%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/%E6%80%8E%E4%B9%88%E7%90%86%E8%A7%A3%E9%98%BB%E5%A1%9E%E9%9D%9E%E9%98%BB%E5%A1%9E%E4%B8%8E%E5%90%8C%E6%AD%A5%E5%BC%82%E6%AD%A5/#iocpu","text":"IO\u5bc6\u96c6\u578b\u4efb\u52a1\u3002\u7f51\u7edc\u722c\u866b\u5c31\u662f\u4e00\u4e2a\u975e\u5e38\u5178\u578b\u7684\u4f8b\u5b50\uff0c\u722c\u866b\u5728\u5411\u670d\u52a1\u5668\u53d1\u8d77\u8bf7\u6c42\u4e4b\u540e\uff0c\u6709\u4e00\u6bb5\u65f6\u95f4\u5fc5\u987b\u8981\u7b49\u5f85\u670d\u52a1\u5668\u7684\u54cd\u5e94\u8fd4\u56de\uff0c\u8fd9\u79cd\u4efb\u52a1\u5c31\u5c5e\u4e8e IO \u5bc6\u96c6\u578b\u4efb\u52a1\u3002\u5bf9\u4e8e\u8fd9\u79cd\u4efb\u52a1\uff0c\u5982\u679c\u6211\u4eec\u542f\u7528\u591a\u7ebf\u7a0b\uff0c\u5904\u7406\u5668\u5c31\u53ef\u4ee5\u5728\u67d0\u4e2a\u7ebf\u7a0b\u7b49\u5f85\u7684\u8fc7\u7a0b\u4e2d\u53bb\u5904\u7406\u5176\u4ed6\u7684\u4efb\u52a1\uff0c\u4ece\u800c\u63d0\u9ad8\u6574\u4f53\u7684\u722c\u53d6\u6548\u7387\u3002 CPU \u5bc6\u96c6\u578b\u4efb\u52a1\u3002\u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u4efb\u52a1\u7684\u8fd0\u884c\u4e00\u76f4\u9700\u8981\u5904\u7406\u5668\u7684\u53c2\u4e0e\u3002\u6b64\u65f6\u5982\u679c\u6211\u4eec\u5f00\u542f\u4e86\u591a\u7ebf\u7a0b\uff0c\u4e00\u4e2a\u5904\u7406\u5668\u4ece\u4e00\u4e2a\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u5207\u6362\u5230\u5207\u6362\u5230\u53e6\u4e00\u4e2a\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u4e0a\u53bb\uff0c\u5904\u7406\u5668\u4f9d\u7136\u4e0d\u4f1a\u505c\u4e0b\u6765\uff0c\u59cb\u7ec8\u4f1a\u5fd9\u4e8e\u8ba1\u7b97\uff0c\u8fd9\u6837\u5e76\u4e0d\u4f1a\u8282\u7701\u603b\u4f53\u7684\u65f6\u95f4\uff0c\u56e0\u4e3a\u9700\u8981\u5904\u7406\u7684\u4efb\u52a1\u7684\u8ba1\u7b97\u603b\u91cf\u662f\u4e0d\u53d8\u7684\u3002\u5982\u679c\u7ebf\u7a0b\u6570\u76ee\u8fc7\u591a\uff0c\u53cd\u800c\u8fd8\u4f1a\u5728\u7ebf\u7a0b\u5207\u6362\u7684\u8fc7\u7a0b\u4e2d\u591a\u8017\u8d39\u4e00\u4e9b\u65f6\u95f4\uff0c\u6574\u4f53\u6548\u7387\u4f1a\u53d8\u4f4e\u3002","title":"IO\u5bc6\u96c6\u578b\u548cCPU\u5bc6\u96c6\u578b"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84OS%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/%E6%80%8E%E4%B9%88%E7%90%86%E8%A7%A3%E9%98%BB%E5%A1%9E%E9%9D%9E%E9%98%BB%E5%A1%9E%E4%B8%8E%E5%90%8C%E6%AD%A5%E5%BC%82%E6%AD%A5/#_1","text":"\u963b\u585e\u548c\u975e\u963b\u585e\u5173\u6ce8\u7684\u662f\u7a0b\u5e8f\u5728\u7b49\u5f85\u8c03\u7528\u7ed3\u679c\uff08\u6d88\u606f\u3001\u8fd4\u56de\u503c\uff09\u65f6\u7684\u72b6\u6001\u3002 \u963b\u585e\u65f6\uff0c\u5728\u8c03\u7528\u7ed3\u679c\u8fd4\u56de\u524d\uff0c\u5f53\u524d\u7ebf\u7a0b\u4f1a\u88ab\u6302\u8d77\uff0c\u5e76\u5728\u5f97\u5230\u7ed3\u679c\u4e4b\u540e\u8fd4\u56de\u3002 \u975e\u963b\u585e\u65f6\uff0c\u5982\u679c\u4e0d\u80fd\u7acb\u523b\u5f97\u5230\u7ed3\u679c\uff0c\u5219\u8be5\u8c03\u7528\u8005\u4e0d\u4f1a\u963b\u585e\u5f53\u524d\u7ebf\u7a0b\u3002\u56e0\u6b64\u5bf9\u5e94\u975e\u963b\u585e\u7684\u60c5\u51b5\uff0c\u8c03\u7528\u8005\u9700\u8981\u5b9a\u65f6\u8f6e\u8be2\u67e5\u770b\u5904\u7406\u72b6\u6001\u3002","title":"\u963b\u585e\u548c\u975e\u963b\u585e"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84OS%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/%E6%80%8E%E4%B9%88%E7%90%86%E8%A7%A3%E9%98%BB%E5%A1%9E%E9%9D%9E%E9%98%BB%E5%A1%9E%E4%B8%8E%E5%90%8C%E6%AD%A5%E5%BC%82%E6%AD%A5/#_2","text":"\u540c\u6b65\u548c\u5f02\u6b65\u5173\u6ce8\u7684\u662f\u6d88\u606f\u901a\u77e5\u673a\u5236\u3002 \u540c\u6b65\uff0c\u662f\u5728\u53d1\u51fa\u4e00\u4e2a\u8c03\u7528\u65f6\uff0c\u5728\u6ca1\u6709\u5f97\u5230\u7ed3\u679c\u4e4b\u524d\u8be5\u8c03\u7528\u4e0d\u8fd4\u56de\u3002\u4e00\u65e6\u8be5\u8c03\u7528\u8fd4\u56de\uff0c\u5c31\u8868\u793a\u5f97\u5230\u8fd4\u56de\u503c\u4e86\u3002 \u5f02\u6b65\uff0c\u662f\u5728\u8c03\u7528\u53d1\u51fa\u4e4b\u540e\uff0c\u8be5\u8c03\u7528\u5c31\u76f4\u63a5\u8fd4\u56de\u4e86\uff0c\u6240\u4ee5\u6ca1\u6709\u8fd4\u56de\u7ed3\u679c\u3002\u5f53\u4e00\u4e2a\u5f02\u6b65\u8fc7\u7a0b\u8c03\u7528\u53d1\u51fa\u540e\uff0c\u8c03\u7528\u8005\u4e0d\u4f1a\u7acb\u523b\u5f97\u5230\u7ed3\u679c\uff0c\u800c\u662f\u5728\u8c03\u7528\u53d1\u51fa\u540e\uff0c\u88ab\u8c03\u7528\u8005\u901a\u8fc7\u72b6\u6001\u3001\u901a\u77e5\u6765\u901a\u77e5\u8c03\u7528\u8005\uff0c\u6216\u8005\u901a\u8fc7\u56de\u8c03\u51fd\u6570\u5904\u7406\u8fd9\u4e2a\u8c03\u7528\u3002","title":"\u540c\u6b65\u548c\u5f02\u6b65"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84OS%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/%E6%80%8E%E4%B9%88%E7%90%86%E8%A7%A3%E9%98%BB%E5%A1%9E%E9%9D%9E%E9%98%BB%E5%A1%9E%E4%B8%8E%E5%90%8C%E6%AD%A5%E5%BC%82%E6%AD%A5/#_3","text":"\u5728\u8fdb\u7a0b\u901a\u4fe1\u5c42\u9762\uff0c \u963b\u585e/\u975e\u963b\u585e\uff0c \u540c\u6b65/\u5f02\u6b65\u57fa\u672c\u662f\u540c\u4e49\u8bcd\uff0c \u4f46\u662f\u9700\u8981\u6ce8\u610f\u533a\u5206\u8ba8\u8bba\u7684\u5bf9\u8c61\u662f\u53d1\u9001\u65b9\u8fd8\u662f\u63a5\u6536\u65b9\u3002 \u53d1\u9001\u65b9\u963b\u585e/\u975e\u963b\u585e\uff08\u540c\u6b65/\u5f02\u6b65\uff09\u548c\u63a5\u6536\u65b9\u7684\u963b\u585e/\u975e\u963b\u585e\uff08\u540c\u6b65/\u5f02\u6b65\uff09 \u662f\u4e92\u4e0d\u5f71\u54cd\u7684\u3002 \u5728 IO \u7cfb\u7edf\u8c03\u7528\u5c42\u9762\uff08 IO system call \uff09\u5c42\u9762\uff0c \u975e\u963b\u585e IO \u7cfb\u7edf\u8c03\u7528 \u548c \u5f02\u6b65 IO \u7cfb\u7edf\u8c03\u7528 \u5b58\u5728\u7740\u4e00\u5b9a\u7684\u5dee\u522b\uff0c \u5b83\u4eec\u90fd\u4e0d\u4f1a\u963b\u585e\u8fdb\u7a0b\uff0c \u4f46\u662f\u8fd4\u56de\u7ed3\u679c\u7684\u65b9\u5f0f\u548c\u5185\u5bb9\u6709\u6240\u5dee\u522b\uff0c \u4f46\u662f\u90fd\u5c5e\u4e8e\u975e\u963b\u585e\u7cfb\u7edf\u8c03\u7528\uff08 non-blocing system call \uff09 \u975e\u963b\u585e\u7cfb\u7edf\u8c03\u7528\uff08non-blocking I/O system call \u4e0e asynchronous I/O system call\uff09 \u7684\u5b58\u5728\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0\u7ebf\u7a0b\u7ea7\u522b\u7684 I/O \u5e76\u53d1\uff0c \u4e0e\u901a\u8fc7\u591a\u8fdb\u7a0b\u5b9e\u73b0\u7684 I/O \u5e76\u53d1\u76f8\u6bd4\u53ef\u4ee5\u51cf\u5c11\u5185\u5b58\u6d88\u8017\u4ee5\u53ca\u8fdb\u7a0b\u5207\u6362\u7684\u5f00\u9500\u3002","title":"\u5c0f\u7ed3\uff1a"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84OS%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/%E6%80%8E%E4%B9%88%E7%90%86%E8%A7%A3%E9%98%BB%E5%A1%9E%E9%9D%9E%E9%98%BB%E5%A1%9E%E4%B8%8E%E5%90%8C%E6%AD%A5%E5%BC%82%E6%AD%A5/#_4","text":"\u963b\u585e\u5f0f\u53d1\u9001\uff08blocking send\uff09. \u53d1\u9001\u65b9\u8fdb\u7a0b\u4f1a\u88ab\u4e00\u76f4\u963b\u585e\uff0c \u76f4\u5230\u6d88\u606f\u88ab\u63a5\u53d7\u65b9\u8fdb\u7a0b\u6536\u5230\u3002 \u975e\u963b\u585e\u5f0f\u53d1\u9001\uff08nonblocking send\uff09\u3002 \u53d1\u9001\u65b9\u8fdb\u7a0b\u8c03\u7528 send() \u540e\uff0c \u7acb\u5373\u5c31\u53ef\u4ee5\u5176\u4ed6\u64cd\u4f5c\u3002 \u963b\u585e\u5f0f\u63a5\u6536\uff08blocking receive\uff09 \u63a5\u6536\u65b9\u8c03\u7528 receive() \u540e\u4e00\u76f4\u963b\u585e\uff0c \u76f4\u5230\u6d88\u606f\u5230\u8fbe\u53ef\u7528\u3002 \u975e\u963b\u585e\u5f0f\u63a5\u53d7\uff08nonblocking receive\uff09 \u63a5\u6536\u65b9\u8c03\u7528 receive() \u51fd\u6570\u540e\uff0c \u8981\u4e48\u5f97\u5230\u4e00\u4e2a\u6709\u6548\u7684\u7ed3\u679c\uff0c \u8981\u4e48\u5f97\u5230\u4e00\u4e2a\u7a7a\u503c\uff0c \u5373\u4e0d\u4f1a\u88ab\u963b\u585e\u3002 \u4e0a\u8ff0\u4e0d\u540c\u7c7b\u578b\u7684\u53d1\u9001\u65b9\u5f0f\u548c\u4e0d\u540c\u7c7b\u578b\u7684\u63a5\u6536\u65b9\u5f0f\uff0c\u53ef\u4ee5\u81ea\u7531\u7ec4\u5408\u3002 \u4e5f\u5c31\u662f\u8bf4\uff0c \u4ece\u8fdb\u7a0b\u7ea7\u901a\u4fe1\u7684\u7ef4\u5ea6\u8ba8\u8bba\u65f6\uff0c \u963b\u585e\u548c\u540c\u6b65\uff08\u975e\u963b\u585e\u548c\u5f02\u6b65\uff09\u5c31\u662f\u4e00\u5bf9\u540c\u4e49\u8bcd\uff0c \u4e14\u9700\u8981\u9488\u5bf9 \u53d1\u9001\u65b9 \u548c \u63a5\u6536\u65b9 \u4f5c\u533a\u5206\u5bf9\u5f85\u3002","title":"\u8fdb\u7a0b\u95f4\u901a\u4fe1\u7684\u540c\u6b65/\u5f02\u6b65\uff0c\u963b\u585e/\u975e\u963b\u585e"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84OS%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/%E6%80%8E%E4%B9%88%E7%90%86%E8%A7%A3%E9%98%BB%E5%A1%9E%E9%9D%9E%E9%98%BB%E5%A1%9E%E4%B8%8E%E5%90%8C%E6%AD%A5%E5%BC%82%E6%AD%A5/#_5","text":"New. \u8fdb\u7a0b\u6b63\u5728\u88ab\u521b\u5efa. Running. \u8fdb\u7a0b\u7684\u6307\u4ee4\u6b63\u5728\u88ab\u6267\u884c Waiting. \u8fdb\u7a0b\u6b63\u5728\u7b49\u5f85\u4e00\u4e9b\u4e8b\u4ef6\u7684\u53d1\u751f\uff08\u4f8b\u5982 I/O \u7684\u5b8c\u6210\u6216\u8005\u6536\u5230\u67d0\u4e2a\u4fe1\u53f7\uff09 Ready. \u8fdb\u7a0b\u5728\u7b49\u5f85\u88ab\u64cd\u4f5c\u7cfb\u7edf\u8c03\u5ea6 Terminated. \u8fdb\u7a0b\u6267\u884c\u5b8c\u6bd5\uff08\u53ef\u80fd\u662f\u88ab\u5f3a\u884c\u7ec8\u6b62\u7684\uff09 \u6211\u4eec\u6240\u8bf4\u7684 \u201c\u963b\u585e\u201d\u662f\u6307\u8fdb\u7a0b\u5728 \u53d1\u8d77\u4e86\u4e00\u4e2a\u7cfb\u7edf\u8c03\u7528 \uff08System Call\uff09 \u540e\uff0c \u7531\u4e8e\u8be5\u7cfb\u7edf\u8c03\u7528\u7684\u64cd\u4f5c\u4e0d\u80fd\u7acb\u5373\u5b8c\u6210\uff0c\u9700\u8981\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4\uff0c\u4e8e\u662f\u5185\u6838\u5c06\u8fdb\u7a0b\u6302\u8d77\u4e3a \u7b49\u5f85 \uff08waiting\uff09 \u72b6\u6001\uff0c \u4ee5\u786e\u4fdd\u5b83\u4e0d\u4f1a\u88ab\u8c03\u5ea6\u6267\u884c\uff0c \u5360\u7528 CPU \u8d44\u6e90\u3002 \u53cb\u60c5\u63d0\u793a\uff1a \u5728\u4efb\u610f\u65f6\u523b\uff0c \u4e00\u4e2a CPU \u6838\u5fc3\u4e0a\uff08processor\uff09\u53ea\u53ef\u80fd\u8fd0\u884c\u4e00\u4e2a\u8fdb\u7a0b","title":"\u8fdb\u7a0b\u963b\u585e"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84OS%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/%E6%80%8E%E4%B9%88%E7%90%86%E8%A7%A3%E9%98%BB%E5%A1%9E%E9%9D%9E%E9%98%BB%E5%A1%9E%E4%B8%8E%E5%90%8C%E6%AD%A5%E5%BC%82%E6%AD%A5/#io-system-call","text":"\u963b\u585e \u8fd9\u4e2a\u8bcd\u662f\u4e0e\u7cfb\u7edf\u8c03\u7528 System Call \u7d27\u7d27\u8054\u7cfb\u5728\u4e00\u8d77\u7684\uff0c \u56e0\u4e3a\u8981\u8ba9\u4e00\u4e2a\u8fdb\u7a0b\u8fdb\u5165 \u7b49\u5f85\uff08waiting\uff09 \u7684\u72b6\u6001, \u8981\u4e48\u662f\u5b83\u4e3b\u52a8\u8c03\u7528 wait() \u6216 sleep() \u7b49\u6302\u8d77\u81ea\u5df1\u7684\u64cd\u4f5c\uff0c \u53e6\u4e00\u79cd\u5c31\u662f\u5b83\u8c03\u7528 System Call, \u800c System Call \u56e0\u4e3a\u6d89\u53ca\u5230\u4e86 I/O \u64cd\u4f5c\uff0c \u4e0d\u80fd\u7acb\u5373\u5b8c\u6210\uff0c \u4e8e\u662f\u5185\u6838\u5c31\u4f1a\u5148\u5c06\u8be5\u8fdb\u7a0b\u7f6e\u4e3a\u7b49\u5f85\u72b6\u6001\uff0c \u8c03\u5ea6\u5176\u4ed6\u8fdb\u7a0b\u7684\u8fd0\u884c\uff0c \u7b49\u5230 \u5b83\u6240\u8bf7\u6c42\u7684 I/O \u64cd\u4f5c\u5b8c\u6210\u4e86\u4ee5\u540e\uff0c \u518d\u5c06\u5176\u72b6\u6001\u66f4\u6539\u56de ready \u3002 \u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u5728\u6267\u884c System Call \u65f6\uff0c CPU \u9700\u8981\u4e0e IO \u8bbe\u5907\u5b8c\u6210\u4e00\u7cfb\u5217\u7269\u7406\u901a\u4fe1\u4e0a\u7684\u4ea4\u4e92\uff0c \u5176\u5b9e\u518d\u4e00\u6b21\u4f1a\u6d89\u53ca\u5230\u963b\u585e\u548c\u975e\u963b\u585e\u7684\u95ee\u9898\uff0c \u4f8b\u5982\uff0c \u64cd\u4f5c\u7cfb\u7edf\u53d1\u8d77\u4e86\u4e00\u4e2a\u8bfb\u786c\u76d8\u7684\u8bf7\u6c42\u540e\uff0c \u5176\u5b9e\u662f\u5411\u786c\u76d8\u8bbe\u5907\u901a\u8fc7\u603b\u7ebf\u53d1\u51fa\u4e86\u4e00\u4e2a\u8bf7\u6c42\uff0c\u5b83\u5373\u53ef\u4ee5\u963b\u585e\u5f0f\u5730\u7b49\u5f85IO \u8bbe\u5907\u7684\u8fd4\u56de\u7ed3\u679c\uff0c\u4e5f\u53ef\u4ee5\u975e\u963b\u585e\u5f0f\u7684\u7ee7\u7eed\u5176\u4ed6\u7684\u64cd\u4f5c\u3002 \u5728\u73b0\u4ee3\u8ba1\u7b97\u673a\u4e2d\uff0c\u8fd9\u4e9b\u7269\u7406\u901a\u4fe1\u64cd\u4f5c\u57fa\u672c\u90fd\u662f\u5f02\u6b65\u5b8c\u6210\u7684\uff0c \u5373\u53d1\u51fa\u8bf7\u6c42\u540e\uff0c \u7b49\u5f85 I/O \u8bbe\u5907\u7684\u4e2d\u65ad\u4fe1\u53f7\u540e\uff0c \u518d\u6765\u8bfb\u53d6\u76f8\u5e94\u7684\u8bbe\u5907\u7f13\u51b2\u533a\u3002 \u4f46\u662f\uff0c\u5927\u90e8\u5206\u64cd\u4f5c\u7cfb\u7edf\u9ed8\u8ba4\u4e3a\u7528\u6237\u7ea7\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u7684\u90fd\u662f \u963b\u585e\u5f0f \u7684\u7cfb\u7edf\u8c03\u7528 \uff08blocking systemcall\uff09\u63a5\u53e3\uff0c \u56e0\u4e3a\u963b\u585e\u5f0f\u7684\u8c03\u7528\uff0c\u4f7f\u5f97\u5e94\u7528\u7ea7\u4ee3\u7801\u7684\u7f16\u5199\u66f4\u5bb9\u6613\uff08\u4ee3\u7801\u7684\u6267\u884c\u987a\u5e8f\u548c\u7f16\u5199\u987a\u5e8f\u662f\u4e00\u81f4\u7684\uff09\u3002 \u4f46\u540c\u6837\uff0c \u73b0\u5728\u7684\u5927\u90e8\u5206\u64cd\u4f5c\u7cfb\u7edf\u4e5f\u4f1a\u63d0\u4f9b \u975e\u963b\u585e I/O \u7cfb\u7edf\u8c03\u7528\u63a5\u53e3\uff08Nonblocking I/O system call\uff09\u3002 \u4e00\u4e2a\u975e\u963b\u585e\u8c03\u7528\u4e0d\u4f1a\u6302\u8d77\u8c03\u7528\u7a0b\u5e8f\uff0c \u800c\u662f\u4f1a\u7acb\u5373\u8fd4\u56de\u4e00\u4e2a\u503c\uff0c \u8868\u793a\u6709\u591a\u5c11bytes \u7684\u6570\u636e\u88ab\u6210\u529f\u8bfb\u53d6\uff08\u6216\u5199\u5165\uff09\u3002 \u975e\u963b\u585eI/O \u7cfb\u7edf\u8c03\u7528 ( nonblocking system call )\u7684\u53e6\u4e00\u4e2a\u66ff\u4ee3\u54c1\u662f \u5f02\u6b65I/O\u7cfb\u7edf\u8c03\u7528 \uff08asychronous system call\uff09 \u3002 \u4e0e\u975e\u963b\u585e I/O \u7cfb\u7edf\u8c03\u7528\u7c7b\u4f3c\uff0casychronous system call \u4e5f\u662f\u4f1a\u7acb\u5373\u8fd4\u56de\uff0c \u4e0d\u4f1a\u7b49\u5f85 I/O \u64cd\u4f5c\u7684\u5b8c\u6210\uff0c \u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\u5176\u4ed6\u7684\u64cd\u4f5c\uff0c \u7b49\u5230 I/O \u64cd\u4f5c\u5b8c\u6210\u4e86\u4ee5\u540e\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u901a\u77e5\u8c03\u7528\u8fdb\u7a0b\uff08\u8bbe\u7f6e\u4e00\u4e2a\u7528\u6237\u7a7a\u95f4\u7279\u6b8a\u7684\u53d8\u91cf\u503c \u6216\u8005 \u89e6\u53d1\u4e00\u4e2a signal \u6216\u8005 \u4ea7\u751f\u4e00\u4e2a\u8f6f\u4e2d\u65ad \u6216\u8005 \u8c03\u7528\u5e94\u7528\u7a0b\u5e8f\u7684\u56de\u8c03\u51fd\u6570\uff09\u3002 \u6b64\u5904\uff0c \u975e\u963b\u585eI/O \u7cfb\u7edf\u8c03\u7528( nonblocking system call ) \u548c \u5f02\u6b65I/O\u7cfb\u7edf\u8c03\u7528 \uff08asychronous system call\uff09 \u7684\u533a\u522b\u662f\uff1a \u4e00\u4e2a \u975e\u963b\u585eI/O \u7cfb\u7edf\u8c03\u7528 read() \u64cd\u4f5c\u7acb\u5373\u8fd4\u56de\u7684\u662f\u4efb\u4f55\u53ef\u4ee5\u7acb\u5373\u62ff\u5230\u7684\u6570\u636e\uff0c \u53ef\u4ee5\u662f\u5b8c\u6574\u7684\u7ed3\u679c\uff0c \u4e5f\u53ef\u4ee5\u662f\u4e0d\u5b8c\u6574\u7684\u7ed3\u679c\uff0c \u8fd8\u53ef\u4ee5\u662f\u4e00\u4e2a\u7a7a\u503c\u3002 \u800c \u5f02\u6b65I/O\u7cfb\u7edf\u8c03\u7528 read\uff08\uff09\u7ed3\u679c\u5fc5\u987b\u662f\u5b8c\u6574\u7684\uff0c \u4f46\u662f\u8fd9\u4e2a\u64cd\u4f5c\u5b8c\u6210\u7684\u901a\u77e5\u53ef\u4ee5\u5ef6\u8fdf\u5230\u5c06\u6765\u7684\u4e00\u4e2a\u65f6\u95f4\u70b9\u3002","title":"IO System Call\u7684\u963b\u585e\u975e\u963b\u585e\uff0c\u540c\u6b65\u5f02\u6b65"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84OS%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/%E6%80%8E%E4%B9%88%E7%90%86%E8%A7%A3%E9%98%BB%E5%A1%9E%E9%9D%9E%E9%98%BB%E5%A1%9E%E4%B8%8E%E5%90%8C%E6%AD%A5%E5%BC%82%E6%AD%A5/#io","text":"\u5355\u8fdb\u7a0b \u670d\u52a1\u5668\u7a0b\u5e8f\uff0c \u6536\u5230\u4e00\u4e2a Socket \u8fde\u63a5\u8bf7\u6c42\u540e\uff0c \u8bfb\u53d6\u8bf7\u6c42\u4e2d\u7684\u6587\u4ef6\u540d\uff0c\u7136\u540e\u8bfb\u8bf7\u6c42\u7684\u6587\u4ef6\u540d\u5185\u5bb9\uff0c\u5c06\u6587\u4ef6\u5185\u5bb9\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u3002 \u90a3\u4e48\u4e00\u4e2a\u8bf7\u6c42\u7684\u5904\u7406\u6d41\u7a0b\u4f1a\u5982\u56fe\u6240\u793a\u3002 CPU\u548c\u786c\u76d8IO\u5927\u90e8\u5206\u662f\u95f2\u7f6e\u7684 \u65b9\u6848\u4e00\uff1a \u591a\u8fdb\u7a0b \u6bcf\u5230\u8fbe\u4e00\u4e2a\u8bf7\u6c42\uff0c \u6211\u4eec\u4e3a\u8fd9\u4e2a\u8bf7\u6c42\u65b0\u521b\u5efa\u4e00\u4e2a\u8fdb\u7a0b\u6765\u5904\u7406\u3002 \u8fd9\u6837\uff0c \u4e00\u4e2a\u8fdb\u7a0b\u5728\u7b49\u5f85 IO \u65f6\uff0c \u5176\u4ed6\u7684\u8fdb\u7a0b\u53ef\u4ee5\u88ab\u8c03\u5ea6\u6267\u884c\uff0c \u66f4\u52a0\u5145\u5206\u5730\u5229\u7528 CPU \u7b49\u8d44\u6e90\u3002 \u95ee\u9898\uff1a \u6bcf\u65b0\u521b\u5efa\u4e00\u4e2a\u8fdb\u7a0b\u90fd\u4f1a\u6d88\u8017\u4e00\u5b9a\u7684\u5185\u5b58\u7a7a\u95f4\uff0c \u4e14\u8fdb\u7a0b\u5207\u6362\u4e5f\u4f1a\u6709\u65f6\u95f4\u6d88\u8017\uff0c \u9ad8\u5e76\u53d1\u65f6\uff0c \u5927\u91cf\u8fdb\u7a0b\u6765\u56de\u5207\u6362\u7684\u65f6\u95f4\u5f00\u9500\u4f1a\u53d8\u5f97\u660e\u663e\u8d77\u6765\u3002 \u65b9\u6848\u4e8c\uff1a\u591a\u7ebf\u7a0b \u548c\u591a\u8fdb\u7a0b\u65b9\u6848\u7c7b\u4f3c\uff0c\u4e3a\u6bcf\u4e00\u4e2a\u8bf7\u6c42\u65b0\u5efa\u4e00\u4e2a\u7ebf\u7a0b\u8fdb\u884c\u5904\u7406\uff0c\u8fd9\u6837\u505a\u7684\u91cd\u8981\u533a\u522b\u662f\uff0c \u6240\u6709\u7684\u7ebf\u7a0b\u90fd\u5171\u4eab\u540c\u4e00\u4e2a\u8fdb\u7a0b\u7a7a\u95f4 \u95ee\u9898\uff1a \u9700\u8981\u8003\u8651\u662f\u5426\u9700\u8981\u4e3a\u7279\u5b9a\u7684\u903b\u8f91\u4f7f\u7528\u9501\u3002 \u5f15\u7533\u95ee\u9898\uff1a \u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u7684\u67d0\u4e00\u4e2a\u7ebf\u7a0b\u53d1\u8d77\u4e86 system call \u540e\uff0c \u662f\u5426\u9020\u6210\u6574\u4e2a\u8fdb\u7a0b\u7684\u963b\u585e\uff1f \u5982\u679c\u4f1a\uff0c \u90a3\u4e48\u591a\u7ebf\u7a0b\u65b9\u6848\u4e0e\u5355\u8fdb\u7a0b\u65b9\u6848\u76f8\u6bd4\u5c31\u6ca1\u6709\u660e\u663e\u7684\u6539\u5584\u3002 \u89e3\u51b3\u529e\u6cd51\uff1a\u5185\u6838\u652f\u6301\u7684\u7ebf\u7a0b\uff08kenerl supported threads\uff09 \u5185\u6838\u7ea7\u7ebf\u7a0b \u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u80fd\u591f\u611f\u77e5\u5230\u7ebf\u7a0b\uff0c \u6bcf\u4e00\u4e2a\u7ebf\u7a0b\u90fd\u4f1a\u6709\u4e00\u4e2a\u5185\u6838\u8c03\u7528\u6808\uff08kenerl stack\uff09 \u548c \u4fdd\u5b58CPU \u5bc4\u5b58\u5668\u4e0b\u6587\u7684 table \u3002 \u95ee\u9898\uff1a \u5185\u6838\u652f\u6301\u7ebf\u7a0b\u53ef\u79fb\u690d\u6027\u5dee\uff0c \u5176\u5b9e\u73b0\u5bf9\u4e8e\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u800c\u8a00\u6709\u6240\u5dee\u522b\u3002 \u89e3\u51b3\u529e\u6cd52\uff1a \u7528\u6237\u652f\u6301\u7684\u7ebf\u7a0b\uff08user supported threads\uff09 \u7528\u6237\u7ea7\u7ebf\u7a0b \u5185\u6838\u611f\u77e5\u4e0d\u5230\u7528\u6237\u7ebf\u7a0b\uff0c \u6bcf\u4e00\u4e2a\u7528\u6237\u7684\u8fdb\u7a0b\u62e5\u6709\u4e00\u4e2a\u8c03\u5ea6\u5668\uff0c \u8be5\u8c03\u5ea6\u5668\u53ef\u4ee5\u611f\u77e5\u5230\u7ebf\u7a0b\u53d1\u8d77\u7684\u7cfb\u7edf\u8c03\u7528\uff0c \u5f53\u4e00\u4e2a\u7ebf\u7a0b\u4ea7\u751f\u7cfb\u7edf\u8c03\u7528\u65f6\uff0c \u4e0d\u963b\u585e\u6574\u4e2a\u8fdb\u7a0b\uff0c \u5207\u6362\u5230\u5176\u4ed6\u7ebf\u7a0b\u7ee7\u7eed\u8fd0\u884c\u3002 \u5f53 I/O \u8c03\u7528\u5b8c\u6210\u4ee5\u540e\uff0c \u80fd\u591f\u91cd\u65b0\u5524\u9192\u88ab\u963b\u585e\u7684\u7ebf\u7a0b\u3002\u5b9e\u73b0\u7ec6\u8282\uff1a \u5e94\u7528\u7a0b\u5e8f\u57fa\u4e8e\u7ebf\u7a0b\u5e93 thread libray \u7f16\u5199 \u7ebf\u7a0b\u5e93\u4e2d\u5305\u542b \u201c\u865a\u5047\u7684\u201d read(), write(), accept()\u7b49\u7cfb\u7edf\u8c03\u7528\u3002 \u7ebf\u7a0b\u5e93\u4e2d\u7684 read(), write(), accept() \u7684\u5e95\u5c42\u5b9e\u73b0\u4e3a\u975e\u963b\u585e\u7cfb\u7edf\u8c03\u7528\uff08Non-blocking system call\uff09\uff0c \u8c03\u7528\u540e\uff0c\u7531\u4e8e\u53ef\u4ee5\u7acb\u5373\u8fd4\u56de\uff0c \u5219\u5c06\u7279\u5b9a\u7684\u7ebf\u7a0b\u72b6\u6001\u6807\u8bb0\u4e3a waiting, \u8c03\u5ea6\u5176\u4ed6\u7684\u53ef\u6267\u884c\u7ebf\u7a0b\u3002 \u5185\u6838\u5b8c\u6210\u4e86 IO \u64cd\u4f5c\u540e\uff0c \u8c03\u7528\u7ebf\u7a0b\u5e93\u7684\u56de\u8c03\u51fd\u6570\uff0c \u5c06\u539f\u6765\u5904\u4e8e waiting \u72b6\u6001\u7684\u7ebf\u7a0b\u6807\u8bb0\u4e3a runnable.","title":"\u975e\u963b\u585e\u5f0fIO\u5982\u4f55\u5e2e\u52a9\u670d\u52a1\u5668\u63d0\u9ad8\u541e\u5410\u91cf"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84OS%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/%E6%80%8E%E4%B9%88%E7%90%86%E8%A7%A3%E9%98%BB%E5%A1%9E%E9%9D%9E%E9%98%BB%E5%A1%9E%E4%B8%8E%E5%90%8C%E6%AD%A5%E5%BC%82%E6%AD%A5/#a2","text":"\u540c\u6b65\u3001\u5f02\u6b65\u3001\u963b\u585e\u3001\u975e\u963b\u585e\uff0c\u662f\u52063\u4e2a\u5c42\u6b21\u7684\uff1a CPU\u5c42\u6b21\uff1b \u7ebf\u7a0b\u5c42\u6b21\uff1b \u7a0b\u5e8f\u5458\u611f\u77e5\u5c42\u6b21\u3002 \u8fd9\u51e0\u4e2a\u6982\u5ff5\u4e4b\u6240\u4ee5\u5bb9\u6613\u6df7\u6dc6\uff0c\u662f\u56e0\u4e3a\u6ca1\u6709\u5206\u6e05\u695a\u662f\u5728\u54ea\u4e2a\u5c42\u6b21\u8fdb\u884c\u8ba8\u8bba\u3002 CPU\u5c42\u6b21 \u5728CPU\u5c42\u6b21\uff0c\u6216\u8005\u8bf4\u64cd\u4f5c\u7cfb\u7edf\u8fdb\u884cIO\u548c\u4efb\u52a1\u8c03\u5ea6\u7684\u5c42\u6b21\uff0c\u73b0\u4ee3\u64cd\u4f5c\u7cfb\u7edf\u901a\u5e38\u4f7f\u7528\u5f02\u6b65\u975e\u963b\u585e\u65b9\u5f0f\u8fdb\u884cIO\uff08\u6709\u5c11\u90e8\u5206IO\u53ef\u80fd\u4f1a\u4f7f\u7528\u540c\u6b65\u975e\u963b\u585e\u8f6e\u8be2\uff09\uff0c\u5373\u53d1\u51faIO\u8bf7\u6c42\u4e4b\u540e\uff0c\u5e76\u4e0d\u7b49\u5f85IO\u64cd\u4f5c\u5b8c\u6210\uff0c\u800c\u662f\u7ee7\u7eed\u6267\u884c\u4e0b\u9762\u7684\u6307\u4ee4\uff08\u975e\u963b\u585e\uff09\uff0cIO\u64cd\u4f5c\u548cCPU\u6307\u4ee4\u4e92\u4e0d\u5e72\u6270\uff08\u5f02\u6b65\uff09\uff0c\u6700\u540e\u901a\u8fc7\u4e2d\u65ad\u7684\u65b9\u5f0f\u6765\u901a\u77e5IO\u64cd\u4f5c\u5b8c\u6210\u7ed3\u679c\u3002 \u7ebf\u7a0b\u5c42\u6b21 \u5728\u7ebf\u7a0b\u5c42\u6b21\uff0c\u6216\u8005\u8bf4\u64cd\u4f5c\u7cfb\u7edf\u8c03\u5ea6\u5355\u5143\u7684\u5c42\u6b21\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4e3a\u4e86\u51cf\u8f7b\u7a0b\u5e8f\u5458\u7684\u601d\u8003\u8d1f\u62c5\uff0c\u5c06\u5e95\u5c42\u7684\u5f02\u6b65\u975e\u963b\u585e\u7684IO\u65b9\u5f0f\u8fdb\u884c\u5c01\u88c5\uff0c\u628a\u76f8\u5173\u7cfb\u7edf\u8c03\u7528\uff08\u5982read\uff0cwrite\u7b49\uff09\u4ee5\u540c\u6b65\u7684\u65b9\u5f0f\u5c55\u73b0\u51fa\u6765\u3002\u7136\u800c\uff0c\u540c\u6b65\u963b\u585e\u7684IO\u4f1a\u4f7f\u7ebf\u7a0b\u6302\u8d77\uff0c\u540c\u6b65\u975e\u963b\u585e\u7684IO\u4f1a\u6d88\u8017CPU\u8d44\u6e90\u5728\u8f6e\u8be2\u4e0a\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\uff0c\u5c31\u67093\u79cd\u601d\u8def\uff1a \u591a\u7ebf\u7a0b\uff08\u540c\u6b65\u963b\u585e\uff09\uff1b IO\u591a\u8def\u590d\u7528\uff08select\uff0cpoll\uff0cepoll\uff09\uff08\u540c\u6b65\u975e\u963b\u585e\uff0c\u4e25\u683c\u5730\u6765\u8bb2\uff0c\u662f\u628a\u963b\u585e\u70b9\u6539\u53d8\u4e86\u4f4d\u7f6e\uff09\uff1b \u76f4\u63a5\u66b4\u9732\u51fa\u5f02\u6b65\u7684IO\u63a5\u53e3\uff0c\u5982kernel-aio\u548cIOCP\uff08\u5f02\u6b65\u975e\u963b\u585e\uff09\u3002 \u7a0b\u5e8f\u5458\u611f\u77e5\u5c42\u6b21 \u5728Linux\u4e2d\uff0c\u4e0a\u9762\u63d0\u5230\u7684\u7b2c2\u79cd\u601d\u8def\u7528\u5f97\u6bd4\u8f83\u5e7f\u6cdb\uff0c\u4e5f\u662f\u6bd4\u8f83\u7406\u60f3\u7684\u89e3\u51b3\u65b9\u6848\u3002\u7136\u800c\uff0c\u76f4\u63a5\u4f7f\u7528select\u4e4b\u7c7b\u7684\u63a5\u53e3\uff0c\u4f9d\u7136\u6bd4\u8f83\u590d\u6742\uff0c\u6240\u4ee5\u5404\u79cd\u5e93\u548c\u6846\u67b6\u767e\u82b1\u9f50\u653e\uff0c\u90fd\u8bd5\u56fe\u5bf9IO\u591a\u8def\u590d\u7528\u8fdb\u884c\u5c01\u88c5\u3002\u6b64\u65f6\uff0c\u5e93\u548c\u6846\u67b6\u63d0\u4f9b\u7684API\u53c8\u53ef\u4ee5\u9009\u62e9\u662f\u4ee5\u540c\u6b65\u7684 \u65b9\u5f0f \u8fd8\u662f\u5f02\u6b65\u7684 \u65b9\u5f0f \u6765\u5c55\u73b0\u3002\u5982python\u7684asyncio\u5e93\u4e2d\uff0c\u5c31\u901a\u8fc7\u534f\u7a0b\uff0c\u63d0\u4f9b\u4e86\u540c\u6b65\u963b\u585e\u5f0f\u7684API\uff1b\u5982node.js\u4e2d\uff0c\u5c31\u901a\u8fc7\u56de\u8c03\u51fd\u6570\uff0c\u63d0\u4f9b\u4e86\u5f02\u6b65\u975e\u963b\u585e\u5f0f\u7684API\u3002","title":"A2\uff1a"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84OS%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/%E6%80%8E%E4%B9%88%E7%90%86%E8%A7%A3%E9%98%BB%E5%A1%9E%E9%9D%9E%E9%98%BB%E5%A1%9E%E4%B8%8E%E5%90%8C%E6%AD%A5%E5%BC%82%E6%AD%A5/#a3","text":"","title":"A3\uff1a"},{"location":"%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84OS%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/%E6%80%8E%E4%B9%88%E7%90%86%E8%A7%A3%E9%98%BB%E5%A1%9E%E9%9D%9E%E9%98%BB%E5%A1%9E%E4%B8%8E%E5%90%8C%E6%AD%A5%E5%BC%82%E6%AD%A5/#reference","text":"https://www.zhihu.com/question/19732473","title":"Reference"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90/emplace_back/","text":"push_back vs emplace_back For emplace_back constructor A (int x_arg) will be called. And for push_back A (int x_arg) is called first and move A (A &&rhs) is called afterwards. Of course, the constructor has to be marked as explicit, but for current example is good to remove explicitness. #include <iostream> #include <vector> class A { public: A (int x_arg) : x (x_arg) { std::cout << \"A (x_arg)\\n\"; } A () { x = 0; std::cout << \"A ()\\n\"; } A (const A &rhs) noexcept { x = rhs.x; std::cout << \"A (A &)\\n\"; } A (A &&rhs) noexcept { x = rhs.x; std::cout << \"A (A &&)\\n\"; } private: int x; }; int main () { { std::vector<A> a; std::cout << \"call emplace_back:\\n\"; a.emplace_back (0); } { std::vector<A> a; std::cout << \"call push_back:\\n\"; a.push_back (1); } return 0; } output: call emplace_back: A (x_arg) call push_back: A (x_arg) A (A &&) emplace_back\u7684\u7279\u70b9 1\u3001\u5f53\u8c03\u7528push_back\u6216insert\u6210\u5458\u51fd\u6570\u65f6\uff0c\u662f\u628a\u5143\u7d20\u7c7b\u578b\u7684\u5bf9\u8c61\u4f20\u9012\u7ed9\u5b83\u4eec\uff0c\u8fd9\u4e9b\u5bf9\u8c61\u88ab\u62f7\u8d1d\u5230\u5bb9\u5668\u4e2d\u3002\u800c\u5f53\u6211\u4eec\u8c03\u7528\u4e00\u4e2aemplace\u7cfb\u5217\u51fd\u6570\u65f6\uff0c\u5219\u662f\u5c06\u76f8\u5e94\u53c2\u6570\u4f20\u9012\u7ed9\u5143\u7d20\u7c7b\u578b\u7684\u6784\u9020\u51fd\u6570\u3002 2\u3001\u8fd9\u6837emplace_back\u80fd\u5c31\u5730\u901a\u8fc7\u53c2\u6570\u6784\u9020\u5bf9\u8c61\uff0c\u4e0d\u9700\u8981\u62f7\u8d1d\u64cd\u4f5c\uff0c\u76f8\u6bd4push_back\u80fd\u66f4\u597d\u7684\u907f\u514d\u5185\u5b58\u7684\u62f7\u8d1d\u548c\u79fb\u52a8\uff0c\u63d0\u5347\u5bb9\u5668\u63d2\u5165\u5143\u7d20\u7684\u6027\u80fd\u3002 3\u3001\u5927\u591a\u6570\u60c5\u51b5\u90fd\u5e94\u8be5\u4f7f\u7528emplace\u7cfb\u5217\u51fd\u6570\uff1aemplace; emplace_back; emplace_hit; emplace_fornt; emplace_after Be careful 1\u3001emplace\u51fd\u6570\u9700\u8981\u5bf9\u5e94\u7684\u53c2\u6570\u5bf9\u8c61\u6709\u5bf9\u5e94\u7684\u6784\u9020\u51fd\u6570\uff0c\u4e0d\u7136\u7f16\u8bd1\u62a5\u9519 2\u3001emplace\u51fd\u6570\u5728\u5bb9\u5668\u4e2d\u76f4\u63a5\u6784\u9020\u5143\u7d20\u3002\u4f20\u9012\u7ed9emplace\u51fd\u6570\u7684\u53c2\u6570\u5fc5\u987b\u4e0e\u5143\u7d20\u7c7b\u578b\u7684\u6784\u9020\u51fd\u6570\u76f8\u5339\u914d","title":"Emplace back"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/","text":"vector & list vector \u4f18\u70b9\uff1a\u5e38\u6570\u65f6\u95f4\u7d22\u5f15\u3002 \u7f3a\u70b9\uff1a\u63d2\u5165\u65b0\u9879\u548c\u5220\u9664\u5df2\u6709\u9879\u4ee3\u4ef7\u9ad8\u6602\u3002\uff08\u9664\u975e\u53d1\u751f\u5728\u5c3e\u7aef\uff09 list \u4f18\u70b9\uff1a\u63d2\u5165\u65b0\u9879\u548c\u5220\u9664\u4ee3\u4ef7\u4f4e\u5ec9\uff0c\u4f46\u5047\u8bbe\u53d8\u52a8\u7684\u4f4d\u7f6e\u662f\u5df2\u77e5\u7684\u3002 \u7f3a\u70b9\uff1alist\u4e0d\u5bb9\u6613\u88ab\u7d22\u5f15\u3002 \u67e5\u627e\u65f6\u4e24\u8005\u90fd\u662f\u4f4e\u6548\u7684 set & map set\u662f\u4e0d\u5141\u8bb8\u6709\u91cd\u590d\u5143\u7684\u6709\u5e8f\u5bb9\u5668 map\u7528\u6765\u5b58\u50a8\u7531\u5173\u952e\u5b57\u4e0e\u503c\u6784\u6210\u7684\u6709\u5e8f\u9879\u7684\u96c6\u5408 \u4ee5\u5bf9\u6570\u6700\u574f\u60c5\u5f62\u65f6\u95f4\u6765\u652f\u6301\u57fa\u672c\u7684inset/erase/find\u64cd\u4f5c \uff0c\u5e95\u5c42\u4e3a\u81ea\u9876\u5411\u4e0b\u7684\u7ea2\u9ed1\u6811","title":"\u6570\u636e\u7ed3\u6784"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#vector-list","text":"vector \u4f18\u70b9\uff1a\u5e38\u6570\u65f6\u95f4\u7d22\u5f15\u3002 \u7f3a\u70b9\uff1a\u63d2\u5165\u65b0\u9879\u548c\u5220\u9664\u5df2\u6709\u9879\u4ee3\u4ef7\u9ad8\u6602\u3002\uff08\u9664\u975e\u53d1\u751f\u5728\u5c3e\u7aef\uff09 list \u4f18\u70b9\uff1a\u63d2\u5165\u65b0\u9879\u548c\u5220\u9664\u4ee3\u4ef7\u4f4e\u5ec9\uff0c\u4f46\u5047\u8bbe\u53d8\u52a8\u7684\u4f4d\u7f6e\u662f\u5df2\u77e5\u7684\u3002 \u7f3a\u70b9\uff1alist\u4e0d\u5bb9\u6613\u88ab\u7d22\u5f15\u3002 \u67e5\u627e\u65f6\u4e24\u8005\u90fd\u662f\u4f4e\u6548\u7684","title":"vector &amp; list"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#set-map","text":"set\u662f\u4e0d\u5141\u8bb8\u6709\u91cd\u590d\u5143\u7684\u6709\u5e8f\u5bb9\u5668 map\u7528\u6765\u5b58\u50a8\u7531\u5173\u952e\u5b57\u4e0e\u503c\u6784\u6210\u7684\u6709\u5e8f\u9879\u7684\u96c6\u5408 \u4ee5\u5bf9\u6570\u6700\u574f\u60c5\u5f62\u65f6\u95f4\u6765\u652f\u6301\u57fa\u672c\u7684inset/erase/find\u64cd\u4f5c \uff0c\u5e95\u5c42\u4e3a\u81ea\u9876\u5411\u4e0b\u7684\u7ea2\u9ed1\u6811","title":"set &amp; map"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/","text":"\u4e8c\u53c9\u6811 \u4ece\u4e8c\u53c9\u6811\u770b\u9012\u5f52 \u9012\u5f52\u6761\u4ef6 \u7ec8\u6b62\u6761\u4ef6 \u4f8b\uff1a\u4e8c\u53c9\u6811\u6df1\u5ea6\uff08Leetcode.104\uff09 \u7ec8\u6b62\u6761\u4ef6\uff1a\u6811\u4e3a\u7a7a\u65f6\uff0c\u6df1\u5ea6\u4e3a0 \u6bcf\u4e00\u7ea7\u7684\u8fd4\u56de\u503c\u662f\u5f53\u524d\u7ea7\u5bf9\u5e94\u7684\u6811\u7684\u6700\u5927\u6df1\u5ea6\u3002 int Height(TreeNode* root) { if(root == nullptr) { return 0; } int leftHeight = Height(root->left); int rightHeight = Height(root->right); return max(leftHeight, rightHeight) + 1; } \u8fed\u4ee3\u6cd5\u7684\u4e09\u79cd\u904d\u5386 // \u524d\u5e8f\u904d\u5386 vector<int> preorderTraversal(TreeNode* root) { vector<int> res; if (root == nullptr) return res; stack<TreeNode*> stk; while (root != nullptr || !stk.empty()) { while (root != nullptr) // \u904d\u5386\u5de6\u5b50\u6811 { res.emplace_back(root->val); // \u904d\u5386\u7684\u540c\u65f6\u653e\u5165\u7ed3\u679c stk.emplace(root); root = root->left; } root = stk.top(); // \u5de6\u5b50\u6811\u4e3a\u7a7a\uff0c\u5411\u4e0a\u51fa\u6808 stk.pop(); root = root->right; } return res; } // \u4e2d\u5e8f\u904d\u5386 vector<int> inorderTraversal(TreeNode* root) { vector<int> res; if (root == nullptr) return res; stack<TreeNode*> stk; while(root != nullptr || !stk.empty()) { while(root != nullptr) // \u904d\u5386\u5de6\u5b50\u6811 { stk.push(root); root = root->left; } root = stk.top(); // \u5de6\u5b50\u6811\u4e3a\u7a7a\uff0c\u51fa\u6808 stk.pop(); res.push_back(root->val); // \u653e\u5165\u7ed3\u679c root = root->right; // \u5411\u4e0a\u8d70\u6709\u53f3\u5b50\u6811 } return res; } class Solution { public: vector<int> postorderTraversal(TreeNode *root) { vector<int> res; if (root == nullptr) { return res; } stack<TreeNode *> stk; TreeNode *prev = nullptr; while (root != nullptr || !stk.empty()) { while (root != nullptr) // \u904d\u5386\u5de6\u5b50\u6811 { stk.emplace(root); root = root->left; } root = stk.top(); // \u5de6\u5b50\u6811\u4e3a\u7a7a\uff0c\u5f80\u4e0a\u51fa\u6808 stk.pop(); if (root->right == nullptr || root->right == prev) // \u51fa\u6808\u7684root\u6ca1\u6709\u53f3\u5b50\u6811 { res.emplace_back(root->val); prev = root; root = nullptr; } else // \u51fa\u6808\u7684root\u6709\u53f3\u5b50\u6811\uff0c\u7ee7\u7eed\u538b\u6808\uff0c\u641c\u7d22\u53f3\u5b50\u6811\u7684\u5de6\u5b50\u6811 { stk.emplace(root); root = root->right; } } return res; } }; \u94fe\u63a5\uff1ahttps://leetcode-cn.com/problems/binary-tree-postorder-traversal/solution/er-cha-shu-de-hou-xu-bian-li-by-leetcode-solution/ \u4f18\u5148\u961f\u5217 \u4e8c\u53c9\u5806\u7684\u4e24\u4e2a\u6027\u8d28\uff1a 1.\u7ed3\u6784\u6027 \u5806\u5b9e\u9645\u4e0a\u662f\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u5e95\u5c42\u5143\u7d20\u4ece\u5de6\u5230\u53f3\u586b\u5165\uff0c\u6240\u4ee5\u5806\u7684\u9ad8\u5ea6\u4e3a logN \uff0c\u56e0\u4e3a\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u89c4\u5f8b\u6027\uff0c\u5806\u5176\u5b9e\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u5728\u8fd9\u4e2a\u6570\u7ec4\u4e2d\uff0c \u7236\u8282\u70b9\u4f4d\u4e8e i /2 \u4f4d\u7f6e \uff0c\u5219 \u5de6\u5b50\u8282\u70b9\u5219\u5728 2i\u4f4d\u7f6e \uff0c \u53f3\u5b50\u8282\u70b9\u5728 2i + 1 \u4e0a 2.\u5806\u5e8f\u6027 \u8ba9\u5806\u64cd\u4f5c\u5feb\u901f\u6267\u884c\u7684\u6027\u8d28\u662f\u5806\u5e8f\u6027\uff0c\u6700\u5c0f\u5143\u4f4d\u4e8e\u6839\u4e0a\uff0c\u5728\u4e00\u4e2a\u5806\u4e2d\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9X\uff0cX\u7684\u7236\u4eb2\u5c0f\u4e8e\u6216\u8005\u7b49\u4e8eX\uff0c\u6839\u8282\u70b9\u9664\u5916\u3002 \u4e0a\u6ee4 void insert(AnyType x) { //\u5224\u65ad\u5f53\u524d\u5806\uff08\u6570\u7ec4\uff09\u662f\u5426\u5df2\u6ee1\uff0c\u6ee1\u5219\u6269\u5bb9\uff0c\u9632\u6b62\u6570\u7ec4\u8d8a\u754c if(currentSize == array.length -1) enlargeArray(array.length * 2 + 1); //\u5c06\u8981\u63d2\u5165\u7684\u5143\u7d20\u653e\u5728\u6700\u540e\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u5373\u6570\u7ec4\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e int hole = ++currentSize; //\u7236\u8282\u70b9 \uff1ahole / 2 //\u5de6\u5b50\u8282\u70b9\uff1a2*hole //\u53f3\u5b50\u8282\u70b9\uff1a2*hole+1 //x\u548c\u7236\u8282\u70b9\u6bd4\u8f83\uff0c\u6bd4\u7236\u8282\u70b9\u5927\u5219\u4e0a\u6ee4\uff0c\u539f\u7236\u8282\u70b9\u4e0b\u6ee4 for(array[0] = x ;x.compareTo(array[hole/2]) < 0 ; hole/=2) { array[hole] = array[hole / 2]; } //\u6700\u540e\u518d\u5c06\u8981\u63d2\u5165\u7684\u503c\u8d4b\u503c\u8fc7\u53bb\u7b26\u5408\u7684\u8282\u70b9\u5904 array[hole] = x; }","title":"\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/#_1","text":"\u4ece\u4e8c\u53c9\u6811\u770b\u9012\u5f52 \u9012\u5f52\u6761\u4ef6 \u7ec8\u6b62\u6761\u4ef6 \u4f8b\uff1a\u4e8c\u53c9\u6811\u6df1\u5ea6\uff08Leetcode.104\uff09 \u7ec8\u6b62\u6761\u4ef6\uff1a\u6811\u4e3a\u7a7a\u65f6\uff0c\u6df1\u5ea6\u4e3a0 \u6bcf\u4e00\u7ea7\u7684\u8fd4\u56de\u503c\u662f\u5f53\u524d\u7ea7\u5bf9\u5e94\u7684\u6811\u7684\u6700\u5927\u6df1\u5ea6\u3002 int Height(TreeNode* root) { if(root == nullptr) { return 0; } int leftHeight = Height(root->left); int rightHeight = Height(root->right); return max(leftHeight, rightHeight) + 1; } \u8fed\u4ee3\u6cd5\u7684\u4e09\u79cd\u904d\u5386 // \u524d\u5e8f\u904d\u5386 vector<int> preorderTraversal(TreeNode* root) { vector<int> res; if (root == nullptr) return res; stack<TreeNode*> stk; while (root != nullptr || !stk.empty()) { while (root != nullptr) // \u904d\u5386\u5de6\u5b50\u6811 { res.emplace_back(root->val); // \u904d\u5386\u7684\u540c\u65f6\u653e\u5165\u7ed3\u679c stk.emplace(root); root = root->left; } root = stk.top(); // \u5de6\u5b50\u6811\u4e3a\u7a7a\uff0c\u5411\u4e0a\u51fa\u6808 stk.pop(); root = root->right; } return res; } // \u4e2d\u5e8f\u904d\u5386 vector<int> inorderTraversal(TreeNode* root) { vector<int> res; if (root == nullptr) return res; stack<TreeNode*> stk; while(root != nullptr || !stk.empty()) { while(root != nullptr) // \u904d\u5386\u5de6\u5b50\u6811 { stk.push(root); root = root->left; } root = stk.top(); // \u5de6\u5b50\u6811\u4e3a\u7a7a\uff0c\u51fa\u6808 stk.pop(); res.push_back(root->val); // \u653e\u5165\u7ed3\u679c root = root->right; // \u5411\u4e0a\u8d70\u6709\u53f3\u5b50\u6811 } return res; } class Solution { public: vector<int> postorderTraversal(TreeNode *root) { vector<int> res; if (root == nullptr) { return res; } stack<TreeNode *> stk; TreeNode *prev = nullptr; while (root != nullptr || !stk.empty()) { while (root != nullptr) // \u904d\u5386\u5de6\u5b50\u6811 { stk.emplace(root); root = root->left; } root = stk.top(); // \u5de6\u5b50\u6811\u4e3a\u7a7a\uff0c\u5f80\u4e0a\u51fa\u6808 stk.pop(); if (root->right == nullptr || root->right == prev) // \u51fa\u6808\u7684root\u6ca1\u6709\u53f3\u5b50\u6811 { res.emplace_back(root->val); prev = root; root = nullptr; } else // \u51fa\u6808\u7684root\u6709\u53f3\u5b50\u6811\uff0c\u7ee7\u7eed\u538b\u6808\uff0c\u641c\u7d22\u53f3\u5b50\u6811\u7684\u5de6\u5b50\u6811 { stk.emplace(root); root = root->right; } } return res; } }; \u94fe\u63a5\uff1ahttps://leetcode-cn.com/problems/binary-tree-postorder-traversal/solution/er-cha-shu-de-hou-xu-bian-li-by-leetcode-solution/","title":"\u4e8c\u53c9\u6811"},{"location":"%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/#_2","text":"\u4e8c\u53c9\u5806\u7684\u4e24\u4e2a\u6027\u8d28\uff1a 1.\u7ed3\u6784\u6027 \u5806\u5b9e\u9645\u4e0a\u662f\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u5e95\u5c42\u5143\u7d20\u4ece\u5de6\u5230\u53f3\u586b\u5165\uff0c\u6240\u4ee5\u5806\u7684\u9ad8\u5ea6\u4e3a logN \uff0c\u56e0\u4e3a\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u89c4\u5f8b\u6027\uff0c\u5806\u5176\u5b9e\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u4e2a\u6570\u7ec4\uff0c\u5728\u8fd9\u4e2a\u6570\u7ec4\u4e2d\uff0c \u7236\u8282\u70b9\u4f4d\u4e8e i /2 \u4f4d\u7f6e \uff0c\u5219 \u5de6\u5b50\u8282\u70b9\u5219\u5728 2i\u4f4d\u7f6e \uff0c \u53f3\u5b50\u8282\u70b9\u5728 2i + 1 \u4e0a 2.\u5806\u5e8f\u6027 \u8ba9\u5806\u64cd\u4f5c\u5feb\u901f\u6267\u884c\u7684\u6027\u8d28\u662f\u5806\u5e8f\u6027\uff0c\u6700\u5c0f\u5143\u4f4d\u4e8e\u6839\u4e0a\uff0c\u5728\u4e00\u4e2a\u5806\u4e2d\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8282\u70b9X\uff0cX\u7684\u7236\u4eb2\u5c0f\u4e8e\u6216\u8005\u7b49\u4e8eX\uff0c\u6839\u8282\u70b9\u9664\u5916\u3002 \u4e0a\u6ee4 void insert(AnyType x) { //\u5224\u65ad\u5f53\u524d\u5806\uff08\u6570\u7ec4\uff09\u662f\u5426\u5df2\u6ee1\uff0c\u6ee1\u5219\u6269\u5bb9\uff0c\u9632\u6b62\u6570\u7ec4\u8d8a\u754c if(currentSize == array.length -1) enlargeArray(array.length * 2 + 1); //\u5c06\u8981\u63d2\u5165\u7684\u5143\u7d20\u653e\u5728\u6700\u540e\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u5373\u6570\u7ec4\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u4f4d\u7f6e int hole = ++currentSize; //\u7236\u8282\u70b9 \uff1ahole / 2 //\u5de6\u5b50\u8282\u70b9\uff1a2*hole //\u53f3\u5b50\u8282\u70b9\uff1a2*hole+1 //x\u548c\u7236\u8282\u70b9\u6bd4\u8f83\uff0c\u6bd4\u7236\u8282\u70b9\u5927\u5219\u4e0a\u6ee4\uff0c\u539f\u7236\u8282\u70b9\u4e0b\u6ee4 for(array[0] = x ;x.compareTo(array[hole/2]) < 0 ; hole/=2) { array[hole] = array[hole / 2]; } //\u6700\u540e\u518d\u5c06\u8981\u63d2\u5165\u7684\u503c\u8d4b\u503c\u8fc7\u53bb\u7b26\u5408\u7684\u8282\u70b9\u5904 array[hole] = x; }","title":"\u4f18\u5148\u961f\u5217"},{"location":"%E6%9D%82%E8%B4%A7%E9%93%BA/Git/","text":"Git Git\u5de5\u4f5c\u6d41\u7a0b git pull\u51b2\u7a81\u89e3\u51b3 1.\u5b58\u50a8\u672c\u5730\u4fee\u6539\u7684\u5185\u5bb9 git stash \u627e\u5230\u521a\u624d\u6253\u7684stash\u7684\u540d\u5b57(\u9ed8\u8ba4\u662fstash@{0}),\u4e0d\u77e5\u9053\u540d\u5b57\u8fd0\u884cgit stash list 2.pull\u62c9\u53d6\u8fdc\u7a0b\u4ee3\u7801 3.\u8fd8\u539f\u6682\u5b58\u7684\u4ee3\u7801 git stash pop stash@{0} 4.\u6709merge\u89e3\u51b3merge\uff1a \u6253\u5f00\u51b2\u7a81\u6587\u4ef6 \u5176\u4e2dUpdated upstream\u548c=======\u4e4b\u95f4\u7684\u5185\u5bb9\u662f\u4ece\u8fdc\u7aefpull\u4e0b\u6765\u7684\u4ee3\u7801\u3002 =======\u548cStashed changes\u4e4b\u95f4\u7684\u5185\u5bb9\u5219\u662f\u4f60\u672c\u5730\u4fee\u6539\u7684\u5185\u5bb9\u3002 git push\u53d1\u751f\u51b2\u7a81\u65f6\uff0c\u5176\u4ed6\u4eba\u63d0\u4ea4\u4e86\u4ee3\u7801\uff0c\u672c\u5730\u5e93\u4e0d\u662f\u6700\u65b0\u3002\u9700\u8981git pull\u8d70\u4e00\u904d\uff0c\u6709merge\u89e3\u51b3merge\u518d\u63d0\u4ea4\u3002 git push --force\uff0c\u8fdc\u7a0b\u4e0a\u7684\u4ee3\u7801\u5e93\u5c06\u88ab\u672c\u5730\u66f4\u65b0\u540e\u7684\u7248\u672c\u8986\u76d6\uff01 Reference\uff1a https://www.runoob.com/git/git-workspace-index-repo.html","title":"Git"},{"location":"%E6%9D%82%E8%B4%A7%E9%93%BA/Git/#git","text":"","title":"Git"},{"location":"%E6%9D%82%E8%B4%A7%E9%93%BA/Git/#git_1","text":"","title":"Git\u5de5\u4f5c\u6d41\u7a0b"},{"location":"%E6%9D%82%E8%B4%A7%E9%93%BA/Git/#git-pull","text":"1.\u5b58\u50a8\u672c\u5730\u4fee\u6539\u7684\u5185\u5bb9 git stash \u627e\u5230\u521a\u624d\u6253\u7684stash\u7684\u540d\u5b57(\u9ed8\u8ba4\u662fstash@{0}),\u4e0d\u77e5\u9053\u540d\u5b57\u8fd0\u884cgit stash list 2.pull\u62c9\u53d6\u8fdc\u7a0b\u4ee3\u7801 3.\u8fd8\u539f\u6682\u5b58\u7684\u4ee3\u7801 git stash pop stash@{0} 4.\u6709merge\u89e3\u51b3merge\uff1a \u6253\u5f00\u51b2\u7a81\u6587\u4ef6 \u5176\u4e2dUpdated upstream\u548c=======\u4e4b\u95f4\u7684\u5185\u5bb9\u662f\u4ece\u8fdc\u7aefpull\u4e0b\u6765\u7684\u4ee3\u7801\u3002 =======\u548cStashed changes\u4e4b\u95f4\u7684\u5185\u5bb9\u5219\u662f\u4f60\u672c\u5730\u4fee\u6539\u7684\u5185\u5bb9\u3002 git push\u53d1\u751f\u51b2\u7a81\u65f6\uff0c\u5176\u4ed6\u4eba\u63d0\u4ea4\u4e86\u4ee3\u7801\uff0c\u672c\u5730\u5e93\u4e0d\u662f\u6700\u65b0\u3002\u9700\u8981git pull\u8d70\u4e00\u904d\uff0c\u6709merge\u89e3\u51b3merge\u518d\u63d0\u4ea4\u3002 git push --force\uff0c\u8fdc\u7a0b\u4e0a\u7684\u4ee3\u7801\u5e93\u5c06\u88ab\u672c\u5730\u66f4\u65b0\u540e\u7684\u7248\u672c\u8986\u76d6\uff01","title":"git pull\u51b2\u7a81\u89e3\u51b3"},{"location":"%E6%9D%82%E8%B4%A7%E9%93%BA/Git/#reference","text":"https://www.runoob.com/git/git-workspace-index-repo.html","title":"Reference\uff1a"},{"location":"%E7%A7%8B%E6%8B%9B%E5%86%B2%E5%88%BA/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/","text":"\u522b\u4eba\u5bb6\u7684\u5b66\u4e60\u8def\u7ebf1\uff1a C++\u8bed\u8a00\u57fa\u7840 [ ] \u5305\u62ec\u57fa\u672c\u5173\u952e\u5b57\u542b\u4e49\uff0c\u8bed\u8a00\u5e95\u5c42\u5b9e\u73b0\u673a\u5236(\u865a\u51fd\u6570\u3001\u5f15\u7528\u7b49)\uff0c\u9762\u5411\u5bf9\u8c61\u8fd8\u6709\u6a21\u677f\u6cdb\u578b\u7f16\u7a0b [ ] \u7f16\u8bd1\u94fe\u63a5\u673a\u5236\u3001\u5185\u5b58\u5e03\u5c40\u3001\u5bf9\u8c61\u6a21\u578b [ ] \u667a\u80fd\u6307\u9488 RAII \uff0c\u624b\u5199\u7b80\u5355\u7248\u667a\u80fd\u6307\u9488 [ ] C++11 \u90e8\u5206\u65b0\u7279\u6027 \u53f3\u503c\u5f15\u7528\u3001\u5b8c\u7f8e\u8f6c\u53d1\u7b49 [ ] \u90e8\u5206\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u6bd4\u5982\u5b89\u5168\u5b9e\u73b0\u5355\u4f8b\u3001\u89c2\u5bdf\u8005\u6a21\u5f0f\u8fd9\u4e9b [ ] STL\u6e90\u7801 \u8fd9\u90e8\u5206\u6709\u65f6\u95f4\u7684\u53ef\u4ee5\u627e\u5230C++ primer\u3001effective\u7cfb\u5217\u3001 STL\u6e90\u7801\u5256\u6790\u76f8\u5173\u7ae0\u8282\u8bfb\u4e00\u8bfb\u3002 \u6bd4\u8f83\u91cd\u8981\u7684\u662f\u6df1\u5ea6\u63a2\u7d22C++\u5bf9\u8c61\u6a21\u578b\u8fd9\u672c\u4e66\uff0c\u8fd9\u672c\u4e66\u524d\u9762\u4e00\u90e8\u5206\u662f\u5c06\u5bf9\u8c61\u6a21\u578b\u7684\u6bd4\u8f83\u9002\u5408\u4e86\u89e3C++\u5e95\u5c42\u4e00\u4e9b\u673a\u5236\uff0c\u5efa\u8bae\u6709\u7a7a\u5fc5\u8bfb \u7b97\u6cd5 \u5237\u9898\uff0c\u7cfb\u7edf\u7684\u5206\u7c7b\u5b66\u4e60\uff0c\u63d0\u5347\u5f88\u5feb [ ] \u94fe\u8868\uff0c\u4ee5\u53ca\u5404\u79cd\u9898\u578b\uff0c\u53bbleetcode\u6309\u6807\u7b7e\u5237 [ ] \u4e8c\u53c9\u6811\u3001\u5e73\u8861\u4e8c\u53c9\u6811 [ ] \u4e8c\u5206\u67e5\u627e\u4ee5\u53ca\u51e0\u79cd\u53d8\u4f53\uff0c\u6bd4\u5982lower_bound upper_bound [ ] \u51e0\u5927\u6392\u5e8f\u7b97\u6cd5\uff0c\u7a33\u5b9a\u6027\uff0c\u6781\u7aef\u60c5\u51b5\uff0c\u505a\u5230\u624b\u5199\u5feb\u6392\u3001\u5806\u6392bug free\uff0c\u4e86\u89e3\u4e0b\u5feb\u6392\u4f18\u5316\u601d\u8def [ ] hash [ ] \u8d2a\u5fc3\u3001\u56de\u6eaf\u3001dfs\u3001bfs\uff0c\u52a8\u6001\u89c4\u5212 [ ] Tire\u6811 [ ] \u624b\u5199LRU\uff0c \u53cc\u5411\u94fe\u8868+hash [ ] \u6d77\u91cf\u6570\u636e\u5904\u7406\u601d\u8def [ ] \u53ef\u4ee5\u4e86\u89e3\u4e00\u4e0bKMP\u8fd9\u7c7b\u5b57\u7b26\u4e32\u5339\u914d\u7b97\u6cd5 [ ] \u591a\u7ebf\u7a0b [ ] - \u57fa\u672c\u7684POSIX\u7ebf\u7a0bapi \u4e92\u65a5\u9501\u548c\u6761\u4ef6\u53d8\u91cf\u6211\u89c9\u5f97\u5fc5\u987b\u638c\u63e1\u7684 \u5176\u5b83\u7684\u5c31\u770b\u4f60\u53c8\u6ca1\u6709\u65f6\u95f4\u4e86 [ ] \u9879\u76ee [ ] - \u7406\u60f3\u7684\u9879\u76ee\u5e94\u8be5\u662f\u51fa\u4e8e\u81ea\u5df1\u7684\u5174\u8da3\u505a\u7684\u5404\u79cd\u8f6e\u5b50\uff0c\u6bd4\u5982http ftp\u670d\u52a1\u5668\uff0c\u5b9e\u73b0\u52a0\u5bc6\u7b97\u6cd5\uff0c\u6587\u4ef6\u538b\u7f29\uff0cp2p\u804a\u5929\uff0c\u7f51\u7edc\u5e93\uff0c\u751a\u81f3mini os\uff0ck-v\u6570\u636e\u5e93\u3002\u4f46\u662f\u77ed\u671f\u5185\u8fd9\u4e9b\u53ef\u80fd\u90fd\u4e0d\u662f\u5f88\u597d\u51c6\u5907\uff0c\u6240\u4ee5\u5927\u5bb6\u6309\u7167\u81ea\u5df1\u5df2\u6709\u7684\u5b8c\u5584\u4e0b\u5427\u3002\u505a\u5230\u6709\u6d4b\u8bd5\u3001\u6709\u6027\u80fd\u6539\u8fdb\u65b9\u9762\u7684\u601d\u8003\u3002 \u6211\u7684\u7ecf\u9a8c\u662f\u4e03\u516b\u573a\u4e0b\u6765\u9879\u76ee\u63d0\u95ee\u65f6\u95f4\u6ca1\u8d85\u8fc710\u5206\u949f\uff0c\u800c\u4e14\u63d0\u95ee\u7684\u4e3b\u8981\u70b9\u662f\u5982\u4f55\u6d4b\u8bd5\u3001\u5982\u4f55\u6539\u8fdb\u7684\uff0c\u4ee5\u53ca\u6548\u679c [ ] \u5f00\u6e90\u7ec4\u4ef6 [ ] - redis nginx \u8fd9\u4e9b\u90fd\u662f\u6700\u597d\u4e86\u89e3\u4e0b\u539f\u7406\uff0c\u5c31\u7b97\u6ca1\u7528\u8fc7\uff0c\u4e5f\u53bb\u641c\u51e0\u7bc7\u535a\u5ba2\u770b\u770b\u3002\u5343\u4e07\u522b\u4e00\u70b9\u90fd\u8bf4\u4e0d\u51fa\u6765 Linux [ ] \u8fdb\u7a0b\u7ebf\u7a0b\uff0c\u4e00\u5e76\u5b66\u4e60fork vfork clone\u8fd9\u4e9b\u7cfb\u7edf\u8c03\u7528 [ ] Linux\u5185\u5b58\u7ba1\u7406\uff0c \u5305\u62ec\u7269\u7406\u5185\u5b58\u3001\u865a\u62df\u5185\u5b58\u3001\u5206\u9875\u548c\u5206\u6bb5\u673a\u5236\u3001slab\u5206\u914d\u5668\u8fd9\u4e9b\u4e1c\u897f\uff0c\u9762\u8bd5\u5b98\u95ee\u5230malloc\u8fd9\u4e9b\u90fd\u80fd\u6269\u5c55\u8bb2\u4e00\u8bb2\uff0c\u4e00\u5e76\u9700\u8981\u4e86\u89e3brk malloc\u8fd9\u4e9b\u51fd\u6570\u5185\u90e8\u5b9e\u73b0 [ ] \u4e86\u89e3\u6587\u4ef6\u7cfb\u7edf\uff0c\u7279\u522b\u662fVPS\uff0c\u770b\u5b8c\u8fd9\u90e8\u5206\uff0c\u5bf9\u4e8e\u8f6f\u786c\u8fde\u63a5\u548cLinux\u8bfb\u6587\u4ef6\u662f\u600e\u6837\u4e00\u4e2a\u8fc7\u7a0b\u8fd9\u7c7b\u95ee\u9898\u5c31\u5f88\u7b80\u5355 [ ] \u6b7b\u9501\u76f8\u5173\u3001\u8fd8\u6709\u4fe1\u53f7\u91cf\u540c\u6b65\u539f\u8bed\u600e\u4e48\u5b9e\u73b0\u6d88\u8d39\u8005\u751f\u4ea7\u8005\u3001\u8bfb\u8005\u5199\u8005\u3001\u54f2\u5b66\u5bb6\u5c31\u9910\u8fd9\u4e9b [ ] Linux \u8fdb\u7a0b\u8c03\u5ea6\u53ef\u4ee5\u4e86\u89e3\u4e0b\uff0c\u6bd4\u5982CFS [ ] \u8fd8\u6709\u5c31\u662fLinux\u4e0b\u8fdb\u7a0b\u7684\u5e03\u5c40\uff0c\u8fd9\u5176\u5b9e\u95ee\u5230C++\u5185\u5b58\u5e03\u5c40\u5c31\u53ef\u4ee5\u5f80\u8fd9\u4e2a\u65b9\u5411\u804a [ ] Linux\u4e0b\u7a0b\u5e8f\u662f\u5982\u4f55\u88ab\u7f16\u8bd1\u94fe\u63a5\u7684\uff0c\u9759\u6001\u94fe\u63a5\u3001\u52a8\u6001\u94fe\u63a5\uff0c\u5982\u4f55\u88ab\u52a0\u8f7d\u6267\u884c\u7684\uff0c\u8fd9\u90e8\u5206\u63a8\u8350csapp\u7b2c\u4e03\u7ae0\uff0c\u6216\u8005\u7a0b\u5e8f\u5458\u81ea\u6211\u4fee\u517b [ ] \u5e38\u89c1\u547d\u4ee4\uff0c\u6bd4\u5982\u6027\u80fd\u76d1\u63a7top ps , IO\u76d1\u63a7 iostat\u591a\u719f\u6089\u4e0b\uff0c\u6bd4\u5982\u67e5\u770b\u7f51\u7edc\u8fde\u63a5\u72b6\u6001netstat\uff0clsof\u8fd9\u4e9b [ ] \u8fdb\u7a0b\u95f4\u901a\u4fe1\u673a\u5236\uff0c\u6700\u597d\u80fd\u591f\u8bf4\u4e00\u70b9\u5185\u6838\u5b9e\u73b0\uff0c\u6bd4\u5982\u7ba1\u9053\u5185\u6838\u662f\u5982\u4f55\u5b9e\u73b0\u7684(\u533f\u540dInode) \u8ba1\u7b97\u673a\u7f51\u7edc [ ] TCP\u662f\u91cd\u4e2d\u4e4b\u91cd\uff0c\u6bd4\u5982\u62e5\u585e\u63a7\u5236\u3001\u6d41\u91cf\u63a7\u5236\u3001\u5feb\u901f\u91cd\u4f20\u8fd9\u4e9b\uff0cnagle\u7b97\u6cd5\uff0c\u5217\u4e00\u4e9b\u5178\u578b\u95ee\u9898\u5427: \u65e2\u6709\u548c\u7f51\u7edc\u7f16\u7a0b\u7ed3\u5408\u7684\u95ee\u9898\uff0c\u4e5f\u6709\u95eeTCP\u539f\u7406\u672c\u8eab\u7684 [ ] - UDP \u5982\u4f55\u5b9e\u73b0\u53ef\u9760\u6570\u636e\u4f20\u8f93\uff1f TCP\u5982\u4f55\u62c6\u5305\u3001\u89e3\u51b3\u7c98\u5305 TIME_WAIT\u8fc7\u591a\u600e\u4e48\u9020\u6210\u7684\uff0c\u5982\u4f55\u89e3\u51b3 [ ] \u5957\u63a5\u5b57\u7f16\u7a0b\u57fa\u672c\u7684\u8981\u4f1a\uff0csocket bind listen connect close accept\u8fd9\u4e9b\u51fd\u6570\u4e5f\u8981\u6e05\u695a [ ] \u8fdb\u4e00\u6b65\u5c31\u662fLinux\u4e94\u5927IO\u6a21\u578b\uff0c\u4e09\u79cdIO\u590d\u7528\u65b9\u5f0f\uff0cselect poll\uff0cepoll [ ] ARP\u3001DHCP\u534f\u8bae\u600e\u4e48\u5de5\u4f5c\u7684 [ ] DNS\u534f\u8bae [ ] HTTP\u3001HTTPS\u534f\u8bae \u6570\u636e\u5e93 \u5c3d\u91cf\u505a\u5230\u80fd\u5199\u4e2d\u7b49\u96be\u5ea6\u7684\u8fde\u8868\u67e5\u8be2sql\uff0c\u4f1a\u5206\u7ec4\u3001\u4e00\u4e9b\u51fd\u6570count sum\u8fd9\u4e9b\uff0c\u8fd8\u6709\u6700\u91cd\u8981\u7684\u5c31\u662f\u6570\u636e\u5e93\u539f\u7406 [ ] \u7d22\u5f15\uff0c\u6709\u54ea\u4e9b\u5206\u7c7b\uff0cB+\u6811\uff0c\u54c8\u5e0c\u7d22\u5f15\uff0c\u5bf9\u4e8eB+\u6811\u76f8\u5173\u7684\u95ee\u9898\u4e5f\u8981\u719f\u6089 [ ] \u4e8b\u52a1\uff0c\u7279\u70b9(ACID), mysql\u5b58\u50a8\u5f15\u64ce\u9ed8\u8ba4\u652f\u6301\u7684\u4e8b\u52a1\u7ea7\u522b\u4e4b\u7c7b\u3002\u6211\u53cd\u6b63\u88ab\u95ee\u4e86\u4e24\u6b21 [ ] \u9501\uff0c\u5c01\u9501\u65b9\u5f0f\uff0c\u5982\u4f55\u907f\u514d\u6b7b\u9501 [ ] \u6570\u636e\u5e93\u8bbe\u8ba1\u5173\u7cfb\u8303\u5f0f\u4e5f\u53ef\u4ee5\u4e86\u89e3\u4e0b Reference https://mp.weixin.qq.com/s?__biz=Mzg4NjUxMzg5MA==&mid=2247490699&idx=1&sn=f3657ea66d71ced955d9274c1f2d75ec&chksm=cf99d506f8ee5c10996f781878901b4f521ee0adcc5a513bd52ac62bc8a961affbd34ece46d7&mpshare=1&scene=23&srcid=0502iJQetTeof8m6aJZU3SWF&sharer_sharetime=1619950301492&sharer_shareid=1d893292329c3888b44c4b5327ab9d06#rd","title":"\u5b66\u4e60\u8def\u7ebf"},{"location":"%E7%A7%8B%E6%8B%9B%E5%86%B2%E5%88%BA/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/#c","text":"[ ] \u5305\u62ec\u57fa\u672c\u5173\u952e\u5b57\u542b\u4e49\uff0c\u8bed\u8a00\u5e95\u5c42\u5b9e\u73b0\u673a\u5236(\u865a\u51fd\u6570\u3001\u5f15\u7528\u7b49)\uff0c\u9762\u5411\u5bf9\u8c61\u8fd8\u6709\u6a21\u677f\u6cdb\u578b\u7f16\u7a0b [ ] \u7f16\u8bd1\u94fe\u63a5\u673a\u5236\u3001\u5185\u5b58\u5e03\u5c40\u3001\u5bf9\u8c61\u6a21\u578b [ ] \u667a\u80fd\u6307\u9488 RAII \uff0c\u624b\u5199\u7b80\u5355\u7248\u667a\u80fd\u6307\u9488 [ ] C++11 \u90e8\u5206\u65b0\u7279\u6027 \u53f3\u503c\u5f15\u7528\u3001\u5b8c\u7f8e\u8f6c\u53d1\u7b49 [ ] \u90e8\u5206\u8bbe\u8ba1\u6a21\u5f0f\uff0c\u6bd4\u5982\u5b89\u5168\u5b9e\u73b0\u5355\u4f8b\u3001\u89c2\u5bdf\u8005\u6a21\u5f0f\u8fd9\u4e9b [ ] STL\u6e90\u7801 \u8fd9\u90e8\u5206\u6709\u65f6\u95f4\u7684\u53ef\u4ee5\u627e\u5230C++ primer\u3001effective\u7cfb\u5217\u3001 STL\u6e90\u7801\u5256\u6790\u76f8\u5173\u7ae0\u8282\u8bfb\u4e00\u8bfb\u3002 \u6bd4\u8f83\u91cd\u8981\u7684\u662f\u6df1\u5ea6\u63a2\u7d22C++\u5bf9\u8c61\u6a21\u578b\u8fd9\u672c\u4e66\uff0c\u8fd9\u672c\u4e66\u524d\u9762\u4e00\u90e8\u5206\u662f\u5c06\u5bf9\u8c61\u6a21\u578b\u7684\u6bd4\u8f83\u9002\u5408\u4e86\u89e3C++\u5e95\u5c42\u4e00\u4e9b\u673a\u5236\uff0c\u5efa\u8bae\u6709\u7a7a\u5fc5\u8bfb","title":"C++\u8bed\u8a00\u57fa\u7840"},{"location":"%E7%A7%8B%E6%8B%9B%E5%86%B2%E5%88%BA/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/#_1","text":"\u5237\u9898\uff0c\u7cfb\u7edf\u7684\u5206\u7c7b\u5b66\u4e60\uff0c\u63d0\u5347\u5f88\u5feb [ ] \u94fe\u8868\uff0c\u4ee5\u53ca\u5404\u79cd\u9898\u578b\uff0c\u53bbleetcode\u6309\u6807\u7b7e\u5237 [ ] \u4e8c\u53c9\u6811\u3001\u5e73\u8861\u4e8c\u53c9\u6811 [ ] \u4e8c\u5206\u67e5\u627e\u4ee5\u53ca\u51e0\u79cd\u53d8\u4f53\uff0c\u6bd4\u5982lower_bound upper_bound [ ] \u51e0\u5927\u6392\u5e8f\u7b97\u6cd5\uff0c\u7a33\u5b9a\u6027\uff0c\u6781\u7aef\u60c5\u51b5\uff0c\u505a\u5230\u624b\u5199\u5feb\u6392\u3001\u5806\u6392bug free\uff0c\u4e86\u89e3\u4e0b\u5feb\u6392\u4f18\u5316\u601d\u8def [ ] hash [ ] \u8d2a\u5fc3\u3001\u56de\u6eaf\u3001dfs\u3001bfs\uff0c\u52a8\u6001\u89c4\u5212 [ ] Tire\u6811 [ ] \u624b\u5199LRU\uff0c \u53cc\u5411\u94fe\u8868+hash [ ] \u6d77\u91cf\u6570\u636e\u5904\u7406\u601d\u8def [ ] \u53ef\u4ee5\u4e86\u89e3\u4e00\u4e0bKMP\u8fd9\u7c7b\u5b57\u7b26\u4e32\u5339\u914d\u7b97\u6cd5 [ ] \u591a\u7ebf\u7a0b [ ] - \u57fa\u672c\u7684POSIX\u7ebf\u7a0bapi \u4e92\u65a5\u9501\u548c\u6761\u4ef6\u53d8\u91cf\u6211\u89c9\u5f97\u5fc5\u987b\u638c\u63e1\u7684 \u5176\u5b83\u7684\u5c31\u770b\u4f60\u53c8\u6ca1\u6709\u65f6\u95f4\u4e86 [ ] \u9879\u76ee [ ] - \u7406\u60f3\u7684\u9879\u76ee\u5e94\u8be5\u662f\u51fa\u4e8e\u81ea\u5df1\u7684\u5174\u8da3\u505a\u7684\u5404\u79cd\u8f6e\u5b50\uff0c\u6bd4\u5982http ftp\u670d\u52a1\u5668\uff0c\u5b9e\u73b0\u52a0\u5bc6\u7b97\u6cd5\uff0c\u6587\u4ef6\u538b\u7f29\uff0cp2p\u804a\u5929\uff0c\u7f51\u7edc\u5e93\uff0c\u751a\u81f3mini os\uff0ck-v\u6570\u636e\u5e93\u3002\u4f46\u662f\u77ed\u671f\u5185\u8fd9\u4e9b\u53ef\u80fd\u90fd\u4e0d\u662f\u5f88\u597d\u51c6\u5907\uff0c\u6240\u4ee5\u5927\u5bb6\u6309\u7167\u81ea\u5df1\u5df2\u6709\u7684\u5b8c\u5584\u4e0b\u5427\u3002\u505a\u5230\u6709\u6d4b\u8bd5\u3001\u6709\u6027\u80fd\u6539\u8fdb\u65b9\u9762\u7684\u601d\u8003\u3002 \u6211\u7684\u7ecf\u9a8c\u662f\u4e03\u516b\u573a\u4e0b\u6765\u9879\u76ee\u63d0\u95ee\u65f6\u95f4\u6ca1\u8d85\u8fc710\u5206\u949f\uff0c\u800c\u4e14\u63d0\u95ee\u7684\u4e3b\u8981\u70b9\u662f\u5982\u4f55\u6d4b\u8bd5\u3001\u5982\u4f55\u6539\u8fdb\u7684\uff0c\u4ee5\u53ca\u6548\u679c [ ] \u5f00\u6e90\u7ec4\u4ef6 [ ] - redis nginx \u8fd9\u4e9b\u90fd\u662f\u6700\u597d\u4e86\u89e3\u4e0b\u539f\u7406\uff0c\u5c31\u7b97\u6ca1\u7528\u8fc7\uff0c\u4e5f\u53bb\u641c\u51e0\u7bc7\u535a\u5ba2\u770b\u770b\u3002\u5343\u4e07\u522b\u4e00\u70b9\u90fd\u8bf4\u4e0d\u51fa\u6765","title":"\u7b97\u6cd5"},{"location":"%E7%A7%8B%E6%8B%9B%E5%86%B2%E5%88%BA/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/#linux","text":"[ ] \u8fdb\u7a0b\u7ebf\u7a0b\uff0c\u4e00\u5e76\u5b66\u4e60fork vfork clone\u8fd9\u4e9b\u7cfb\u7edf\u8c03\u7528 [ ] Linux\u5185\u5b58\u7ba1\u7406\uff0c \u5305\u62ec\u7269\u7406\u5185\u5b58\u3001\u865a\u62df\u5185\u5b58\u3001\u5206\u9875\u548c\u5206\u6bb5\u673a\u5236\u3001slab\u5206\u914d\u5668\u8fd9\u4e9b\u4e1c\u897f\uff0c\u9762\u8bd5\u5b98\u95ee\u5230malloc\u8fd9\u4e9b\u90fd\u80fd\u6269\u5c55\u8bb2\u4e00\u8bb2\uff0c\u4e00\u5e76\u9700\u8981\u4e86\u89e3brk malloc\u8fd9\u4e9b\u51fd\u6570\u5185\u90e8\u5b9e\u73b0 [ ] \u4e86\u89e3\u6587\u4ef6\u7cfb\u7edf\uff0c\u7279\u522b\u662fVPS\uff0c\u770b\u5b8c\u8fd9\u90e8\u5206\uff0c\u5bf9\u4e8e\u8f6f\u786c\u8fde\u63a5\u548cLinux\u8bfb\u6587\u4ef6\u662f\u600e\u6837\u4e00\u4e2a\u8fc7\u7a0b\u8fd9\u7c7b\u95ee\u9898\u5c31\u5f88\u7b80\u5355 [ ] \u6b7b\u9501\u76f8\u5173\u3001\u8fd8\u6709\u4fe1\u53f7\u91cf\u540c\u6b65\u539f\u8bed\u600e\u4e48\u5b9e\u73b0\u6d88\u8d39\u8005\u751f\u4ea7\u8005\u3001\u8bfb\u8005\u5199\u8005\u3001\u54f2\u5b66\u5bb6\u5c31\u9910\u8fd9\u4e9b [ ] Linux \u8fdb\u7a0b\u8c03\u5ea6\u53ef\u4ee5\u4e86\u89e3\u4e0b\uff0c\u6bd4\u5982CFS [ ] \u8fd8\u6709\u5c31\u662fLinux\u4e0b\u8fdb\u7a0b\u7684\u5e03\u5c40\uff0c\u8fd9\u5176\u5b9e\u95ee\u5230C++\u5185\u5b58\u5e03\u5c40\u5c31\u53ef\u4ee5\u5f80\u8fd9\u4e2a\u65b9\u5411\u804a [ ] Linux\u4e0b\u7a0b\u5e8f\u662f\u5982\u4f55\u88ab\u7f16\u8bd1\u94fe\u63a5\u7684\uff0c\u9759\u6001\u94fe\u63a5\u3001\u52a8\u6001\u94fe\u63a5\uff0c\u5982\u4f55\u88ab\u52a0\u8f7d\u6267\u884c\u7684\uff0c\u8fd9\u90e8\u5206\u63a8\u8350csapp\u7b2c\u4e03\u7ae0\uff0c\u6216\u8005\u7a0b\u5e8f\u5458\u81ea\u6211\u4fee\u517b [ ] \u5e38\u89c1\u547d\u4ee4\uff0c\u6bd4\u5982\u6027\u80fd\u76d1\u63a7top ps , IO\u76d1\u63a7 iostat\u591a\u719f\u6089\u4e0b\uff0c\u6bd4\u5982\u67e5\u770b\u7f51\u7edc\u8fde\u63a5\u72b6\u6001netstat\uff0clsof\u8fd9\u4e9b [ ] \u8fdb\u7a0b\u95f4\u901a\u4fe1\u673a\u5236\uff0c\u6700\u597d\u80fd\u591f\u8bf4\u4e00\u70b9\u5185\u6838\u5b9e\u73b0\uff0c\u6bd4\u5982\u7ba1\u9053\u5185\u6838\u662f\u5982\u4f55\u5b9e\u73b0\u7684(\u533f\u540dInode)","title":"Linux"},{"location":"%E7%A7%8B%E6%8B%9B%E5%86%B2%E5%88%BA/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/#_2","text":"[ ] TCP\u662f\u91cd\u4e2d\u4e4b\u91cd\uff0c\u6bd4\u5982\u62e5\u585e\u63a7\u5236\u3001\u6d41\u91cf\u63a7\u5236\u3001\u5feb\u901f\u91cd\u4f20\u8fd9\u4e9b\uff0cnagle\u7b97\u6cd5\uff0c\u5217\u4e00\u4e9b\u5178\u578b\u95ee\u9898\u5427: \u65e2\u6709\u548c\u7f51\u7edc\u7f16\u7a0b\u7ed3\u5408\u7684\u95ee\u9898\uff0c\u4e5f\u6709\u95eeTCP\u539f\u7406\u672c\u8eab\u7684 [ ] - UDP \u5982\u4f55\u5b9e\u73b0\u53ef\u9760\u6570\u636e\u4f20\u8f93\uff1f TCP\u5982\u4f55\u62c6\u5305\u3001\u89e3\u51b3\u7c98\u5305 TIME_WAIT\u8fc7\u591a\u600e\u4e48\u9020\u6210\u7684\uff0c\u5982\u4f55\u89e3\u51b3 [ ] \u5957\u63a5\u5b57\u7f16\u7a0b\u57fa\u672c\u7684\u8981\u4f1a\uff0csocket bind listen connect close accept\u8fd9\u4e9b\u51fd\u6570\u4e5f\u8981\u6e05\u695a [ ] \u8fdb\u4e00\u6b65\u5c31\u662fLinux\u4e94\u5927IO\u6a21\u578b\uff0c\u4e09\u79cdIO\u590d\u7528\u65b9\u5f0f\uff0cselect poll\uff0cepoll [ ] ARP\u3001DHCP\u534f\u8bae\u600e\u4e48\u5de5\u4f5c\u7684 [ ] DNS\u534f\u8bae [ ] HTTP\u3001HTTPS\u534f\u8bae","title":"\u8ba1\u7b97\u673a\u7f51\u7edc"},{"location":"%E7%A7%8B%E6%8B%9B%E5%86%B2%E5%88%BA/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/#_3","text":"\u5c3d\u91cf\u505a\u5230\u80fd\u5199\u4e2d\u7b49\u96be\u5ea6\u7684\u8fde\u8868\u67e5\u8be2sql\uff0c\u4f1a\u5206\u7ec4\u3001\u4e00\u4e9b\u51fd\u6570count sum\u8fd9\u4e9b\uff0c\u8fd8\u6709\u6700\u91cd\u8981\u7684\u5c31\u662f\u6570\u636e\u5e93\u539f\u7406 [ ] \u7d22\u5f15\uff0c\u6709\u54ea\u4e9b\u5206\u7c7b\uff0cB+\u6811\uff0c\u54c8\u5e0c\u7d22\u5f15\uff0c\u5bf9\u4e8eB+\u6811\u76f8\u5173\u7684\u95ee\u9898\u4e5f\u8981\u719f\u6089 [ ] \u4e8b\u52a1\uff0c\u7279\u70b9(ACID), mysql\u5b58\u50a8\u5f15\u64ce\u9ed8\u8ba4\u652f\u6301\u7684\u4e8b\u52a1\u7ea7\u522b\u4e4b\u7c7b\u3002\u6211\u53cd\u6b63\u88ab\u95ee\u4e86\u4e24\u6b21 [ ] \u9501\uff0c\u5c01\u9501\u65b9\u5f0f\uff0c\u5982\u4f55\u907f\u514d\u6b7b\u9501 [ ] \u6570\u636e\u5e93\u8bbe\u8ba1\u5173\u7cfb\u8303\u5f0f\u4e5f\u53ef\u4ee5\u4e86\u89e3\u4e0b","title":"\u6570\u636e\u5e93"},{"location":"%E7%A7%8B%E6%8B%9B%E5%86%B2%E5%88%BA/%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/#reference","text":"https://mp.weixin.qq.com/s?__biz=Mzg4NjUxMzg5MA==&mid=2247490699&idx=1&sn=f3657ea66d71ced955d9274c1f2d75ec&chksm=cf99d506f8ee5c10996f781878901b4f521ee0adcc5a513bd52ac62bc8a961affbd34ece46d7&mpshare=1&scene=23&srcid=0502iJQetTeof8m6aJZU3SWF&sharer_sharetime=1619950301492&sharer_shareid=1d893292329c3888b44c4b5327ab9d06#rd","title":"Reference"},{"location":"%E7%A7%8B%E6%8B%9B%E5%86%B2%E5%88%BA/%E9%9D%A2%E7%BB%8F/","text":"\u817e\u8baf\u540e\u53f0\u5f00\u53d1\u5de5\u7a0b\u5e08\uff08\u5b9e\u4e60\uff09 \u4e00\u9762\u9762\u7ecf/\u5fae\u4fe1\u652f\u4ed8 \u64cd\u4f5c\u7cfb\u7edf 1\u3001\u4f60\u77e5\u9053\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u7684\u533a\u522b\u5417\uff1f 2\u3001\u4ec0\u4e48\u60c5\u51b5\u4e0b\u4f7f\u7528\u591a\u8fdb\u7a0b\uff0c\u4ec0\u4e48\u60c5\u51b5\u7528\u591a\u7ebf\u7a0b\uff1f\u4e3a\u4ec0\u4e48\uff1f 3\u3001\u4f60\u6709\u5199\u8fc7\u591a\u7ebf\u7a0b\u5417\uff1f 4\u3001\u5728C++\u600e\u4e48\u5199\u591a\u7ebf\u7a0b\uff1f 5\u3001\u4f60\u77e5\u9053\u534f\u7a0b\u5417\uff1f 6\u3001\u4ec0\u4e48\u60c5\u51b5\u4e0b\u9002\u5408\u7528\u534f\u7a0b\u5462\uff1f 7\u3001\u4ec0\u4e48\u8bed\u8a00\u652f\u6301\u534f\u7a0b\uff1fC++\u652f\u6301\u534f\u7a0b\u5417\uff1f 8\u3001\u89e3\u91ca\u4e00\u4e0b\u7528\u6237\u6001\u548c\u5185\u6838\u6001\uff1f 9\u3001\u4f60\u6709\u4f7f\u7528Linux\u5417\uff1f 10\u3001I/O\u591a\u8def\u590d\u7528\u4e86\u89e3\u5417\uff1f \u8ba1\u7b97\u673a\u7f51\u7edc\uff1a 1\u3001\u8bf4\u4e00\u4e0bTCP\u548cUDP\u7684\u533a\u522b\uff1f 2\u3001TCP\u534f\u8bae\u600e\u4e48\u505a\u5230\u53ef\u9760\u7684\uff1f 3\u3001\u4e3a\u4ec0\u4e48TCP\u9700\u8981\u4e09\u6b21\u63e1\u624b\uff1f 4\u3001\u5728\u6d4f\u89c8\u5668\u8f93\u5165\u4e00\u4e2a\u7f51\u5740\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1f 5\u3001HTTP\u534f\u8bae\u90fd\u6709\u54ea\u4e9b\u7c7b\u578b\u7684\u8bf7\u6c42\uff1f 6\u3001GET\u548cPOST\u7684\u533a\u522b\uff1f \u6570\u636e\u5e93\uff1a 1\u3001\u6570\u636e\u5e93\u7684ACID\u7279\u6027\u662f\u4ec0\u4e48\uff1f 2\u3001\u4f60\u4e86\u89e3Mysql\u5417\uff1f\u5b83\u6709\u51e0\u79cd\u5f15\u64ce\uff1f C++: 1\u3001\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u662f\u865a\u51fd\u6570\u5417\uff1f\u4e3a\u4ec0\u4e48\uff1f 2\u3001\u4f60\u7528\u54ea\u4e2a\u7248\u672c\u5462\uff1fC++11\u6709\u4ec0\u4e48\u7279\u6027\uff1f 3\u3001C++\u667a\u80fd\u6307\u9488\u4e00\u5b9a\u7ebf\u7a0b\u5b89\u5168\u5417\uff1f \u6df1\u4fe1\u670d\u6625\u62dbC++\u9762\u7ecf \u4e00\u9762 static\u5173\u952e\u8bcd\u3001const\u5173\u952e\u8bcd C\u5982\u4f55\u907f\u514d\u5185\u5b58\u6cc4\u6f0f\uff08\u81ea\u5df1\u7528\u53d8\u91cf\u8ba1\u6570\uff09 C++\u600e\u4e48\u5b9e\u73b0\u52a8\u6001\u591a\u6001\u3001\u9759\u6001\u591a\u6001 STL\u91cc\u9762vector\u548c\u6570\u7ec4\u533a\u522b map\u7528\u7684\u6570\u636e\u7ed3\u6784\uff0c\u7ea2\u9ed1\u6811\u7279\u70b9\uff0c\u4e0e\u5e73\u8861\u4e8c\u53c9\u6811\u533a\u522b \u94fe\u8868\u548c\u6570\u7ec4\u533a\u522b \u5b57\u7b26\u4e32\u957f\u5ea6\u5de6\u79fb\uff08\u7b97\u6cd5\uff09 Linux\u7edf\u8ba1\u6587\u4ef6\u5185\u5bb9\u884c\u6570 TCP\u5982\u4f55\u4fdd\u8bc1\u53ef\u9760\u6027 UDP\u5982\u4f55\u5b9e\u73b0\u53ef\u9760\u6027\uff08\u4ecb\u7ecd\u4f7f\u7528\u81ea\u5df1\u9879\u76ee\u7684\u65b9\u6cd5\u4fdd\u8bc1\uff09\u4f60\u7528\u7684\u662f\u5e94\u7528\u7a0b\u5e8f\u4fdd\u8bc1\u7a0b\u5e8f\u53ef\u9760\u6027\uff1f \u5b9e\u4e60\u591a\u4e45\uff1f\u505a\u4e86\u54ea\u4e9b\u9879\u76ee\uff1f \u79cb\u62dboffer\u6709\u5417 sizeof\u548cstrlen\u533a\u522b\uff0csizeof\u8ba1\u7b97\u7ed3\u6784\u4f53\u7684\u5927\u5c0f\uff08\u7ed3\u6784\u4f53\u5bf9\u9f50\uff09 strcpy\u7684\u7f3a\u70b9\uff0c\u4e0e\u4e4b\u76f8\u5173\u7684\u7f3a\u70b9\u51fd\u6570\u6709\u54ea\u4e9b\uff08memcpy\uff08memmove\uff09...\uff09 \u4e8c\u9762 \u624b\u6495memcpy \u516c\u53f8\u5b9e\u4e60\u4e3b\u8981\u505a\u4e86\u54ea\u4e9b\u9879\u76ee\uff0c\u78b0\u5230\u7684\u96be\u70b9 32\u4f4d\u7cfb\u7edfmalloc\u6700\u5927\u7684\u7533\u8bf7\u5185\u5b58\u591a\u5c11 \u5355\u94fe\u8868\u5982\u4f55\u67e5\u627e\u73af\uff08\u53ea\u8bb2\u601d\u8def\uff0c\u6ca1\u8bb2\u5168\uff09 \u5c0f\u7c73\u6625\u62dbC++\u9762\u7ecf \u5c0f\u7c73\u4e00\u9762\uff1a \u7b97\u6cd5\uff1a\u8fd4\u56de\u5012\u6570\u7b2cK\u4e2a\u94fe\u8868 \u6570\u636e\u7ed3\u6784\u7528\u8fc7\u54ea\u4e9b \u591a\u8fdb\u7a0b\uff0c\u591a\u7ebf\u7a0b\u4ee5\u53ca\u5982\u4f55\u901a\u4fe1 \u591a\u7ebf\u7a0b\u4e4b\u95f4\u5982\u4f55\u533a\u5206 \u5185\u5b58\u7ba1\u7406/\u5185\u5b58\u5e03\u5c40 \u5185\u5b58\u6cc4\u6f0f/\u8d8a\u754c\u548c\u6b7b\u673a\u60c5\u51b5\uff0c\u5982\u4f55\u68c0\u67e5\u548c\u89e3\u51b3 \u9879\u76ee\u76f8\u5173 \u5c0f\u7c73\u4e8c\u9762\uff1a \u7b80\u5386\u9879\u76ee\uff1a\u5185\u5b58\u6cc4\u6f0f\uff0cQT\u81ea\u52a8\u56de\u6536\u673a\u5236 \u9879\u76ee\u4ecb\u7ecd\u5e76\u63d0\u95ee\u95ee\u9898 \u8fdb\u7a0b\u548c\u7ebf\u7a0b\u533a\u522b \u81ea\u65cb\u9501\u548c\u4e92\u65a5\u9501\uff0c\u4f7f\u7528\u573a\u666f","title":"\u9762\u7ecf"},{"location":"%E7%A7%8B%E6%8B%9B%E5%86%B2%E5%88%BA/%E9%9D%A2%E7%BB%8F%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/","text":"\u8bed\u8a00\u57fa\u7840 \u865a\u51fd\u6570 1.\u5728\u6709\u7ee7\u627f\u5173\u7cfb\u7684\u7236\u5b50\u7c7b\u4e2d\uff0c\u6784\u5efa\u548c\u6790\u6784\u4e00\u4e2a\u5b50\u7c7b\u5bf9\u8c61\u65f6\uff0c\u7236\u5b50\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u7684\u6267\u884c\u987a\u5e8f\u5206\u522b\u662f\u600e\u6837\u7684\uff1f 2.\u5728\u6709\u7ee7\u627f\u5173\u7cfb\u7684\u7c7b\u4f53\u7cfb\u4e2d\uff0c\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u4e00\u5b9a\u8981\u7533\u660e\u4e3a virtual \u5417\uff1f\u5982\u679c\u4e0d\u7533\u660e\u4e3a virtual \u4f1a\u600e\u6837\uff1f 3.\u4ec0\u4e48\u662f C++ \u591a\u6001\uff1fC++ \u591a\u6001\u7684\u5b9e\u73b0\u539f\u7406\u662f\u4ec0\u4e48\uff1f 4.\u4ec0\u4e48\u662f\u865a\u51fd\u6570\uff1f\u865a\u51fd\u6570\u7684\u5b9e\u73b0\u539f\u7406\u662f\u4ec0\u4e48\uff1f 5.\u4ec0\u4e48\u662f\u865a\u8868\uff1f\u865a\u8868\u7684\u5185\u5b58\u7ed3\u6784\u5e03\u5c40\u5982\u4f55\uff1f\u865a\u8868\u7684\u7b2c\u4e00\u9879\uff08\u6216\u7b2c\u4e8c\u9879\uff09\u662f\u4ec0\u4e48\uff1f \u83f1\u5f62\u7ee7\u627f\uff08\u7c7bD\u540c\u65f6\u7ee7\u627fB\u548cC\uff0cB\u548cC\u53c8\u7ee7\u627f\u81eaA\uff09\u4f53\u7cfb\u4e0b\uff0c\u865a\u8868\u5728\u5404\u4e2a\u7c7b\u4e2d\u7684\u5e03\u5c40\u5982\u4f55\uff1f\u5982\u679c\u7c7bB\u548c\u7c7bC\u540c\u65f6\u6709\u4e00\u4e2a\u6210\u5458\u53d8\u4e86m\uff0cm\u5982\u4f55\u5728D\u5bf9\u8c61\u7684\u5185\u5b58\u5730\u5740\u4e0a\u5206\u5e03\u7684\uff1f\u662f\u5426\u4f1a\u76f8\u4e92\u8986\u76d6\uff1f","title":"\u9762\u7ecf\u95ee\u9898\u603b\u7ed3"},{"location":"%E7%A7%8B%E6%8B%9B%E5%86%B2%E5%88%BA/%E9%9D%A2%E7%BB%8F%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/#_1","text":"\u865a\u51fd\u6570 1.\u5728\u6709\u7ee7\u627f\u5173\u7cfb\u7684\u7236\u5b50\u7c7b\u4e2d\uff0c\u6784\u5efa\u548c\u6790\u6784\u4e00\u4e2a\u5b50\u7c7b\u5bf9\u8c61\u65f6\uff0c\u7236\u5b50\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u7684\u6267\u884c\u987a\u5e8f\u5206\u522b\u662f\u600e\u6837\u7684\uff1f 2.\u5728\u6709\u7ee7\u627f\u5173\u7cfb\u7684\u7c7b\u4f53\u7cfb\u4e2d\uff0c\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u4e00\u5b9a\u8981\u7533\u660e\u4e3a virtual \u5417\uff1f\u5982\u679c\u4e0d\u7533\u660e\u4e3a virtual \u4f1a\u600e\u6837\uff1f 3.\u4ec0\u4e48\u662f C++ \u591a\u6001\uff1fC++ \u591a\u6001\u7684\u5b9e\u73b0\u539f\u7406\u662f\u4ec0\u4e48\uff1f 4.\u4ec0\u4e48\u662f\u865a\u51fd\u6570\uff1f\u865a\u51fd\u6570\u7684\u5b9e\u73b0\u539f\u7406\u662f\u4ec0\u4e48\uff1f 5.\u4ec0\u4e48\u662f\u865a\u8868\uff1f\u865a\u8868\u7684\u5185\u5b58\u7ed3\u6784\u5e03\u5c40\u5982\u4f55\uff1f\u865a\u8868\u7684\u7b2c\u4e00\u9879\uff08\u6216\u7b2c\u4e8c\u9879\uff09\u662f\u4ec0\u4e48\uff1f \u83f1\u5f62\u7ee7\u627f\uff08\u7c7bD\u540c\u65f6\u7ee7\u627fB\u548cC\uff0cB\u548cC\u53c8\u7ee7\u627f\u81eaA\uff09\u4f53\u7cfb\u4e0b\uff0c\u865a\u8868\u5728\u5404\u4e2a\u7c7b\u4e2d\u7684\u5e03\u5c40\u5982\u4f55\uff1f\u5982\u679c\u7c7bB\u548c\u7c7bC\u540c\u65f6\u6709\u4e00\u4e2a\u6210\u5458\u53d8\u4e86m\uff0cm\u5982\u4f55\u5728D\u5bf9\u8c61\u7684\u5185\u5b58\u5730\u5740\u4e0a\u5206\u5e03\u7684\uff1f\u662f\u5426\u4f1a\u76f8\u4e92\u8986\u76d6\uff1f","title":"\u8bed\u8a00\u57fa\u7840"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%B9%96%E7%A7%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BD%91%E8%AF%BE/","text":"3.7 MAC\u5730\u5740 \u53c8\u79f0\u786c\u4ef6\u5730\u5740\uff0c\u7269\u7406\u5730\u5740\uff0c\u4f46\u4e0d\u5c5e\u4e8e\u7269\u7406\u5c42\uff0c\u5c5e\u4e8e\u6570\u636e\u94fe\u8def\u5c42\u3002 \u4f8b\uff1aXX-XX-XX-XX-XX-XX 3.7 IP\u5730\u5740 \u662f\u56e0\u7279\u7f51\u4e0a\u4e3b\u673a\u4e0e\u8def\u7531\u5668\u4f7f\u7528\u7684\u5730\u5740\uff0c\u7528\u4e8e\u6807\u8bc6\uff1a1 \u7f51\u7edc\u7f16\u53f7 2 \u540c\u4e00\u7f51\u7edc\u4e0a\u7684\u4e0d\u540c\u4e3b\u673a\u3002 \u6570\u636e\u5305\u8f6c\u53d1\u8fc7\u7a0b\u79cdIP\u5730\u5740\u4e0eMAC\u5730\u5740\u7684\u53d8\u5316\uff1a1 \u6e90IP\u5730\u5740\u548c\u76ee\u7684IP\u5730\u5740\u4e0d\u53d8\uff1b2 \u6e90MAC\u5730\u5740\u548c\u76ee\u7684MAC\u5730\u5740\u9010\u4e2a\u94fe\u8def\u6539\u53d8\u3002 3.8 \u5730\u5740\u89e3\u6790\u534f\u8baeARP 3.10 \u751f\u6210\u6811\u534f\u8baeSTP \u5728\u589e\u52a0\u5197\u4f59\u94fe\u8def\u63d0\u9ad8\u7f51\u7edc\u53ef\u9760\u6027\u7684\u540c\u65f6\u907f\u514d\u7f51\u7edc\u73af\u8def\u5e26\u6765\u7684\u95ee\u9898\u3002 \u4e0d\u8bba\u4ea4\u6362\u673a\u4e4b\u95f4\u91c7\u7528\u600e\u6837\u7684\u7269\u7406\u8fde\u63a5\uff0c\u4ea4\u6362\u673a\u90fd\u80fd\u81ea\u52a8\u8ba1\u7b97\u5e76\u6784\u5efa\u4e00\u4e2a\u903b\u8f91\u4e0a\u6ca1\u6709\u73af\u8def\u7684\u7f51\u7edc\u3002\u5176\u903b\u8f91\u62d3\u6251\u7ed3\u6784\u5fc5\u987b\u662f\u6811\u5f62\u7684\u3002 4.4 IP\u6570\u636e\u62a5\u7684\u53d1\u9001\u548c\u8f6c\u53d1\u8fc7\u7a0b \u6e90\u4e3b\u673a\u5982\u4f55\u77e5\u9053\u76ee\u7684\u4e3b\u673a\u662f\u5426\u4e0e\u81ea\u5df1\u5728\u540c\u4e00\u4e2a\u7f51\u7edc\u4e2d\uff1f \u6bd4\u8f83\u7f51\u7edc\u5730\u5740 4.5 \u9759\u6001\u8def\u7531\u914d\u7f6e\u53ca\u5176\u53ef\u80fd\u4ea7\u751f\u7684\u8def\u7531\u73af\u8def\u95ee\u9898 \uff08pass\uff09 4.6.1 \u8def\u7531\u9009\u62e9\u534f\u8bae\u6982\u8ff0\uff08pass\uff09 \u9759\u6001\u8def\u7531\u9009\u62e9 \u52a8\u6001\u8def\u7531\u9009\u62e9 \u56e0\u7279\u7f51\u91c7\u7528\u5206\u5c42\u6b21\u7684\u8def\u7531\u9009\u62e9\u534f\u8bae 4.6.2 \u8def\u7531\u4fe1\u606f\u534f\u8baeRIP\u7684\u57fa\u672c\u5de5\u4f5c\u539f\u7406\uff08pass\uff09 RIP\u8ba4\u4e3a\u597d\u7684\u8def\u7531\u5c31\u662f\u8ddd\u79bb\u77ed\u7684\u8def\u7531\uff0c\u4e5f\u5c31\u662f\u6240\u901a\u8fc7\u8def\u7531\u5668\u6700\u5c11\u7684\u8def\u7531\u3002 4.6.3 \u5f00\u53d1\u6700\u77ed\u8def\u5f84\u4f18\u5148OSPF\u7684\u57fa\u672c\u5de5\u4f5c\u539f\u7406\uff08pass\uff09 4.6.4 \u8fb9\u754c\u7f51\u5173\u534f\u8baeBGP\u7684\u57fa\u672c\u5de5\u4f5c\u539f\u7406\uff08pass\uff09 4.7 IPv4\u6570\u636e\u62a5\u7684\u9996\u90e8\u683c\u5f0f \u9996\u90e8\u68c0\u9a8c\u548c\uff1a IP\u5c42\u672c\u8eab\u4e0d\u63d0\u4f9b\u53ef\u9760\u4f20\u9001\u670d\u52a1\u3002IPv6\u4e2d\u4e0d\u518d\u8ba1\u7b97\u9996\u90e8\u6821\u9a8c\u548c\u3002 4.8 \u7f51\u9645\u63a7\u5236\u62a5\u6587\u534f\u8baeICMP \u4e3a\u4e86\u66f4\u6709\u6548\u8f6c\u53d1IP\u6570\u636e\u62a5\u548c\u63d0\u9ad8\u4ea4\u4ed8\u7684\u673a\u4f1a\u3002 \u4e3b\u673a\u6216\u8def\u7531\u5668\u4f7f\u7528ICMP\u6765\u53d1\u9001\u5dee\u9519\u62a5\u544a\u62a5\u6587\u548c\u8be2\u95ee\u62a5\u6587\u3002 ICMP\u62a5\u6587\u88ab\u5c01\u88c5\u5728IP\u6570\u636e\u62a5\u4e2d\u53d1\u9001\u3002 4.9 \u865a\u62df\u4e13\u7528\u7f51VPN\u4e0e\u7f51\u7edc\u5730\u5740NAT Virtual Private Network \u7f51\u7edc\u5730\u5740\u8f6c\u6362NAT Network Address Translation \u4e3a\u4e86\u51cf\u7f13IPv4\u5730\u5740\u7a7a\u95f4\u8017\u5c3d\u7684\u901f\u5ea6\uff0c1994\u5e74\u63d0\u51fa\u4e86\u4e00\u79cd\u7f51\u7edc\u5730\u5740\u8f6c\u6362NAT\u7684\u65b9\u6cd5\u518d\u6b21\u7f13\u89e3\u4e86IPv4\u5730\u5740\u7a7a\u95f4\u5373\u5c06\u8017\u5c3d\u7684\u95ee\u9898\u3002 NAT \u80fd\u4f7f\u5927\u91cf\u4f7f\u7528\u5185\u90e8\u4e13\u7528\u5730\u5740\u7684\u4e13\u7528\u7f51\u7edc\u7528\u6237\u5171\u4eab \u5c11\u91cf\u5916\u90e8\u5168\u7403\u5730\u5740 \u6765\u8bbf\u95ee\u56e0\u7279\u7f51\u4e0a\u7684\u4e3b\u673a\u548c\u8d44\u6e90\u3002 NAPT 5.1 \u8fd0\u8f93\u5c42\u6982\u8ff0 \u7269\u7406\u5c42\u3001\u6570\u636e\u94fe\u8def\u5c42\u548c\u7f51\u7edc\u5c42\u5171\u540c\u89e3\u51b3\u4e86\u5c06\u4e3b\u673a\u901a\u8fc7\u5f02\u6784\u7f51\u7edc\u4e92\u8054\u8d77\u6765\u7684\u95ee\u9898\u3002 \u5b9e\u9645\u4e0a\u5728\u8ba1\u7f51\u4e2d\u901a\u4fe1\u7684\u771f\u6b63\u5b9e\u4f53\u4f7f\u4f4d\u4e8e\u901a\u4fe1\u4e24\u7aef\u4e3b\u673a\u4e2d\u7684\u8fdb\u7a0b\u3002 \u8fd0\u8f93\u5c42\u534f\u8bae\u53c8\u79f0\u7aef\u5230\u7aef\u534f\u8bae\u3002 5.2 \u8fd0\u8f93\u5c42\u7aef\u53e3\u53f7\u3001\u590d\u7528\u4e0e\u5206\u7528 \u8fdb\u7a0b\u6807\u8bc6\u7b26PID\uff0c\u4e0d\u540cOS\u4e0d\u540c\u3002 \u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165\u7f51\u7ad9enter\u540e\u53d1\u751f\u4e86\u4ec0\u4e48\uff1f 5.3 UDP/TCP 5.4 TCP\u7684\u6d41\u91cf\u63a7\u5236 \u53d1\u9001\u65b9\u7684\u53d1\u9001\u901f\u7387\u4e0d\u8981\u592a\u5feb\uff0c\u8981\u8ba9\u63a5\u6536\u65b9\u6765\u5f97\u53ca\u63a5\u6536\u3002 \u5229\u7528 \u6ed1\u52a8\u7a97\u53e3 \u673a\u5236\u53ef\u4ee5\u65b9\u4fbf\u7684\u5728TCP\u8fde\u7ed3\u4e0a\u5b9e\u73b0\u5bf9\u53d1\u9001\u65b9\u7684\u6d41\u91cf\u63a7\u5236\u3002 5.5 TCP\u7684\u62e5\u585e\u63a7\u5236 TCP\u62e5\u585e\u63a7\u5236\u7b97\u6cd5 \u6162\u5f00\u59cb slow start \u62e5\u585e\u907f\u514d congestion avoidance \u5feb\u91cd\u4f20 fast retransmit \u5feb\u6062\u590d fast recovery 5.6 TCP\u8d85\u65f6\u91cd\u4f20\u65f6\u95f4\u7684\u9009\u62e9 \uff08pass\uff09 5.7 TCP\u53ef\u9760\u4f20\u8f93\u7684\u5b9e\u73b0 TCP\u57fa\u4e8e\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u7684\u6ed1\u52a8\u7a97\u53e3\u6765\u5b9e\u73b0\u53ef\u9760\u4f20\u8f93\u3002 5.8 TCP\u8fd0\u8f93\u8fde\u63a5\u7ba1\u7406\u2014TCP\u8fde\u63a5\u5efa\u7acb \u89e3\u51b3\u95ee\u9898\uff1a TCP\u53cc\u65b9\u80fd\u786e\u77e5\u5bf9\u65b9\u7684\u5b58\u5728 \u80fd\u591f\u534f\u8c03\u4e00\u4e9b\u53c2\u6570 \u80fd\u5bf9\u8fd0\u8f93\u5b9e\u4f53\u8d44\u6e90\u8fdb\u884c\u5206\u914d \u91c7\u7528\u4e09\u62a5\u6587\u63e1\u624b\u800c\u4e0d\u662f\u4e24\u62a5\u6587\u63e1\u624b\u6765\u5efa\u7acbTCP\u8fde\u63a5\uff0c\u662f\u4e3a\u4e86\u9632\u6b62\u5df2\u5931\u6548\u7684\u8fde\u63a5\u8bf7\u6c42\u62a5\u6587\u6bb5\u7a81\u7136\u53c8\u4f20\u9001\u5230\u4e86TCP\u670d\u52a1\u5668\u8fdb\u7a0b\u5bfc\u81f4\u7684\u9519\u8bef\u3002 5.9 TCP\u7684\u8fd0\u8f93\u8fde\u63a5\u7ba1\u7406\u2014\u2014TCP\u7684\u8fde\u63a5\u91ca\u653e \u65f6\u95f4\u7b49\u5f85\u72b6\u6001\u662f\u5426\u6709\u5fc5\u8981\uff1f TCP\u670d\u52a1\u5668\u8fdb\u7a0b\u4f1a\u53cd\u590d\u91cd\u4f20TCP\u8fde\u63a5\u91ca\u653e\u62a5\u6587\uff0c\u5e76\u4e00\u76f4\u5904\u4e8e\u786e\u8ba4\u72b6\u6001\u4e0d\u4f1a\u5173\u95ed\u3002 2\u500dMSL\u662f\u65f6\u95f4\u53ef\u4ee5\u4f7f\u672c\u6b21\u8fde\u63a5\u6301\u7eed\u65f6\u95f4\u5185\u6240\u4ea7\u751f\u7684\u6240\u6709\u62a5\u6587\u6bb5\u90fd\u4ece\u7f51\u7edc\u4e2d\u6d88\u5931\u3002\u4e0b\u4e00\u4e2a\u65b0\u8fde\u63a5\u4e2d\u4e0d\u4f1a\u51fa\u73b0\u65e7\u62a5\u6587\u3002 5.9 TCP\u62a5\u6587\u6bb5\u7684\u9996\u90e8\u683c\u5f0f 6.1 \u5e94\u7528\u5c42\u6982\u8ff0 6.2 \u5ba2\u6237/\u670d\u52a1\u5668\u65b9\u5f0f\uff08C/S\uff09\u548c\u5bf9\u7b49\u65b9\u5f0f\uff08P2P\uff09 C/S\uff08Client/Server\uff09 \u5ba2\u6237\u548c\u670d\u52a1\u5668\u662f\u4e24\u4e2a\u5e94\u7528\u8fdb\u7a0b \u65b9\u5f0f\u63cf\u8ff0\u7684\u662f\u670d\u52a1\u548c\u88ab\u670d\u52a1\u7684\u5173\u7cfb \u5ba2\u6237\u662f\u670d\u52a1\u8bf7\u6c42\u65b9\uff0c\u670d\u52a1\u5668\u662f\u670d\u52a1\u63d0\u4f9b\u65b9 \u670d\u52a1\u5668\u603b\u662f\u8fd0\u884c\u72b6\u6001\uff0c\u7b49\u5f85\u5ba2\u6237\u7684\u670d\u52a1\u8bf7\u6c42\u3002\u670d\u52a1\u5668\u5177\u6709\u56fa\u5b9a\u7684\u7aef\u53e3\u53f7\uff08HTTP\u670d\u52a1\u7684\u9ed8\u8ba4\u7aef\u53e3\u53f7\u662f80\uff09\uff0c\u8fd0\u884c\u670d\u52a1\u5668\u7684\u4e3b\u673a\u4e5f\u5177\u6709\u56fa\u5b9a\u7684IP\u5730\u5740\u3002 \u4f8b\uff1awww\u4e07\u7ef4\u7f51\u3001\u7535\u5b50\u90ae\u4ef6 \u57fa\u4e8eC/S\u7684\u5e94\u7528\u670d\u52a1\u901a\u5e38\u662f \u670d\u52a1\u96c6\u4e2d\u578b \uff0c\u5e94\u7528\u670d\u52a1\u96c6\u4e2d\u5728\u7f51\u7edc\u4e2d\u6bd4\u5ba2\u6237\u8ba1\u7b97\u673a\u5c11\u5f97\u591a\u7684\u670d\u52a1\u8ba1\u7b97\u673a\u4e0a\u3002 P2P\uff08Peer to Peer\uff09 P2P\u65b9\u5f0f\u4e2d\uff0c\u6ca1\u6709\u56fa\u5b9a\u7684\u670d\u52a1\u8bf7\u6c42\u8005\u548c\u670d\u52a1\u63d0\u4f9b\u8005\u3002\u5404\u5e94\u7528\u8fdb\u7a0b\u662f\u5bf9\u7b49\u7684\uff0c\u79f0\u4e3a\u5bf9\u7b49\u65b9\u3002\u5bf9\u7b49\u65b9\u76f8\u4e92\u4e4b\u95f4\u76f4\u63a5\u901a\u4fe1\uff0c\u6bcf\u4e2a\u5bf9\u7b49\u65b9\u65e2\u662f\u670d\u52a1\u7684\u8bf7\u6c42\u8005\uff0c\u53c8\u662f\u670d\u52a1\u7684\u63d0\u4f9b\u8005\u3002 \u4f8b\uff1aP2P\u6587\u4ef6\u5171\u4eab\u3001\u5373\u65f6\u901a\u8baf\u3001P2P\u6d41\u5a92\u4f53\u3001\u5206\u5e03\u5f0f\u5b58\u50a8\u7b49\u3002 \u57fa\u4e8eP2P\u7684\u5e94\u7528\u662f \u670d\u52a1\u5206\u6563\u578b \u7684\uff0c\u670d\u52a1\u4e0d\u662f\u96c6\u4e2d\u5728\u5c11\u6570\u51e0\u4e2a\u670d\u52a1\u5668\u8ba1\u7b97\u673a\u4e2d\uff0c\u800c\u662f\u5206\u6563\u5728\u5927\u91cf\u5bf9\u7b49\u8ba1\u7b97\u673a\u4e2d\uff0c\u8fd9\u4e9b\u8ba1\u7b97\u673a\u4e0d\u4e3a\u670d\u52a1\u63d0\u4f9b\u5546\u6240\u6709\u3002 6.3 \u52a8\u6001\u4e3b\u673a\u914d\u7f6e\u534f\u8bae\uff08PHCP\uff09 6.4 \u57df\u540d\u7cfb\u7edfDNS\uff08Domain Name System\uff09 \u5f53\u5728\u6d4f\u89c8\u5668\u8f93\u5165\u57df\u540d\u65f6\uff0c\u7528\u6237\u4e3b\u673a\u4f1a\u9996\u5148\u5728\u81ea\u5df1\u7684DNS\u9ad8\u901f\u7f13\u5b58\u4e2d\u67e5\u627e\u8be5\u57df\u540d\u6240\u5bf9\u5e94\u7684IP\u5730\u5740\uff0c\u627e\u4e0d\u5230\u518d\u8be2\u95eeDNS\u670d\u52a1\u5668\u3002 \uff08\u6211TM\u76f4\u63a5\u6cea\u76ee\u3002\u3002\u3002\uff09 6.5 \u6587\u4ef6\u4f20\u9001\u534f\u8baeFTP FTP\u5ba2\u6237\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u8981\u5efa\u7acb\u4e24\u4e2a\u5e76\u884c\u7684\u8fde\u63a5\uff1a \u4e00\u4e2a\u662f\u63a7\u5236\u8fde\u63a5\uff0c\u5728\u6574\u4e2a\u4f1a\u8bdd\u671f\u95f4\u4e00\u76f4\u4fdd\u6301\u6253\u5f00\uff0c\u7528\u4e8e\u4f20\u8f93FTP\u76f8\u5173\u63a7\u5236\u547d\u4ee4\u3002 \u53e6\u4e00\u4e2a\u662f\u6570\u636e\u8fde\u63a5\uff0c\u7528\u4e8e\u6587\u4ef6\u4f20\u8f93\uff0c\u5728\u6bcf\u6b21\u6587\u4ef6\u4f20\u8f93\u65f6\u624d\u5efa\u7acb\uff0c\u4f20\u8f93\u7ed3\u675f\u5c31\u5173\u95ed\u3002 \u9ed8\u8ba4FTP\u4f7f\u7528TCP 21\u7aef\u53e3\u8fdb\u884c\u63a7\u5236\u8fde\u63a5\uff0cTCP 20\u7aef\u53e3\u8fdb\u884c\u6570\u636e\u8fde\u63a5\u3002 6.6 \u7535\u5b50\u90ae\u4ef6\uff08pass\uff09 6.7 \u4e07\u7ef4\u7f51WWW HTTP1.0\u91c7\u7528\u975e\u6301\u7eed\u8fde\u63a5\u65b9\u5f0f HTTP1.1\u91c7\u7528\u6301\u7eed\u8fde\u63a5\u65b9\u5f0f \u4f7f\u7528cookie\u5728\u670d\u52a1\u5668\u4e0a\u8bb0\u5f55\u7528\u6237\u4fe1\u606f\uff1a \u65e9\u671f\u4e07\u7ef4\u7f51\u5e94\u7528\u6bd4\u8f83\u7b80\u5355\uff0c\u4ec5\u4ec5\u662f\u7528\u6237\u67e5\u770b\u5728\u4e0d\u540c\u670d\u52a1\u5668\u4e0a\u7684\u9759\u6001\u6587\u6863\u3002\u56e0\u6b64HTTP\u88ab\u8bbe\u8ba1\u6210\u4e00\u79cd\u65e0\u72b6\u6001\u7684\u534f\u8bae\uff0c\u7b80\u5316\u670d\u52a1\u5668\u8bbe\u8ba1\u3002 \u73b0\u5728\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u4e07\u7ef4\u7f51\u5b9e\u73b0\u5404\u81ea\u590d\u6742\u7684\u5e94\u7528\uff0c\u5982\u7f51\u4e0a\u8d2d\u7269\u3001\u7535\u5b50\u5546\u52a1\u7b49\uff0c\u9700\u8981\u4e07\u7ef4\u7f51\u80fd\u591f\u8bc6\u522b\u7528\u6237\u3002","title":"\u6e56\u79d1\u8ba1\u7b97\u673a\u7f51\u7edc\u7f51\u8bfe"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%B9%96%E7%A7%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BD%91%E8%AF%BE/#37","text":"MAC\u5730\u5740 \u53c8\u79f0\u786c\u4ef6\u5730\u5740\uff0c\u7269\u7406\u5730\u5740\uff0c\u4f46\u4e0d\u5c5e\u4e8e\u7269\u7406\u5c42\uff0c\u5c5e\u4e8e\u6570\u636e\u94fe\u8def\u5c42\u3002 \u4f8b\uff1aXX-XX-XX-XX-XX-XX","title":"3.7"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%B9%96%E7%A7%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BD%91%E8%AF%BE/#37_1","text":"IP\u5730\u5740 \u662f\u56e0\u7279\u7f51\u4e0a\u4e3b\u673a\u4e0e\u8def\u7531\u5668\u4f7f\u7528\u7684\u5730\u5740\uff0c\u7528\u4e8e\u6807\u8bc6\uff1a1 \u7f51\u7edc\u7f16\u53f7 2 \u540c\u4e00\u7f51\u7edc\u4e0a\u7684\u4e0d\u540c\u4e3b\u673a\u3002 \u6570\u636e\u5305\u8f6c\u53d1\u8fc7\u7a0b\u79cdIP\u5730\u5740\u4e0eMAC\u5730\u5740\u7684\u53d8\u5316\uff1a1 \u6e90IP\u5730\u5740\u548c\u76ee\u7684IP\u5730\u5740\u4e0d\u53d8\uff1b2 \u6e90MAC\u5730\u5740\u548c\u76ee\u7684MAC\u5730\u5740\u9010\u4e2a\u94fe\u8def\u6539\u53d8\u3002","title":"3.7"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%B9%96%E7%A7%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BD%91%E8%AF%BE/#38","text":"\u5730\u5740\u89e3\u6790\u534f\u8baeARP","title":"3.8"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%B9%96%E7%A7%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BD%91%E8%AF%BE/#310","text":"\u751f\u6210\u6811\u534f\u8baeSTP \u5728\u589e\u52a0\u5197\u4f59\u94fe\u8def\u63d0\u9ad8\u7f51\u7edc\u53ef\u9760\u6027\u7684\u540c\u65f6\u907f\u514d\u7f51\u7edc\u73af\u8def\u5e26\u6765\u7684\u95ee\u9898\u3002 \u4e0d\u8bba\u4ea4\u6362\u673a\u4e4b\u95f4\u91c7\u7528\u600e\u6837\u7684\u7269\u7406\u8fde\u63a5\uff0c\u4ea4\u6362\u673a\u90fd\u80fd\u81ea\u52a8\u8ba1\u7b97\u5e76\u6784\u5efa\u4e00\u4e2a\u903b\u8f91\u4e0a\u6ca1\u6709\u73af\u8def\u7684\u7f51\u7edc\u3002\u5176\u903b\u8f91\u62d3\u6251\u7ed3\u6784\u5fc5\u987b\u662f\u6811\u5f62\u7684\u3002","title":"3.10"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%B9%96%E7%A7%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BD%91%E8%AF%BE/#44-ip","text":"\u6e90\u4e3b\u673a\u5982\u4f55\u77e5\u9053\u76ee\u7684\u4e3b\u673a\u662f\u5426\u4e0e\u81ea\u5df1\u5728\u540c\u4e00\u4e2a\u7f51\u7edc\u4e2d\uff1f \u6bd4\u8f83\u7f51\u7edc\u5730\u5740","title":"4.4 IP\u6570\u636e\u62a5\u7684\u53d1\u9001\u548c\u8f6c\u53d1\u8fc7\u7a0b"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%B9%96%E7%A7%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BD%91%E8%AF%BE/#45-pass","text":"","title":"4.5 \u9759\u6001\u8def\u7531\u914d\u7f6e\u53ca\u5176\u53ef\u80fd\u4ea7\u751f\u7684\u8def\u7531\u73af\u8def\u95ee\u9898 \uff08pass\uff09"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%B9%96%E7%A7%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BD%91%E8%AF%BE/#461-pass","text":"\u9759\u6001\u8def\u7531\u9009\u62e9 \u52a8\u6001\u8def\u7531\u9009\u62e9 \u56e0\u7279\u7f51\u91c7\u7528\u5206\u5c42\u6b21\u7684\u8def\u7531\u9009\u62e9\u534f\u8bae","title":"4.6.1 \u8def\u7531\u9009\u62e9\u534f\u8bae\u6982\u8ff0\uff08pass\uff09"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%B9%96%E7%A7%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BD%91%E8%AF%BE/#462-rippass","text":"RIP\u8ba4\u4e3a\u597d\u7684\u8def\u7531\u5c31\u662f\u8ddd\u79bb\u77ed\u7684\u8def\u7531\uff0c\u4e5f\u5c31\u662f\u6240\u901a\u8fc7\u8def\u7531\u5668\u6700\u5c11\u7684\u8def\u7531\u3002","title":"4.6.2 \u8def\u7531\u4fe1\u606f\u534f\u8baeRIP\u7684\u57fa\u672c\u5de5\u4f5c\u539f\u7406\uff08pass\uff09"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%B9%96%E7%A7%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BD%91%E8%AF%BE/#463-ospfpass","text":"","title":"4.6.3 \u5f00\u53d1\u6700\u77ed\u8def\u5f84\u4f18\u5148OSPF\u7684\u57fa\u672c\u5de5\u4f5c\u539f\u7406\uff08pass\uff09"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%B9%96%E7%A7%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BD%91%E8%AF%BE/#464-bgppass","text":"","title":"4.6.4 \u8fb9\u754c\u7f51\u5173\u534f\u8baeBGP\u7684\u57fa\u672c\u5de5\u4f5c\u539f\u7406\uff08pass\uff09"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%B9%96%E7%A7%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BD%91%E8%AF%BE/#47-ipv4","text":"\u9996\u90e8\u68c0\u9a8c\u548c\uff1a IP\u5c42\u672c\u8eab\u4e0d\u63d0\u4f9b\u53ef\u9760\u4f20\u9001\u670d\u52a1\u3002IPv6\u4e2d\u4e0d\u518d\u8ba1\u7b97\u9996\u90e8\u6821\u9a8c\u548c\u3002","title":"4.7 IPv4\u6570\u636e\u62a5\u7684\u9996\u90e8\u683c\u5f0f"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%B9%96%E7%A7%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BD%91%E8%AF%BE/#48-icmp","text":"\u4e3a\u4e86\u66f4\u6709\u6548\u8f6c\u53d1IP\u6570\u636e\u62a5\u548c\u63d0\u9ad8\u4ea4\u4ed8\u7684\u673a\u4f1a\u3002 \u4e3b\u673a\u6216\u8def\u7531\u5668\u4f7f\u7528ICMP\u6765\u53d1\u9001\u5dee\u9519\u62a5\u544a\u62a5\u6587\u548c\u8be2\u95ee\u62a5\u6587\u3002 ICMP\u62a5\u6587\u88ab\u5c01\u88c5\u5728IP\u6570\u636e\u62a5\u4e2d\u53d1\u9001\u3002","title":"4.8 \u7f51\u9645\u63a7\u5236\u62a5\u6587\u534f\u8baeICMP"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%B9%96%E7%A7%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BD%91%E8%AF%BE/#49-vpnnat","text":"Virtual Private Network \u7f51\u7edc\u5730\u5740\u8f6c\u6362NAT Network Address Translation \u4e3a\u4e86\u51cf\u7f13IPv4\u5730\u5740\u7a7a\u95f4\u8017\u5c3d\u7684\u901f\u5ea6\uff0c1994\u5e74\u63d0\u51fa\u4e86\u4e00\u79cd\u7f51\u7edc\u5730\u5740\u8f6c\u6362NAT\u7684\u65b9\u6cd5\u518d\u6b21\u7f13\u89e3\u4e86IPv4\u5730\u5740\u7a7a\u95f4\u5373\u5c06\u8017\u5c3d\u7684\u95ee\u9898\u3002 NAT \u80fd\u4f7f\u5927\u91cf\u4f7f\u7528\u5185\u90e8\u4e13\u7528\u5730\u5740\u7684\u4e13\u7528\u7f51\u7edc\u7528\u6237\u5171\u4eab \u5c11\u91cf\u5916\u90e8\u5168\u7403\u5730\u5740 \u6765\u8bbf\u95ee\u56e0\u7279\u7f51\u4e0a\u7684\u4e3b\u673a\u548c\u8d44\u6e90\u3002 NAPT","title":"4.9 \u865a\u62df\u4e13\u7528\u7f51VPN\u4e0e\u7f51\u7edc\u5730\u5740NAT"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%B9%96%E7%A7%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BD%91%E8%AF%BE/#51","text":"\u7269\u7406\u5c42\u3001\u6570\u636e\u94fe\u8def\u5c42\u548c\u7f51\u7edc\u5c42\u5171\u540c\u89e3\u51b3\u4e86\u5c06\u4e3b\u673a\u901a\u8fc7\u5f02\u6784\u7f51\u7edc\u4e92\u8054\u8d77\u6765\u7684\u95ee\u9898\u3002 \u5b9e\u9645\u4e0a\u5728\u8ba1\u7f51\u4e2d\u901a\u4fe1\u7684\u771f\u6b63\u5b9e\u4f53\u4f7f\u4f4d\u4e8e\u901a\u4fe1\u4e24\u7aef\u4e3b\u673a\u4e2d\u7684\u8fdb\u7a0b\u3002 \u8fd0\u8f93\u5c42\u534f\u8bae\u53c8\u79f0\u7aef\u5230\u7aef\u534f\u8bae\u3002","title":"5.1 \u8fd0\u8f93\u5c42\u6982\u8ff0"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%B9%96%E7%A7%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BD%91%E8%AF%BE/#52","text":"\u8fdb\u7a0b\u6807\u8bc6\u7b26PID\uff0c\u4e0d\u540cOS\u4e0d\u540c\u3002 \u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165\u7f51\u7ad9enter\u540e\u53d1\u751f\u4e86\u4ec0\u4e48\uff1f","title":"5.2 \u8fd0\u8f93\u5c42\u7aef\u53e3\u53f7\u3001\u590d\u7528\u4e0e\u5206\u7528"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%B9%96%E7%A7%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BD%91%E8%AF%BE/#53-udptcp","text":"","title":"5.3 UDP/TCP"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%B9%96%E7%A7%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BD%91%E8%AF%BE/#54-tcp","text":"\u53d1\u9001\u65b9\u7684\u53d1\u9001\u901f\u7387\u4e0d\u8981\u592a\u5feb\uff0c\u8981\u8ba9\u63a5\u6536\u65b9\u6765\u5f97\u53ca\u63a5\u6536\u3002 \u5229\u7528 \u6ed1\u52a8\u7a97\u53e3 \u673a\u5236\u53ef\u4ee5\u65b9\u4fbf\u7684\u5728TCP\u8fde\u7ed3\u4e0a\u5b9e\u73b0\u5bf9\u53d1\u9001\u65b9\u7684\u6d41\u91cf\u63a7\u5236\u3002","title":"5.4 TCP\u7684\u6d41\u91cf\u63a7\u5236"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%B9%96%E7%A7%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BD%91%E8%AF%BE/#55-tcp","text":"TCP\u62e5\u585e\u63a7\u5236\u7b97\u6cd5 \u6162\u5f00\u59cb slow start \u62e5\u585e\u907f\u514d congestion avoidance \u5feb\u91cd\u4f20 fast retransmit \u5feb\u6062\u590d fast recovery","title":"5.5 TCP\u7684\u62e5\u585e\u63a7\u5236"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%B9%96%E7%A7%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BD%91%E8%AF%BE/#56-tcp-pass","text":"","title":"5.6 TCP\u8d85\u65f6\u91cd\u4f20\u65f6\u95f4\u7684\u9009\u62e9 \uff08pass\uff09"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%B9%96%E7%A7%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BD%91%E8%AF%BE/#57-tcp","text":"TCP\u57fa\u4e8e\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u7684\u6ed1\u52a8\u7a97\u53e3\u6765\u5b9e\u73b0\u53ef\u9760\u4f20\u8f93\u3002","title":"5.7 TCP\u53ef\u9760\u4f20\u8f93\u7684\u5b9e\u73b0"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%B9%96%E7%A7%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BD%91%E8%AF%BE/#58-tcptcp","text":"\u89e3\u51b3\u95ee\u9898\uff1a TCP\u53cc\u65b9\u80fd\u786e\u77e5\u5bf9\u65b9\u7684\u5b58\u5728 \u80fd\u591f\u534f\u8c03\u4e00\u4e9b\u53c2\u6570 \u80fd\u5bf9\u8fd0\u8f93\u5b9e\u4f53\u8d44\u6e90\u8fdb\u884c\u5206\u914d \u91c7\u7528\u4e09\u62a5\u6587\u63e1\u624b\u800c\u4e0d\u662f\u4e24\u62a5\u6587\u63e1\u624b\u6765\u5efa\u7acbTCP\u8fde\u63a5\uff0c\u662f\u4e3a\u4e86\u9632\u6b62\u5df2\u5931\u6548\u7684\u8fde\u63a5\u8bf7\u6c42\u62a5\u6587\u6bb5\u7a81\u7136\u53c8\u4f20\u9001\u5230\u4e86TCP\u670d\u52a1\u5668\u8fdb\u7a0b\u5bfc\u81f4\u7684\u9519\u8bef\u3002","title":"5.8 TCP\u8fd0\u8f93\u8fde\u63a5\u7ba1\u7406\u2014TCP\u8fde\u63a5\u5efa\u7acb"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%B9%96%E7%A7%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BD%91%E8%AF%BE/#59-tcptcp","text":"\u65f6\u95f4\u7b49\u5f85\u72b6\u6001\u662f\u5426\u6709\u5fc5\u8981\uff1f TCP\u670d\u52a1\u5668\u8fdb\u7a0b\u4f1a\u53cd\u590d\u91cd\u4f20TCP\u8fde\u63a5\u91ca\u653e\u62a5\u6587\uff0c\u5e76\u4e00\u76f4\u5904\u4e8e\u786e\u8ba4\u72b6\u6001\u4e0d\u4f1a\u5173\u95ed\u3002 2\u500dMSL\u662f\u65f6\u95f4\u53ef\u4ee5\u4f7f\u672c\u6b21\u8fde\u63a5\u6301\u7eed\u65f6\u95f4\u5185\u6240\u4ea7\u751f\u7684\u6240\u6709\u62a5\u6587\u6bb5\u90fd\u4ece\u7f51\u7edc\u4e2d\u6d88\u5931\u3002\u4e0b\u4e00\u4e2a\u65b0\u8fde\u63a5\u4e2d\u4e0d\u4f1a\u51fa\u73b0\u65e7\u62a5\u6587\u3002","title":"5.9 TCP\u7684\u8fd0\u8f93\u8fde\u63a5\u7ba1\u7406\u2014\u2014TCP\u7684\u8fde\u63a5\u91ca\u653e"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%B9%96%E7%A7%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BD%91%E8%AF%BE/#59-tcp","text":"6.1 \u5e94\u7528\u5c42\u6982\u8ff0","title":"5.9 TCP\u62a5\u6587\u6bb5\u7684\u9996\u90e8\u683c\u5f0f"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%B9%96%E7%A7%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BD%91%E8%AF%BE/#62-csp2p","text":"C/S\uff08Client/Server\uff09 \u5ba2\u6237\u548c\u670d\u52a1\u5668\u662f\u4e24\u4e2a\u5e94\u7528\u8fdb\u7a0b \u65b9\u5f0f\u63cf\u8ff0\u7684\u662f\u670d\u52a1\u548c\u88ab\u670d\u52a1\u7684\u5173\u7cfb \u5ba2\u6237\u662f\u670d\u52a1\u8bf7\u6c42\u65b9\uff0c\u670d\u52a1\u5668\u662f\u670d\u52a1\u63d0\u4f9b\u65b9 \u670d\u52a1\u5668\u603b\u662f\u8fd0\u884c\u72b6\u6001\uff0c\u7b49\u5f85\u5ba2\u6237\u7684\u670d\u52a1\u8bf7\u6c42\u3002\u670d\u52a1\u5668\u5177\u6709\u56fa\u5b9a\u7684\u7aef\u53e3\u53f7\uff08HTTP\u670d\u52a1\u7684\u9ed8\u8ba4\u7aef\u53e3\u53f7\u662f80\uff09\uff0c\u8fd0\u884c\u670d\u52a1\u5668\u7684\u4e3b\u673a\u4e5f\u5177\u6709\u56fa\u5b9a\u7684IP\u5730\u5740\u3002 \u4f8b\uff1awww\u4e07\u7ef4\u7f51\u3001\u7535\u5b50\u90ae\u4ef6 \u57fa\u4e8eC/S\u7684\u5e94\u7528\u670d\u52a1\u901a\u5e38\u662f \u670d\u52a1\u96c6\u4e2d\u578b \uff0c\u5e94\u7528\u670d\u52a1\u96c6\u4e2d\u5728\u7f51\u7edc\u4e2d\u6bd4\u5ba2\u6237\u8ba1\u7b97\u673a\u5c11\u5f97\u591a\u7684\u670d\u52a1\u8ba1\u7b97\u673a\u4e0a\u3002","title":"6.2 \u5ba2\u6237/\u670d\u52a1\u5668\u65b9\u5f0f\uff08C/S\uff09\u548c\u5bf9\u7b49\u65b9\u5f0f\uff08P2P\uff09"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%B9%96%E7%A7%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BD%91%E8%AF%BE/#p2ppeer-to-peer","text":"P2P\u65b9\u5f0f\u4e2d\uff0c\u6ca1\u6709\u56fa\u5b9a\u7684\u670d\u52a1\u8bf7\u6c42\u8005\u548c\u670d\u52a1\u63d0\u4f9b\u8005\u3002\u5404\u5e94\u7528\u8fdb\u7a0b\u662f\u5bf9\u7b49\u7684\uff0c\u79f0\u4e3a\u5bf9\u7b49\u65b9\u3002\u5bf9\u7b49\u65b9\u76f8\u4e92\u4e4b\u95f4\u76f4\u63a5\u901a\u4fe1\uff0c\u6bcf\u4e2a\u5bf9\u7b49\u65b9\u65e2\u662f\u670d\u52a1\u7684\u8bf7\u6c42\u8005\uff0c\u53c8\u662f\u670d\u52a1\u7684\u63d0\u4f9b\u8005\u3002 \u4f8b\uff1aP2P\u6587\u4ef6\u5171\u4eab\u3001\u5373\u65f6\u901a\u8baf\u3001P2P\u6d41\u5a92\u4f53\u3001\u5206\u5e03\u5f0f\u5b58\u50a8\u7b49\u3002 \u57fa\u4e8eP2P\u7684\u5e94\u7528\u662f \u670d\u52a1\u5206\u6563\u578b \u7684\uff0c\u670d\u52a1\u4e0d\u662f\u96c6\u4e2d\u5728\u5c11\u6570\u51e0\u4e2a\u670d\u52a1\u5668\u8ba1\u7b97\u673a\u4e2d\uff0c\u800c\u662f\u5206\u6563\u5728\u5927\u91cf\u5bf9\u7b49\u8ba1\u7b97\u673a\u4e2d\uff0c\u8fd9\u4e9b\u8ba1\u7b97\u673a\u4e0d\u4e3a\u670d\u52a1\u63d0\u4f9b\u5546\u6240\u6709\u3002","title":"P2P\uff08Peer to Peer\uff09"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%B9%96%E7%A7%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BD%91%E8%AF%BE/#63-phcp","text":"","title":"6.3 \u52a8\u6001\u4e3b\u673a\u914d\u7f6e\u534f\u8bae\uff08PHCP\uff09"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%B9%96%E7%A7%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BD%91%E8%AF%BE/#64-dnsdomain-name-system","text":"\u5f53\u5728\u6d4f\u89c8\u5668\u8f93\u5165\u57df\u540d\u65f6\uff0c\u7528\u6237\u4e3b\u673a\u4f1a\u9996\u5148\u5728\u81ea\u5df1\u7684DNS\u9ad8\u901f\u7f13\u5b58\u4e2d\u67e5\u627e\u8be5\u57df\u540d\u6240\u5bf9\u5e94\u7684IP\u5730\u5740\uff0c\u627e\u4e0d\u5230\u518d\u8be2\u95eeDNS\u670d\u52a1\u5668\u3002 \uff08\u6211TM\u76f4\u63a5\u6cea\u76ee\u3002\u3002\u3002\uff09","title":"6.4 \u57df\u540d\u7cfb\u7edfDNS\uff08Domain Name System\uff09"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%B9%96%E7%A7%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BD%91%E8%AF%BE/#65-ftp","text":"FTP\u5ba2\u6237\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u8981\u5efa\u7acb\u4e24\u4e2a\u5e76\u884c\u7684\u8fde\u63a5\uff1a \u4e00\u4e2a\u662f\u63a7\u5236\u8fde\u63a5\uff0c\u5728\u6574\u4e2a\u4f1a\u8bdd\u671f\u95f4\u4e00\u76f4\u4fdd\u6301\u6253\u5f00\uff0c\u7528\u4e8e\u4f20\u8f93FTP\u76f8\u5173\u63a7\u5236\u547d\u4ee4\u3002 \u53e6\u4e00\u4e2a\u662f\u6570\u636e\u8fde\u63a5\uff0c\u7528\u4e8e\u6587\u4ef6\u4f20\u8f93\uff0c\u5728\u6bcf\u6b21\u6587\u4ef6\u4f20\u8f93\u65f6\u624d\u5efa\u7acb\uff0c\u4f20\u8f93\u7ed3\u675f\u5c31\u5173\u95ed\u3002 \u9ed8\u8ba4FTP\u4f7f\u7528TCP 21\u7aef\u53e3\u8fdb\u884c\u63a7\u5236\u8fde\u63a5\uff0cTCP 20\u7aef\u53e3\u8fdb\u884c\u6570\u636e\u8fde\u63a5\u3002","title":"6.5 \u6587\u4ef6\u4f20\u9001\u534f\u8baeFTP"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%B9%96%E7%A7%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BD%91%E8%AF%BE/#66-pass","text":"","title":"6.6 \u7535\u5b50\u90ae\u4ef6\uff08pass\uff09"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E6%B9%96%E7%A7%91%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%BD%91%E8%AF%BE/#67-www","text":"HTTP1.0\u91c7\u7528\u975e\u6301\u7eed\u8fde\u63a5\u65b9\u5f0f HTTP1.1\u91c7\u7528\u6301\u7eed\u8fde\u63a5\u65b9\u5f0f \u4f7f\u7528cookie\u5728\u670d\u52a1\u5668\u4e0a\u8bb0\u5f55\u7528\u6237\u4fe1\u606f\uff1a \u65e9\u671f\u4e07\u7ef4\u7f51\u5e94\u7528\u6bd4\u8f83\u7b80\u5355\uff0c\u4ec5\u4ec5\u662f\u7528\u6237\u67e5\u770b\u5728\u4e0d\u540c\u670d\u52a1\u5668\u4e0a\u7684\u9759\u6001\u6587\u6863\u3002\u56e0\u6b64HTTP\u88ab\u8bbe\u8ba1\u6210\u4e00\u79cd\u65e0\u72b6\u6001\u7684\u534f\u8bae\uff0c\u7b80\u5316\u670d\u52a1\u5668\u8bbe\u8ba1\u3002 \u73b0\u5728\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u4e07\u7ef4\u7f51\u5b9e\u73b0\u5404\u81ea\u590d\u6742\u7684\u5e94\u7528\uff0c\u5982\u7f51\u4e0a\u8d2d\u7269\u3001\u7535\u5b50\u5546\u52a1\u7b49\uff0c\u9700\u8981\u4e07\u7ef4\u7f51\u80fd\u591f\u8bc6\u522b\u7528\u6237\u3002","title":"6.7 \u4e07\u7ef4\u7f51WWW"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E8%AE%A1%E7%BD%91%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E8%AE%A1%E7%BD%91%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/","text":"IP\u5730\u5740\u4f1a\u91cd\u590d\u5417\uff1f \u8fd9\u662f\u5c5e\u4e8eIP\u534f\u8bae\u89c4\u5b9a\u7684\u79c1\u6709\u5730\u5740\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u5177\u4f53\u7684\u652f\u6301IP\u534f\u8bae\u7684\u7f51\u7edc\u7684\u90e8\u7f72\u65f6\u5019\u5c31\u5df2\u7ecf\u7ea6\u5b9a\u597d\u4e86\uff0c\u76ee\u6807\u5730\u5740\u4e3a\u4e00\u4e0b\u4e09\u4e2a\u7f51\u6bb5\u7684IP\u62a5\u6587\u5c06\u4e0d\u4f1a\u88ab\u4e2d\u95f4\u8282\u70b9\u8fdb\u884c\u8f6c\u53d1\uff0c\u8fd9\u4e9b\u62a5\u6587\u5c06\u4e0d\u4f1a\u51fa\u73b0\u5728\u516c\u7f51\u4e2d\u3002 10.0.0.0 - 10.255.255.255 172.16.0.0 - 172.31.255.255 192.168.0.0 - 192.168.255.255 \u4e5f\u6b63\u662f\u6709\u8fd9\u4e9b\u79c1\u6709IP\u7684\u5b58\u5728\uff0c\u5c40\u57df\u7f51\u5185\u7528\u6237\u53ef\u4ee5\u901a\u8fc7NAT\u7b49\u6280\u672f\u4f7f\u7528\u6709\u9650\u51e0\u4e2a\u516c\u7f51IP\u4e0a\u7f51\uff0c\u8fd9\u4e5f\u4f7f\u5f97\u539f\u672c\u65e9\u5c31\u5e94\u8be5\u8017\u5c3d\u7684IPv4\u5730\u5740\u7a7a\u95f4\u62d6\u5ef6\u5230\u73b0\u5728\u4e5f\u6ca1\u51fa\u73b0\u592a\u5927\u7684\u95ee\u9898\uff0c\u8fd9\u4e5f\u5c31\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u5ef6\u7f13\u4e86IPv6\u7684\u90e8\u7f72\u3002 Private network \uff08\u8fdeVPN\u518d\u4e0a\uff09 In the Internet addressing architecture, a private network is a network that uses private IP address space, following the standards set by RFC 1918 for IPv4 and RFC 4193 for IPv6. These addresses are commonly used for home, office, and enterprise local area networks (LANs), when globally routable addresses are not mandatory, or are not available for the intended network applications. Under Internet Protocol IPv4 , private IP address spaces were originally defined in an effort to delay IPv4 address exhaustion , but they are also a feature of the next generation Internet Protocol, IPv6 . These addresses are characterized as private because they are not globally delegated, meaning they are not allocated to any specific organization, and IP packets addressed by them cannot be transmitted onto the public Internet. Anyone may use these addresses without approval from a regional Internet registry (RIR). If such a private network needs to connect to the Internet, it must use either a network address translator (NAT) gateway, or a proxy server . \u4ee3\u7406\u670d\u52a1\u5668\uff08Proxy Server\uff09 \u4f01\u4e1a\u53ef\u4ee5\u901a\u8fc7\u4ee3\u7406\u670d\u52a1\u5668\u4f7f\u5458\u5de5\u53ea\u80fd\u4f1a\u89c1\u516c\u53f8\u5185\u90e8\u7684\u51e0\u4e2a\u7f51\u7ad9\u3002 \u4ee3\u7406\u670d\u52a1\u5668\u6709\u5f88\u591a\u79cd\uff0chttp\u3001ftp\u3001socks\uff0c\u53c8\u5206\u900f\u660e\u4ee3\u7406\u548c\u4e0d\u900f\u660e\u4ee3\u7406\u3002 reference\uff1a https://www.wse.me/keji/vpn-shi-shen-me-xu-ni-wang-luo-vpn-wu-xian-zhi-fang-wen-wai-wang-131408.htm https://www.cnblogs.com/tianyiliang/p/8213933.html","title":"\u4ece\u96f6\u5f00\u59cb\u7684\u8ba1\u7f51\u77e5\u8bc6\u603b\u7ed3"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E8%AE%A1%E7%BD%91%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E8%AE%A1%E7%BD%91%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#ip","text":"\u8fd9\u662f\u5c5e\u4e8eIP\u534f\u8bae\u89c4\u5b9a\u7684\u79c1\u6709\u5730\u5740\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u5177\u4f53\u7684\u652f\u6301IP\u534f\u8bae\u7684\u7f51\u7edc\u7684\u90e8\u7f72\u65f6\u5019\u5c31\u5df2\u7ecf\u7ea6\u5b9a\u597d\u4e86\uff0c\u76ee\u6807\u5730\u5740\u4e3a\u4e00\u4e0b\u4e09\u4e2a\u7f51\u6bb5\u7684IP\u62a5\u6587\u5c06\u4e0d\u4f1a\u88ab\u4e2d\u95f4\u8282\u70b9\u8fdb\u884c\u8f6c\u53d1\uff0c\u8fd9\u4e9b\u62a5\u6587\u5c06\u4e0d\u4f1a\u51fa\u73b0\u5728\u516c\u7f51\u4e2d\u3002 10.0.0.0 - 10.255.255.255 172.16.0.0 - 172.31.255.255 192.168.0.0 - 192.168.255.255 \u4e5f\u6b63\u662f\u6709\u8fd9\u4e9b\u79c1\u6709IP\u7684\u5b58\u5728\uff0c\u5c40\u57df\u7f51\u5185\u7528\u6237\u53ef\u4ee5\u901a\u8fc7NAT\u7b49\u6280\u672f\u4f7f\u7528\u6709\u9650\u51e0\u4e2a\u516c\u7f51IP\u4e0a\u7f51\uff0c\u8fd9\u4e5f\u4f7f\u5f97\u539f\u672c\u65e9\u5c31\u5e94\u8be5\u8017\u5c3d\u7684IPv4\u5730\u5740\u7a7a\u95f4\u62d6\u5ef6\u5230\u73b0\u5728\u4e5f\u6ca1\u51fa\u73b0\u592a\u5927\u7684\u95ee\u9898\uff0c\u8fd9\u4e5f\u5c31\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u5ef6\u7f13\u4e86IPv6\u7684\u90e8\u7f72\u3002 Private network \uff08\u8fdeVPN\u518d\u4e0a\uff09 In the Internet addressing architecture, a private network is a network that uses private IP address space, following the standards set by RFC 1918 for IPv4 and RFC 4193 for IPv6. These addresses are commonly used for home, office, and enterprise local area networks (LANs), when globally routable addresses are not mandatory, or are not available for the intended network applications. Under Internet Protocol IPv4 , private IP address spaces were originally defined in an effort to delay IPv4 address exhaustion , but they are also a feature of the next generation Internet Protocol, IPv6 . These addresses are characterized as private because they are not globally delegated, meaning they are not allocated to any specific organization, and IP packets addressed by them cannot be transmitted onto the public Internet. Anyone may use these addresses without approval from a regional Internet registry (RIR). If such a private network needs to connect to the Internet, it must use either a network address translator (NAT) gateway, or a proxy server .","title":"IP\u5730\u5740\u4f1a\u91cd\u590d\u5417\uff1f"},{"location":"%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E8%AE%A1%E7%BD%91%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E8%AE%A1%E7%BD%91%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/#proxy-server","text":"\u4f01\u4e1a\u53ef\u4ee5\u901a\u8fc7\u4ee3\u7406\u670d\u52a1\u5668\u4f7f\u5458\u5de5\u53ea\u80fd\u4f1a\u89c1\u516c\u53f8\u5185\u90e8\u7684\u51e0\u4e2a\u7f51\u7ad9\u3002 \u4ee3\u7406\u670d\u52a1\u5668\u6709\u5f88\u591a\u79cd\uff0chttp\u3001ftp\u3001socks\uff0c\u53c8\u5206\u900f\u660e\u4ee3\u7406\u548c\u4e0d\u900f\u660e\u4ee3\u7406\u3002 reference\uff1a https://www.wse.me/keji/vpn-shi-shen-me-xu-ni-wang-luo-vpn-wu-xian-zhi-fang-wen-wai-wang-131408.htm https://www.cnblogs.com/tianyiliang/p/8213933.html","title":"\u4ee3\u7406\u670d\u52a1\u5668\uff08Proxy Server\uff09"},{"location":"%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/CallBack/","text":"\u540c\u6b65\u548c\u5f02\u6b65 \u540c\u6b65\u65b9\u5f0f\uff1a \u901a\u8fc7 \u53c2\u6570\uff08\u4f8b\u5982 qsort \u7684\u6700\u540e\u4e00\u4e2a\u53c2\u6570\uff09\u4f20\u9012\u56de\u8c03\u51fd\u6570 \u8c03\u7528\u8005 \u7acb\u5373\u8c03\u7528 \u56de\u8c03\u51fd\u6570\uff08\u8c03\u7528\u65f6\u523b \u5728\u51fd\u6570\u8fd4\u56de\u524d\uff09 \u6b64\u5904\u7684 qsort \u548c compare \u8c03\u7528\u6808\u76f8\u540c \u5f02\u6b65\u65b9\u5f0f\uff1a \u901a\u8fc7 \u6ce8\u518c\uff08\u4f8b\u5982 signal \u51fd\u6570\uff09\u8bbe\u7f6e\u56de\u8c03\u51fd\u6570 \u8c03\u7528\u8005 \u5148\u5b58\u50a8 \u56de\u8c03\u51fd\u6570\uff0c\u5728\u672a\u6765\u7684\u67d0\u4e2a \u8c03\u7528\u65f6\u523b\uff0c\u53d6\u51fa\u5e76\u8c03\u7528 \u56de\u8c03\u51fd\u6570 \u6b64\u5904\u7684 signal \u548c block_interrupt \u8c03\u7528\u6808\u4e0d\u540c Reference [1] https://blog.csdn.net/sinat_38183777/article/details/83958887?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_baidulandingword-5&spm=1001.2101.3001.4242 [2] https://bot-man-jl.github.io/articles/?post=2017/Callback-Explained [3] https://bot-man-jl.github.io/articles/?post=2019/Inside-Cpp-Callback#%E5%9B%9E%E8%B0%83%E6%98%AF%E5%90%8C%E6%AD%A5%E8%BF%98%E6%98%AF%E5%BC%82%E6%AD%A5%E7%9A%84","title":"CallBack"},{"location":"%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/CallBack/#_1","text":"\u540c\u6b65\u65b9\u5f0f\uff1a \u901a\u8fc7 \u53c2\u6570\uff08\u4f8b\u5982 qsort \u7684\u6700\u540e\u4e00\u4e2a\u53c2\u6570\uff09\u4f20\u9012\u56de\u8c03\u51fd\u6570 \u8c03\u7528\u8005 \u7acb\u5373\u8c03\u7528 \u56de\u8c03\u51fd\u6570\uff08\u8c03\u7528\u65f6\u523b \u5728\u51fd\u6570\u8fd4\u56de\u524d\uff09 \u6b64\u5904\u7684 qsort \u548c compare \u8c03\u7528\u6808\u76f8\u540c \u5f02\u6b65\u65b9\u5f0f\uff1a \u901a\u8fc7 \u6ce8\u518c\uff08\u4f8b\u5982 signal \u51fd\u6570\uff09\u8bbe\u7f6e\u56de\u8c03\u51fd\u6570 \u8c03\u7528\u8005 \u5148\u5b58\u50a8 \u56de\u8c03\u51fd\u6570\uff0c\u5728\u672a\u6765\u7684\u67d0\u4e2a \u8c03\u7528\u65f6\u523b\uff0c\u53d6\u51fa\u5e76\u8c03\u7528 \u56de\u8c03\u51fd\u6570 \u6b64\u5904\u7684 signal \u548c block_interrupt \u8c03\u7528\u6808\u4e0d\u540c","title":"\u540c\u6b65\u548c\u5f02\u6b65"},{"location":"%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/CallBack/#reference","text":"[1] https://blog.csdn.net/sinat_38183777/article/details/83958887?utm_medium=distribute.pc_relevant.none-task-blog-baidujs_baidulandingword-5&spm=1001.2101.3001.4242 [2] https://bot-man-jl.github.io/articles/?post=2017/Callback-Explained [3] https://bot-man-jl.github.io/articles/?post=2019/Inside-Cpp-Callback#%E5%9B%9E%E8%B0%83%E6%98%AF%E5%90%8C%E6%AD%A5%E8%BF%98%E6%98%AF%E5%BC%82%E6%AD%A5%E7%9A%84","title":"Reference"},{"location":"%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/Refactor/","text":"","title":"Refactor"},{"location":"%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/","text":"\u8bbe\u8ba1\u6a21\u5f0f \u8bbe\u8ba1\u6a21\u5f0f\u662f\u4e00\u5957\u88ab\u53cd\u590d\u4f7f\u7528\u7684\u3001\u591a\u6570\u4eba\u77e5\u6653\u7684\u3001\u7ecf\u8fc7\u5206\u7c7b\u7f16\u76ee\u7684\u3001\u4ee3\u7801\u8bbe\u8ba1\u7ecf\u9a8c\u7684\u603b\u7ed3\u3002\u4f7f\u7528\u8bbe\u8ba1\u6a21\u5f0f\u662f\u4e3a\u4e86\u91cd\u7528\u4ee3\u7801\u3001\u8ba9\u4ee3\u7801\u66f4\u5bb9\u6613\u88ab\u4ed6\u4eba\u7406\u89e3\u3001\u4fdd\u8bc1\u4ee3\u7801\u53ef\u9760\u6027\u3002 GOF\uff08\u56db\u4eba\u5e2e\uff0c\u5168\u62fc Gang of Four\uff09 \u3002\u4ed6\u4eec\u6240\u63d0\u51fa\u7684\u8bbe\u8ba1\u6a21\u5f0f\u4e3b\u8981\u662f\u57fa\u4e8e\u4ee5\u4e0b\u7684\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u539f\u5219\u3002 \u5bf9\u63a5\u53e3\u7f16\u7a0b\u800c\u4e0d\u662f\u5bf9\u5b9e\u73b0\u7f16\u7a0b\u3002 \u4f18\u5148\u4f7f\u7528\u5bf9\u8c61\u7ec4\u5408\u800c\u4e0d\u662f\u7ee7\u627f\u3002 \u5e8f\u53f7 \u6a21\u5f0f & \u63cf\u8ff0 \u5305\u62ec 1 \u521b\u5efa\u578b\u6a21\u5f0f \u8fd9\u4e9b\u8bbe\u8ba1\u6a21\u5f0f\u63d0\u4f9b\u4e86\u4e00\u79cd\u5728\u521b\u5efa\u5bf9\u8c61\u7684\u540c\u65f6\u9690\u85cf\u521b\u5efa\u903b\u8f91\u7684\u65b9\u5f0f\uff0c\u800c\u4e0d\u662f\u4f7f\u7528 new \u8fd0\u7b97\u7b26\u76f4\u63a5\u5b9e\u4f8b\u5316\u5bf9\u8c61\u3002\u8fd9\u4f7f\u5f97\u7a0b\u5e8f\u5728\u5224\u65ad\u9488\u5bf9\u67d0\u4e2a\u7ed9\u5b9a\u5b9e\u4f8b\u9700\u8981\u521b\u5efa\u54ea\u4e9b\u5bf9\u8c61\u65f6\u66f4\u52a0\u7075\u6d3b\u3002 \u5de5\u5382\u6a21\u5f0f\uff08Factory Pattern\uff09\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\uff08Abstract Factory Pattern\uff09\u5355\u4f8b\u6a21\u5f0f\uff08Singleton Pattern\uff09\u5efa\u9020\u8005\u6a21\u5f0f\uff08Builder Pattern\uff09\u539f\u578b\u6a21\u5f0f\uff08Prototype Pattern\uff09 2 \u7ed3\u6784\u578b\u6a21\u5f0f \u8fd9\u4e9b\u8bbe\u8ba1\u6a21\u5f0f\u5173\u6ce8\u7c7b\u548c\u5bf9\u8c61\u7684\u7ec4\u5408\u3002\u7ee7\u627f\u7684\u6982\u5ff5\u88ab\u7528\u6765\u7ec4\u5408\u63a5\u53e3\u548c\u5b9a\u4e49\u7ec4\u5408\u5bf9\u8c61\u83b7\u5f97\u65b0\u529f\u80fd\u7684\u65b9\u5f0f\u3002 \u9002\u914d\u5668\u6a21\u5f0f\uff08Adapter Pattern\uff09\u6865\u63a5\u6a21\u5f0f\uff08Bridge Pattern\uff09\u8fc7\u6ee4\u5668\u6a21\u5f0f\uff08Filter\u3001Criteria Pattern\uff09\u7ec4\u5408\u6a21\u5f0f\uff08Composite Pattern\uff09\u88c5\u9970\u5668\u6a21\u5f0f\uff08Decorator Pattern\uff09\u5916\u89c2\u6a21\u5f0f\uff08Facade Pattern\uff09\u4eab\u5143\u6a21\u5f0f\uff08Flyweight Pattern\uff09\u4ee3\u7406\u6a21\u5f0f\uff08Proxy Pattern\uff09 3 \u884c\u4e3a\u578b\u6a21\u5f0f \u8fd9\u4e9b\u8bbe\u8ba1\u6a21\u5f0f\u7279\u522b\u5173\u6ce8\u5bf9\u8c61\u4e4b\u95f4\u7684\u901a\u4fe1\u3002 \u8d23\u4efb\u94fe\u6a21\u5f0f\uff08Chain of Responsibility Pattern\uff09\u547d\u4ee4\u6a21\u5f0f\uff08Command Pattern\uff09\u89e3\u91ca\u5668\u6a21\u5f0f\uff08Interpreter Pattern\uff09\u8fed\u4ee3\u5668\u6a21\u5f0f\uff08Iterator Pattern\uff09\u4e2d\u4ecb\u8005\u6a21\u5f0f\uff08Mediator Pattern\uff09\u5907\u5fd8\u5f55\u6a21\u5f0f\uff08Memento Pattern\uff09\u89c2\u5bdf\u8005\u6a21\u5f0f\uff08Observer Pattern\uff09\u72b6\u6001\u6a21\u5f0f\uff08State Pattern\uff09\u7a7a\u5bf9\u8c61\u6a21\u5f0f\uff08Null Object Pattern\uff09\u7b56\u7565\u6a21\u5f0f\uff08Strategy Pattern\uff09\u6a21\u677f\u6a21\u5f0f\uff08Template Pattern\uff09\u8bbf\u95ee\u8005\u6a21\u5f0f\uff08Visitor Pattern\uff09 4 J2EE \u6a21\u5f0f \u8fd9\u4e9b\u8bbe\u8ba1\u6a21\u5f0f\u7279\u522b\u5173\u6ce8\u8868\u793a\u5c42\u3002\u8fd9\u4e9b\u6a21\u5f0f\u662f\u7531 Sun Java Center \u9274\u5b9a\u7684\u3002 MVC \u6a21\u5f0f\uff08MVC Pattern\uff09\u4e1a\u52a1\u4ee3\u8868\u6a21\u5f0f\uff08Business Delegate Pattern\uff09\u7ec4\u5408\u5b9e\u4f53\u6a21\u5f0f\uff08Composite Entity Pattern\uff09\u6570\u636e\u8bbf\u95ee\u5bf9\u8c61\u6a21\u5f0f\uff08Data Access Object Pattern\uff09\u524d\u7aef\u63a7\u5236\u5668\u6a21\u5f0f\uff08Front Controller Pattern\uff09\u62e6\u622a\u8fc7\u6ee4\u5668\u6a21\u5f0f\uff08Intercepting Filter Pattern\uff09\u670d\u52a1\u5b9a\u4f4d\u5668\u6a21\u5f0f\uff08Service Locator Pattern\uff09\u4f20\u8f93\u5bf9\u8c61\u6a21\u5f0f\uff08Transfer Object Pattern\uff09 \u516d\u5927\u539f\u5219 \u5355\u4e00\u804c\u8d23\u539f\u5219\uff08Single Responsibility Principle\uff09 \u5355\u4e00\u804c\u8d23\u539f\u5219\u7684\u5b9a\u4e49\u662f\uff1a\u5e94\u8be5\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u539f\u56e0\u5f15\u8d77\u7c7b\u7684\u53d8\u66f4\u3002 \u5355\u4e00\u804c\u8d23\u539f\u5219\u4e0d\u4ec5\u9002\u7528\u4e8e\u63a5\u53e3\u548c\u7c7b\uff0c\u4e5f\u9002\u7528\u4e8e\u65b9\u6cd5\u3002\u4e00\u4e2a\u65b9\u6cd5\u5c3d\u53ef\u80fd\u53ea\u505a\u4e00\u4ef6\u4e8b\u3002 \u5f00\u95ed\u539f\u5219\uff08Open Closed Principle\uff09 https://blog.csdn.net/lovelion/article/details/7537584 \u5f00\u95ed\u539f\u5219\u662f\u6307\u4e00\u4e2a\u8f6f\u4ef6\u5b9e\u4f53\u5982\u7c7b\u3001\u6a21\u5757\u548c\u51fd\u6570\u5e94\u8be5\u5bf9 \u6269\u5c55 \u5f00\u653e\uff0c\u5bf9 \u4fee\u6539 \u5173\u95ed\u3002\u8f6f\u4ef6\u5b9e\u4f53\u5e94\u5c3d\u91cf\u5728\u4e0d\u4fee\u6539\u539f\u6709\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u6269\u5c55\u3002 \u8f6f\u4ef6\u5b9e\u4f53\u53ef\u4ee5\u6307\u4e00\u4e2a\u8f6f\u4ef6\u6a21\u5757\uff0c\u4e00\u4e2a\u7531\u591a\u4e2a\u7c7b\u7ec4\u6210\u7684\u5c40\u90e8\u7ed3\u6784\u6216\u4e00\u4e2a\u72ec\u7acb\u7684\u7c7b\u3002 \u62bd\u8c61\u5316 \u662f\u5f00\u95ed\u539f\u5219\u7684\u5173\u952e\u2014\u2014Q\uff1a\u4ec0\u4e48\u662f\u62bd\u8c61\u5462\uff1f \u4f8b\uff1a \u65b0\u52a0\u4e00\u4e2a\u56fe\u8868\u5c31\u8981\u65b0\u52a0if\u6761\u4ef6\u5224\u65ad\u903b\u8f91\u3002 \u91cd\u6784\uff1a \u91cc\u6c0f\u66ff\u6362\u539f\u5219\uff08Liskov Substitution Principle\uff09 \u5355\u4f8b\u6a21\u5f0f \u8fd9\u79cd\u6a21\u5f0f\u6d89\u53ca\u5230\u4e00\u4e2a\u5355\u4e00\u7684\u7c7b\uff0c\u8be5\u7c7b\u8d1f\u8d23\u521b\u5efa\u81ea\u5df1\u7684\u5bf9\u8c61\uff0c\u540c\u65f6\u786e\u4fdd\u53ea\u6709\u5355\u4e2a\u5bf9\u8c61\u88ab\u521b\u5efa\u3002\u8fd9\u4e2a\u7c7b\u63d0\u4f9b\u4e86\u4e00\u79cd\u8bbf\u95ee\u5176\u552f\u4e00\u7684\u5bf9\u8c61\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\uff0c\u4e0d\u9700\u8981\u5b9e\u4f8b\u5316\u8be5\u7c7b\u7684\u5bf9\u8c61\u3002 \u6ce8\u610f\uff1a \u5355\u4f8b\u7c7b\u53ea\u80fd\u6709\u4e00\u4e2a\u5b9e\u4f8b\u3002 \u5355\u4f8b\u7c7b\u5fc5\u987b\u81ea\u5df1\u521b\u5efa\u81ea\u5df1\u7684\u552f\u4e00\u5b9e\u4f8b\u3002 \u5355\u4f8b\u7c7b\u5fc5\u987b\u7ed9\u6240\u6709\u5176\u4ed6\u5bf9\u8c61\u63d0\u4f9b\u8fd9\u4e00\u5b9e\u4f8b\u3002 \u4f18\u70b9\uff1a \u5185\u5b58\u91cc\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u51cf\u5c11\u4e86\u5185\u5b58\u5f00\u9500\u3002\uff08\u9891\u7e41\u7684\u521b\u5efa\u548c\u9500\u6bc1\u5b9e\u4f8b\uff09 \u907f\u514d\u5bf9\u8d44\u6e90\u7684\u591a\u91cd\u5360\u7528\u3002\uff08\u6bd4\u5982\u5199\u6587\u4ef6\u64cd\u4f5c\uff09 \u7f3a\u70b9\uff1a \u6ca1\u6709\u63a5\u53e3\uff0c\u4e0d\u80fd\u7ee7\u627f\uff0c\u4e0e\u5355\u4e00\u804c\u8d23\u539f\u5219\u51b2\u7a81\uff0c\u4e00\u4e2a\u7c7b\u5e94\u8be5\u53ea\u5173\u5fc3\u5185\u90e8\u903b\u8f91\uff0c\u800c\u4e0d\u5173\u5fc3\u5916\u9762\u600e\u4e48\u6837\u6765\u5b9e\u4f8b\u5316\u3002 C++\u5b9e\u73b0 \u61d2\u6c49\u5f0f\uff08lazy-Initialzation\uff09 \u76f4\u5230\u4f7f\u7528\u65f6\u624d\u5b9e\u4f8b\u5316\u5bf9\u8c61\uff0c\u5373\u76f4\u5230\u8c03\u7528GetInstance\u65f6\u624dnew\u4e00\u4e2a\u5bf9\u8c61\u3002 class Singleton { public: static Singleton* GetInstance() //\u516c\u6709\u9759\u6001\u65b9\u6cd5\uff0c\u83b7\u53d6\u8be5\u5b9e\u4f8b { if(pInstance == nullptr) //\u5224\u65ad\u662f\u5426\u7b2c\u4e00\u6b21\u8c03\u7528 pInstance = new Singleton(); return pInstance; } private: Singleton(); //\u5c06\u6784\u9020\u51fd\u6570\u8bbe\u4e3a\u79c1\u6709 static Singleton *pInstance; //\u79c1\u6709\u9759\u6001\u6307\u9488\u53d8\u91cf\uff0c\u6307\u5411\u552f\u4e00\u5b9e\u4f8b }; \u6784\u9020\u51fd\u6570\u662f\u79c1\u6709\u7684\uff0c\u5bfc\u81f4\u5728\u5916\u90e8\u4efb\u4f55\u5c1d\u8bd5\u521b\u5efa\u5b9e\u4f8b\u7684\u5c1d\u8bd5\u90fd\u4f1a\u5931\u8d25\u3002 \u7981\u6b62\u62f7\u8d1d\u548c\u8d4b\u503c\u3002 \u552f\u4e00\u65b9\u6cd5\u662f\u901a\u8fc7\u8c03\u7528\u516c\u6709\u9759\u6001\u51fd\u6570GetInstance\uff0c\u8fd4\u56de\u7684\u5b9e\u4f8b\u662f\u8be5\u51fd\u6570\u9996\u6b21\u88ab\u8bbf\u95ee\u65f6\u521b\u5efa\u7684\u3002 \u7cfb\u7edf\u4f1a\u5728\u7a0b\u5e8f\u7ed3\u675f\u540e\u91ca\u653e\u6240\u6709\u5168\u5c40\u53d8\u91cf\u5e76\u6790\u6784\u6240\u6709\u7c7b\u7684\u9759\u6001\u5bf9\u8c61\u3002 \u997f\u6c49\u5f0f //Singleton.h class Singleton { public: static Singleton* getInstance(); private: Singleton(); Singleton(const Singleton&); Singleton& operator=(const Singleton&); static Singleton* instance_; }; //Singleton.cpp #include \"Singleton.h\" Singleton* Singleton::instance_ = new Singleton(); Singleton::Singleton() {} Singleton* Singleton::getInstance() { return instance_; } \u4e0e\u61d2\u6c49\u5f0f\u533a\u522b\u5728\u4e8e\uff0c\u5728\u5168\u5c40\u4f5c\u7528\u57df\u8fdb\u884c\u5355\u4f8b\u7c7b\u7684\u5b9e\u4f8b\u5316\uff0c\u5e76\u4e14\u6b64\u5b9e\u4f8b\u521d\u59cb\u5316\u5355\u4f8b\u7c7b\u7684\u9759\u6001\u6210\u5458\u6307\u9488\u3002 Meyers's Singleton class Singleton { public: Singleton(const Singleton&)=delete; Singleton& operator=(const Singleton&)=delete; ~Singleton(){}\uff1b static Singleton& GetInstance() { static Singleton instance; return instance; } private: Singleton()\uff1b }; static Singleton* GetInstance() { static Singleton instance; return &instance; } \u7ebf\u7a0b\u5b89\u5168\u7684\u5355\u4f8b\u6a21\u5f0f Singleton* Singleton::GetInstance() { lock(); //\u4e0a\u9501 if (NULL == instance) { instance = new Singleton(); } unlock(); return instance; } \u6bcf\u6b21\u83b7\u53d6\u5b9e\u4f8b\u7684\u65f6\u5019\u90fd\u8981\u5148\u4e0a\u9501\uff0c\u4e4b\u540e\u5728\u89e3\u9501\uff0c\u5982\u679c\u6709\u5f88\u591a\u7ebf\u7a0b\u7684\u8bdd\uff0c\u53ef\u80fd\u4f1a\u9020\u6210\u5927\u91cf\u7ebf\u7a0b\u963b\u585e\u3002 Singleton* Singleton::GetInstance() { if (NULL == instance) { lock(); //\u4e0a\u9501 if (NULL == instance) { instance = new Singleton(); } unlock(); } return instance; } \u6539\u8fdb\u540e\uff0c\u7edd\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u662f\u76f4\u63a5\u8fd4\u56de\u5b9e\u4f8b\uff0c\u53ea\u6709\u5728\u6ca1\u6709\u5b9e\u4f8b\u7684\u65f6\u5019\uff0c\u624d\u4f1a\u4e0a\u9501\u3001\u89e3\u9501\u3002 How should it be used You need to have one and only one object of a type in system \u4f60\u9700\u8981\u7cfb\u7edf\u4e2d\u53ea\u6709 \u552f\u4e00 \u4e00\u4e2a\u5b9e\u4f8b\u5b58\u5728\u7684\u7c7b\u7684 \u5168\u5c40 \u53d8\u91cf\u7684\u65f6\u5019\u624d\u4f7f\u7528\u5355\u4f8b\u3002 How to create the best singleton: The smaller, the better. I am a minimalist Make sure it is thread safe Make sure it is never null Make sure it is created only once Lazy or system initialization? Up to your requirements Sometimes the OS or the JVM creates singletons for you (e.g. in Java every class definition is a singleton) Provide a destructor or somehow figure out how to dispose resources Use little memory \u8d8a\u5c0f\u8d8a\u597d\uff0c\u8d8a\u7b80\u5355\u8d8a\u597d\uff0c\u7ebf\u7a0b\u5b89\u5168\uff0c\u5185\u5b58\u4e0d\u6cc4\u9732 \u201cSingleton\u4ec5\u4ec5\u662f\u4e00\u4e2a\u5305\u88c5\u597d\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u90a3\u4f60\u80fd\u8bf4\u8bf4\u5b83\u548c\u5168\u5c40\u53d8\u91cf\u7684\u76f8\u540c\u4e0e\u4e0d\u540c\u4e48\uff1f\u201d \u5355\u4f8b\u53ef\u4ee5\u8bf4\u662f\u5168\u5c40\u53d8\u91cf\u7684\u66ff\u4ee3\u54c1\u3002\u5176\u62e5\u6709\u5168\u5c40\u53d8\u91cf\u7684\u4f17\u591a\u7279\u70b9\uff1a \u5168\u5c40\u53ef\u89c1\u4e14\u8d2f\u7a7f\u5e94\u7528\u7a0b\u5e8f\u7684\u6574\u4e2a\u751f\u547d\u5468\u671f\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u5355\u4f8b\u6a21\u5f0f\u8fd8\u62e5\u6709\u4e00\u4e9b\u5168\u5c40\u53d8\u91cf\u6240\u4e0d\u5177\u6709\u7684\u6027\u8d28\uff1a\u540c\u4e00\u7c7b\u578b\u7684\u5bf9\u8c61\u5b9e\u4f8b\u53ea\u80fd\u6709\u4e00\u4e2a\uff0c\u540c\u65f6\u9002\u5f53\u7684\u5b9e\u73b0\u8fd8\u62e5\u6709\u5ef6\u8fdf\u521d\u59cb\u5316\uff08Lazy\uff09\u7684\u529f\u80fd\uff0c\u53ef\u4ee5\u907f\u514d\u8017\u65f6\u7684\u5168\u5c40\u53d8\u91cf\u521d\u59cb\u5316\u6240\u5bfc\u81f4\u7684\u542f\u52a8\u901f\u5ea6\u4e0d\u4f73\u7b49\u95ee\u9898\u3002\u8981\u8bf4\u660e\u7684\u662f\uff0cSingleton\u7684\u6700\u4e3b\u8981\u76ee\u7684\u5e76\u4e0d\u662f\u4f5c\u4e3a\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u4f7f\u7528\uff0c\u800c\u662f\u4fdd\u8bc1\u7c7b\u578b\u5b9e\u4f8b\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u3002\u5b83\u6240\u5177\u6709\u7684\u5168\u5c40\u8bbf\u95ee\u7279\u6027\u4ec5\u4ec5\u662f\u5b83\u7684\u4e00\u4e2a\u526f\u4f5c\u7528\u3002\u4f46\u6b63\u662f\u8fd9\u4e2a\u526f\u4f5c\u7528\u4f7f\u5b83\u66f4\u7c7b\u4f3c\u4e8e\u5305\u88c5\u597d\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u4ece\u800c\u5141\u8bb8\u5404\u90e8\u5206\u4ee3\u7801\u5bf9\u5176\u76f4\u63a5\u8fdb\u884c\u64cd\u4f5c\u3002\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u9700\u8981\u901a\u8fc7\u4ed4\u7ec6\u5730\u9605\u8bfb\u5404\u90e8\u5206\u5bf9\u5176\u8fdb\u884c\u64cd\u4f5c\u7684\u4ee3\u7801\u624d\u80fd\u4e86\u89e3\u5176\u771f\u6b63\u7684\u4f7f\u7528\u65b9\u5f0f\uff0c\u800c\u4e0d\u80fd\u901a\u8fc7\u63a5\u53e3\u5f97\u5230\u7ec4\u4ef6\u4f9d\u8d56\u6027\u7b49\u4fe1\u606f\u3002\u5982\u679cSingleton\u8bb0\u5f55\u4e86\u7a0b\u5e8f\u7684\u8fd0\u884c\u72b6\u6001\uff0c\u90a3\u4e48\u8be5\u72b6\u6001\u5c06\u662f\u4e00\u4e2a\u5168\u5c40\u72b6\u6001\u3002\u5404\u4e2a\u7ec4\u4ef6\u5bf9\u5176\u8fdb\u884c\u64cd\u4f5c\u7684\u8c03\u7528\u65f6\u5e8f\u5c06\u53d8\u5f97\u5341\u5206\u91cd\u8981\uff0c\u4ece\u800c\u4f7f\u5404\u4e2a\u7ec4\u4ef6\u4e4b\u95f4\u5b58\u5728\u7740\u4e00\u79cd\u9690\u5f0f\u7684\u4f9d\u8d56\u3002 \u5bf9\u8c61\u91ca\u653e\u95ee\u9898 \u7a0b\u5e8f\u4e2d\u53ea\u6709new\u6ca1\u6709delete A\uff1a\u4e00\u822c\u60c5\u51b5\u4e0b\u5355\u4f8b\u6a21\u5f0f\u7684\u5b9e\u4f8b\u662f\u5e38\u9a7b\u5185\u5b58\u7684\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u624b\u52a8\u91ca\u653e\uff0c\u5982\u679c\u7684\u786e\u9700\u8981\u91ca\u653e\u5b9e\u4f8b\u5360\u7528\u7684\u5185\u5b58\uff0c\u4e00\u5b9a\u4e0d\u80fd\u5728\u5355\u4f8b\u5185\u7684\u6790\u6784\u51fd\u6570\u4e2d\u8fdb\u884cdelete\u64cd\u4f5c\uff0c\u8fd9\u6837\u4f1a\u9020\u6210\u65e0\u9650\u5faa\u73af\u3002 \u5982\u679c\u5728\u7c7b\u7684\u6790\u6784\u51fd\u6570\u4e2d\u6709\u5fc5\u8981\u7684\u64cd\u4f5c\uff0c\u4f8b\u5982\u5173\u95ed\u6587\u4ef6\uff0c\u91ca\u653e\u5916\u90e8\u8d44\u6e90\uff0c\u9700\u8981\u6b63\u5e38\u5220\u9664\u5b9e\u4f8b\u3002 bad idea\uff1a\u53ef\u4ee5\u5728\u7a0b\u5e8f\u7ed3\u675f\u65f6\u8c03\u7528GetInstance\uff0c\u7136\u540edelete\uff0c\u4f46\u662fdelete\u4e4b\u540e\u65e0\u6cd5\u4fdd\u8bc1\u540e\u9762\u8fd8\u6709\u6ca1\u6709\u4eba\u8c03\u7528GetInstance\u3002 \u4e00\u4e2a\u59a5\u5584\u7684\u65b9\u6cd5\u662f\u8ba9\u8fd9\u4e2a\u7c7b\u81ea\u5df1\u77e5\u9053\u5728\u5408\u9002\u7684\u65f6\u5019\u628a\u81ea\u5df1\u5220\u9664\uff0c\u6216\u8005\u8bf4\u628a\u5220\u9664\u81ea\u5df1\u7684\u64cd\u4f5c\u6302\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u67d0\u4e2a\u5408\u9002\u7684\u70b9\u4e0a\uff0c\u4f7f\u5176\u5728\u6070\u5f53\u7684\u65f6\u5019\u88ab\u81ea\u52a8\u6267\u884c\u3002 \u7a0b\u5e8f\u5728\u7ed3\u675f\u7684\u65f6\u5019\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u6790\u6784\u6240\u6709\u7684\u5168\u5c40\u53d8\u91cf\u3002\u4e8b\u5b9e\u4e0a\uff0c\u7cfb\u7edf\u4e5f\u4f1a\u6790\u6784\u6240\u6709\u7684\u7c7b\u7684\u9759\u6001\u6210\u5458\u53d8\u91cf\uff0c\u5c31\u50cf\u8fd9\u4e9b\u9759\u6001\u6210\u5458\u4e5f\u662f\u5168\u5c40\u53d8\u91cf\u4e00\u6837\u3002\u5229\u7528\u8fd9\u4e2a\u7279\u5f81\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5355\u4f8b\u7c7b\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u8fd9\u6837\u7684\u9759\u6001\u6210\u5458\u53d8\u91cf\uff0c\u800c\u5b83\u7684\u552f\u4e00\u5de5\u4f5c\u5c31\u662f\u5728\u6790\u6784\u51fd\u6570\u4e2d\u5220\u9664\u5355\u4f8b\u7c7b\u7684\u5b9e\u4f8b\u3002\u5982\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\u7684CGarbo\u7c7b\uff08Garbo\u610f\u4e3a\u5783\u573e\u5de5\u4eba\uff09\uff1a class CSingleton { private: CSingleton() { } static CSingleton *m_pInstance; class CGarbo //\u5b83\u7684\u552f\u4e00\u5de5\u4f5c\u5c31\u662f\u5728\u6790\u6784\u51fd\u6570\u4e2d\u5220\u9664CSingleton\u7684\u5b9e\u4f8b { public: ~CGarbo() { if(CSingleton::m_pInstance) delete CSingleton::m_pInstance; // delete } }; static CGarbo Garbo; //\u5b9a\u4e49\u4e00\u4e2a\u9759\u6001\u6210\u5458\u53d8\u91cf\uff0c\u7a0b\u5e8f\u7ed3\u675f\u65f6\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u8c03\u7528\u5b83\u7684\u6790\u6784\u51fd\u6570 public: static CSingleton * GetInstance() { if(m_pInstance == NULL) //\u5224\u65ad\u662f\u5426\u7b2c\u4e00\u6b21\u8c03\u7528 m_pInstance = new CSingleton(); return m_pInstance; } }; Reference\uff1a https://www.cnblogs.com/leaves1024/p/10985599.html https://www.cnblogs.com/faith0217/articles/4083476.html https://zhuanlan.zhihu.com/p/37469260 \u5de5\u5382\u6a21\u5f0f \u7b80\u5355\u5de5\u5382\u6a21\u5f0f \u5de5\u5382\u7c7b\uff1a\u521b\u5efa\u6307\u5b9a\u5177\u4f53\u5b9e\u4f8b\u5bf9\u8c61\u7684\u63a5\u53e3 \u62bd\u8c61\u4ea7\u54c1\u7c7b\uff1a\u5177\u4f53\u4ea7\u54c1\u7c7b\u7684\u7236\u7c7b\u6216\u63a5\u53e3 \u5177\u4f53\u4ea7\u54c1\u7c7b\uff1a\u5de5\u5382\u7c7b\u521b\u5efa\u7684\u5bf9\u8c61\u662f\u5177\u4f53\u4ea7\u54c1\u7c7b\u7684\u5b9e\u4f8b \u7279\u70b9 \uff1a\u5de5\u5382\u7c7b\u5c01\u88c5\u4e86\u521b\u5efa\u4ea7\u54c1\u5bf9\u8c61\u7684\u51fd\u6570 \u7f3a\u70b9 \uff1a\u6269\u5c55\u5dee\uff0c\u65b0\u589e\u4ea7\u54c1\u7684\u65f6\u5019\u9700\u8981\u4fee\u6539\u5de5\u5382\u7c7b \u4f8b\uff1a // \u978b\u5b50\u62bd\u8c61\u7c7b class Shoes //interface { public: virtual ~Shoes() {} virtual void Show() = 0; }; // \u8010\u514b\u978b\u5b50 class NiKeShoes : public Shoes { public: void Show() { std::cout << \"\u6211\u662f\u8010\u514b\u7403\u978b\uff0c\u6211\u7684\u5e7f\u544a\u8bed\uff1aJust do it\" << std::endl; } }; // \u963f\u8fea\u8fbe\u65af\u978b\u5b50 class AdidasShoes : public Shoes { public: void Show() { std::cout << \"\u6211\u662f\u963f\u8fea\u8fbe\u65af\u7403\u978b\uff0c\u6211\u7684\u5e7f\u544a\u8bed:Impossible is nothing\" << std::endl; } }; // \u674e\u5b81\u978b\u5b50 class LiNingShoes : public Shoes { public: void Show() { std::cout << \"\u6211\u662f\u674e\u5b81\u7403\u978b\uff0c\u6211\u7684\u5e7f\u544a\u8bed\uff1aEverything is possible\" << std::endl; } }; //ShoesFactory\u4e3a\u5de5\u5382\u7c7b\uff0c\u7c7b\u91cc\u5b9e\u73b0\u6839\u636e\u978b\u5b50\u7c7b\u578b\u521b\u5efa\u5bf9\u5e94\u978b\u5b50\u4ea7\u54c1\u5bf9\u8c61\u7684CreateShoes(SHOES_TYPE type)\u51fd\u6570\u3002 enum SHOES_TYPE { NIKE, LINING, ADIDAS }; // \u603b\u978b\u5382 class ShoesFactory { public: // \u6839\u636e\u978b\u5b50\u7c7b\u578b\u521b\u5efa\u5bf9\u5e94\u7684\u978b\u5b50\u5bf9\u8c61 Shoes *CreateShoes(SHOES_TYPE type) { switch (type) { case NIKE: return new NiKeShoes(); break; case LINING: return new LiNingShoes(); break; case ADIDAS: return new AdidasShoes(); break; default: return NULL; break; } } }; int main() { // \u6784\u9020\u5de5\u5382\u5bf9\u8c61 ShoesFactory shoesFactory; // \u4ece\u978b\u5de5\u5382\u5bf9\u8c61\u521b\u5efa\u963f\u8fea\u8fbe\u65af\u978b\u5bf9\u8c61 Shoes *pNikeShoes = shoesFactory.CreateShoes(NIKE); if (pNikeShoes != NULL) { // \u8010\u514b\u7403\u978b\u5e7f\u544a\u558a\u8d77 pNikeShoes->Show(); // \u91ca\u653e\u8d44\u6e90 delete pNikeShoes; pNikeShoes = NULL; } // \u4ece\u978b\u5de5\u5382\u5bf9\u8c61\u521b\u5efa\u963f\u8fea\u8fbe\u65af\u978b\u5bf9\u8c61 Shoes *pLiNingShoes = shoesFactory.CreateShoes(LINING); if (pLiNingShoes != NULL) { // \u674e\u5b81\u7403\u978b\u5e7f\u544a\u558a\u8d77 pLiNingShoes->Show(); // \u91ca\u653e\u8d44\u6e90 delete pLiNingShoes; pLiNingShoes = NULL; } // \u4ece\u978b\u5de5\u5382\u5bf9\u8c61\u521b\u5efa\u963f\u8fea\u8fbe\u65af\u978b\u5bf9\u8c61 Shoes *pAdidasShoes = shoesFactory.CreateShoes(ADIDAS); if (pAdidasShoes != NULL) { // \u963f\u8fea\u8fbe\u65af\u7403\u978b\u5e7f\u544a\u558a\u8d77 pAdidasShoes->Show(); // \u91ca\u653e\u8d44\u6e90 delete pAdidasShoes; pAdidasShoes = NULL; } return 0; } \u5de5\u5382\u6a21\u5f0f \u60c5\u666f\uff1a\u4e3a\u4e86\u751f\u4ea7\u67d0\u79cd\u978b\u5b50\uff0c\u9700\u8981\u4e3a\u4e0d\u540c\u724c\u5b50\u7684\u978b\u5f00\u8bbe\u72ec\u7acb\u7684\u751f\u4ea7\u7ebf\u3002 \u62bd\u8c61\u5de5\u5382\u7c7b\uff1a\u63d0\u4f9b\u521b\u5efa\u5177\u4f53\u4ea7\u54c1\u7c7b\u7684\u63a5\u53e3 \u5177\u4f53\u5de5\u5382\u7c7b\uff1a\u7ee7\u627f\u62bd\u8c61\u5de5\u5382\uff0c\u5b9e\u73b0\u521b\u5efa\u5177\u4f53\u4ea7\u54c1\u5bf9\u8c61 \u62bd\u8c61\u4ea7\u54c1\u7c7b\uff1a\u5177\u4f53\u4ea7\u54c1\u7c7b\u7684\u63a5\u53e3 \u5177\u4f53\u4ea7\u54c1\u7c7b\uff1a\u5177\u4f53\u5de5\u5382\u8981\u521b\u5efa\u7684\u5bf9\u8c61 \u7279\u70b9\uff1a \u5de5\u5382\u90e8\u5206\u62bd\u8c61\u51fa\u4e86\u63a5\u53e3\uff0c\u5b9e\u73b0\u4ea4\u7ed9\u5b50\u7c7b \u7f3a\u70b9\uff1a \u65b0\u589e\u4ea7\u54c1\u65f6\uff0c\u8981\u589e\u52a0\u5bf9\u5e94\u4ea7\u54c1\u7684\u5177\u4f53\u5de5\u5382\u7c7b\u3002 // \u603b\u978b\u5382 class ShoesFactory // Factory interface { public: virtual Shoes *CreateShoes() = 0; virtual ~ShoesFactory() {} }; // \u8010\u514b\u751f\u4ea7\u8005/\u751f\u4ea7\u94fe class NiKeProducer : public ShoesFactory { public: Shoes *CreateShoes() { return new NiKeShoes(); } }; // \u963f\u8fea\u8fbe\u65af\u751f\u4ea7\u8005/\u751f\u4ea7\u94fe class AdidasProducer : public ShoesFactory { public: Shoes *CreateShoes() { return new AdidasShoes(); } }; // \u674e\u5b81\u751f\u4ea7\u8005/\u751f\u4ea7\u94fe class LiNingProducer : public ShoesFactory { public: Shoes *CreateShoes() { return new LiNingShoes(); } }; int main() { // ================ \u751f\u4ea7\u8010\u514b\u6d41\u7a0b ==================== // // \u978b\u5382\u5f00\u8bbe\u8010\u514b\u751f\u4ea7\u7ebf ShoesFactory *niKeProducer = new NiKeProducer(); // \u8010\u514b\u751f\u4ea7\u7ebf\u4ea7\u51fa\u7403\u978b Shoes *nikeShoes = niKeProducer->CreateShoes(); // \u8010\u514b\u7403\u978b\u5e7f\u544a\u558a\u8d77 nikeShoes->Show(); // \u91ca\u653e\u8d44\u6e90 delete nikeShoes; delete niKeProducer; // ================ \u751f\u4ea7\u963f\u8fea\u8fbe\u65af\u6d41\u7a0b ==================== // // \u978b\u5382\u5f00\u8bbe\u963f\u8fea\u8fbe\u65af\u751f\u4ea7\u8005 ShoesFactory *adidasProducer = new AdidasProducer(); // \u963f\u8fea\u8fbe\u65af\u751f\u4ea7\u7ebf\u4ea7\u51fa\u7403\u978b Shoes *adidasShoes = adidasProducer->CreateShoes(); // \u963f\u8fea\u8fbe\u65af\u7403\u978b\u5e7f\u558a\u8d77 adidasShoes->Show(); // \u91ca\u653e\u8d44\u6e90 delete adidasShoes; delete adidasProducer; return 0; } \u62bd\u8c61\u5de5\u5382 \u60c5\u666f\uff1a\u73b0\u5728\u5de5\u5382\u4e0d\u6b62\u4ea7\u978b\u5b50\u4e86\uff0c\u8863\u670d\u88e4\u5b50\u4e00\u8d77\u4ea7\u4e86\u3002 \u7ed3\u6784\u4e0e\u5de5\u5382\u6a21\u5f0f\u4e00\u6837\u3002 // \u57fa\u7c7b \u8863\u670d class Clothe { public: virtual void Show() = 0; virtual ~Clothe() {} }; // \u8010\u514b\u8863\u670d class NiKeClothe : public Clothe { public: void Show() { std::cout << \"\u6211\u662f\u8010\u514b\u8863\u670d\uff0c\u65f6\u5c1a\u6211\u6700\u5728\u884c\uff01\" << std::endl; } }; // \u57fa\u7c7b \u978b\u5b50 class Shoes { public: virtual void Show() = 0; virtual ~Shoes() {} }; // \u8010\u514b\u978b\u5b50 class NiKeShoes : public Shoes { public: void Show() { std::cout << \"\u6211\u662f\u8010\u514b\u7403\u978b\uff0c\u8ba9\u4f60\u9177\u8d77\u6765\uff01\" << std::endl; } }; //Factory\u4e3a\u62bd\u8c61\u5de5\u5382\uff0c\u63d0\u4f9b\u4e86\u521b\u5efa\u978b\u5b50CreateShoes()\u548c\u8863\u670d\u4ea7\u54c1CreateClothe()\u5bf9\u8c61\u7684\u63a5\u53e3\u3002 //NiKeProducer\u4e3a\u5177\u4f53\u5de5\u5382\uff0c\u5b9e\u73b0\u4e86\u521b\u5efa\u8010\u514b\u978b\u5b50\u548c\u8010\u514b\u8863\u670d\u7684\u65b9\u5f0f\u3002 // \u603b\u5382 class Factory { public: virtual Shoes *CreateShoes() = 0; virtual Clothe *CreateClothe() = 0; virtual ~Factory() {} }; // \u8010\u514b\u751f\u4ea7\u8005/\u751f\u4ea7\u94fe class NiKeProducer : public Factory { public: Shoes *CreateShoes() { return new NiKeShoes(); } Clothe *CreateClothe() { return new NiKeClothe(); } }; int main() { // ================ \u751f\u4ea7\u8010\u514b\u6d41\u7a0b ==================== // // \u978b\u5382\u5f00\u8bbe\u8010\u514b\u751f\u4ea7\u7ebf Factory *niKeProducer = new NiKeProducer(); // \u8010\u514b\u751f\u4ea7\u7ebf\u4ea7\u51fa\u7403\u978b Shoes *nikeShoes = niKeProducer->CreateShoes(); // \u8010\u514b\u751f\u4ea7\u7ebf\u4ea7\u51fa\u8863\u670d Clothe *nikeClothe = niKeProducer->CreateClothe(); // \u8010\u514b\u7403\u978b\u5e7f\u544a\u558a\u8d77 nikeShoes->Show(); // \u8010\u514b\u8863\u670d\u5e7f\u544a\u558a\u8d77 nikeClothe->Show(); // \u91ca\u653e\u8d44\u6e90 delete nikeShoes; delete nikeClothe; delete niKeProducer; return 0; } \u5c0f\u7ed3\uff1a \u7b80\u5355\u5de5\u5382\u6a21\u5f0f\uff0c\u8fdd\u80cc\u4e86\u5f00\u95ed\u539f\u5219\u3002 \u5de5\u5382\u548c\u62bd\u8c61\u5de5\u5382\uff0c\u589e\u52a0\u4ea7\u54c1\u7c7b\u65f6\u9700\u8981\u589e\u52a0\u5bf9\u5e94\u7684\u5177\u4f53\u5de5\u5382\u7c7b\u3002 Reference\uff1a https://zhuanlan.zhihu.com/p/83535678 https://zhuanlan.zhihu.com/p/83537599 MVC\u6a21\u5f0f Model-View-Controller(\u6a21\u578b-\u89c6\u56fe-\u63a7\u5236\u5668\u6a21\u5f0f) Model\uff08\u6a21\u578b\uff09 - \u6a21\u578b\u4ee3\u8868\u4e00\u4e2a\u5b58\u53d6\u6570\u636e\u7684\u5bf9\u8c61\u6216 JAVA POJO\u3002\u5b83\u4e5f\u53ef\u4ee5\u5e26\u6709\u903b\u8f91\uff0c\u5728\u6570\u636e\u53d8\u5316\u65f6\u66f4\u65b0\u63a7\u5236\u5668\u3002 View\uff08\u89c6\u56fe\uff09 - \u89c6\u56fe\u4ee3\u8868\u6a21\u578b\u5305\u542b\u7684\u6570\u636e\u7684\u53ef\u89c6\u5316\u3002 Controller\uff08\u63a7\u5236\u5668\uff09 - \u63a7\u5236\u5668\u4f5c\u7528\u4e8e\u6a21\u578b\u548c\u89c6\u56fe\u4e0a\u3002\u5b83\u63a7\u5236\u6570\u636e\u6d41\u5411\u6a21\u578b\u5bf9\u8c61\uff0c\u5e76\u5728\u6570\u636e\u53d8\u5316\u65f6\u66f4\u65b0\u89c6\u56fe\u3002\u5b83\u4f7f\u89c6\u56fe\u4e0e\u6a21\u578b\u5206\u79bb\u5f00\u3002 \u200b \u6a21\u578b\uff08Model\uff09 \uff1a\u5c01\u88c5\u7684\u662f\u6570\u636e\u6e90\u548c\u6240\u6709\u57fa\u4e8e\u5bf9\u8fd9\u4e9b\u6570\u636e\u7684\u64cd\u4f5c\u3002\u5728\u4e00\u4e2a\u7ec4\u4ef6\u4e2d\uff0cModel\u5f80\u5f80\u8868\u793a\u7ec4\u4ef6\u7684\u72b6\u6001\u548c\u64cd\u4f5c\u72b6\u6001\u7684\u65b9\u6cd5\u3002 \u200b \u89c6\u56fe\uff08View\uff09 \uff1a\u5c01\u88c5\u7684\u662f\u5bf9\u6570\u636e\u6e90Model\u7684\u4e00\u79cd\u663e\u793a\u3002\u4e00\u4e2a\u6a21\u578b\u53ef\u4ee5\u7531\u591a\u4e2a\u89c6\u56fe\uff0c\u800c\u4e00\u4e2a\u89c6\u56fe\u7406\u8bba\u4e0a\u4e5f\u53ef\u4ee5\u540c\u4e0d\u540c\u7684\u6a21\u578b\u5173\u8054\u8d77\u6765\u3002 \u200b \u63a7\u5236\u5668\uff08Control\uff09 \uff1a\u5c01\u88c5\u7684\u662f\u5916\u754c\u4f5c\u7528\u4e8e\u6a21\u578b\u7684\u64cd\u4f5c\u3002\u901a\u5e38\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u4f1a\u8f6c\u53d1\u5230\u6a21\u578b\u4e0a\uff0c\u5e76\u8c03\u7528\u6a21\u578b\u4e2d\u76f8\u5e94\u7684\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u65b9\u6cd5\u3002\u4e00\u822cController\u5728Model\u548cView\u4e4b\u95f4\u8d77\u5230\u4e86\u6c9f\u901a\u7684\u4f5c\u7528\uff0c\u5904\u7406\u7528\u6237\u5728View\u4e0a\u7684\u8f93\u5165\uff0c\u5e76\u8f6c\u53d1\u7ed9Model\u3002\u8fd9\u6837Model\u548cView\u4e24\u8005\u4e4b\u95f4\u53ef\u4ee5\u505a\u5230\u677e\u6563\u8026\u5408\uff0c\u751a\u81f3\u53ef\u4ee5\u5f7c\u6b64\u4e0d\u77e5\u9053\u5bf9\u65b9\uff0c\u800c\u7531Controller\u8fde\u63a5\u8d77\u8fd9\u4e24\u4e2a\u90e8\u5206\u3002 \u5728\u8bbe\u8ba1\u6a21\u5f0f\u4e2d\uff0cMVC\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u6bd4\u8f83\u9ad8\u5c42\u7684\u6a21\u5f0f\uff0c\u5b83\u7531\u591a\u4e2a\u66f4\u57fa\u672c\u7684\u8bbe\u8ba1\u6a21\u5f0f\u7ec4\u5408\u800c\u6210\uff0c Model-View\u7684\u5173\u7cfb\u5b9e\u9645\u4e0a\u662fObserver\u6a21\u5f0f\uff0c\u6a21\u578b\u7684\u72b6\u6001\u548c\u8bd5\u56fe\u7684\u663e\u793a\u76f8\u4e92\u54cd\u5e94\uff0c\u800cView-Controller\u5219\u662f\u7531Strategy\u6a21\u5f0f\u6240\u63cf\u8ff0\u7684\uff0cView\u7528\u4e00\u4e2a\u7279\u5b9a\u7684Controller\u7684\u5b9e\u4f8b\u6765\u5b9e\u73b0\u4e00\u4e2a\u7279\u5b9a\u7684\u54cd\u5e94\u7b56\u7565\uff0c\u66f4\u6362\u4e0d\u540c\u7684Controller\uff0c\u53ef\u4ee5\u6539\u53d8View\u5bf9\u7528\u6237\u8f93\u5165\u7684\u54cd\u5e94\u3002\u800c\u5176\u5b83\u7684\u4e00\u4e9b\u8bbe\u8ba1\u6a21\u5f0f\u4e5f\u5f88\u5bb9\u6613\u7ec4\u5408\u5230\u8fd9\u4e2a\u4f53\u7cfb\u4e2d\u3002\u6bd4\u5982\uff0c\u901a\u8fc7Composite\u6a21\u5f0f\uff0c\u53ef\u4ee5\u5c06\u591a\u4e2aView\u5d4c\u5957\u7ec4\u5408\u8d77\u6765\uff1b\u901a\u8fc7FactoryMethod\u6a21\u5f0f\u6765\u6307\u5b9aView\u7684Controller\uff0c\u7b49\u7b49 \u3002\u5728GOF\u4e66\u7684 Introduction\u4e2d\uff0c\u6709\u4e00\u5c0f\u8282\u662f\u201cDesign Patterns in Smalltalk MVC\u201d\u5373\u4ecb\u7ecd\u5728MVC\u6a21\u5f0f\u91cc\u7528\u5230\u7684\u8bbe\u8ba1\u6a21\u5f0f\u3002\u5b83\u5927\u6982\u5411\u6211\u4eec\u4f20\u8fbe\u4e86\u8fd9\u6837\u7684\u4fe1\u606f\uff1a\u5408\u6210\u6a21\u5f0f+\u7b56\u7565\u6a21\u5f0f+\u89c2\u5bdf\u8005\u6a21\u5f0f\u7ea6\u7b49\u4e8eMVC\u6a21\u5f0f\uff08\u5f53\u7136MVC\u6a21\u5f0f\u8981\u591a\u4e00\u4e9b \u4e1c\u897f\uff09\u3002 \u4f18\u70b9\uff1a \u4f7f\u7528MVC\u7684\u597d\u5904\uff0c\u4e00\u65b9\u9762\uff0c\u5206\u79bb\u6570\u636e\u548c\u5176\u8868\u793a\uff0c\u4f7f\u5f97\u6dfb\u52a0\u6216\u8005\u5220\u9664\u4e00\u4e2a\u7528\u6237\u89c6\u56fe\u53d8\u5f97\u5f88\u5bb9\u6613\uff0c\u751a\u81f3\u53ef\u4ee5\u5728\u7a0b\u5e8f\u6267\u884c\u65f6\u52a8\u6001\u7684\u8fdb\u884c\u3002Model\u548cView\u80fd\u591f\u5355\u72ec\u7684\u5f00\u53d1\uff0c\u589e\u52a0\u4e86\u7a0b\u5e8f\u4e86\u53ef\u7ef4\u62a4\u6027\uff0c\u53ef\u6269\u5c55\u6027\uff0c\u5e76\u4f7f\u6d4b\u8bd5\u53d8\u5f97\u66f4\u4e3a\u5bb9\u6613\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5c06\u63a7\u5236\u903b\u8f91\u548c\u8868\u73b0\u754c\u9762\u5206\u79bb\uff0c\u5141\u8bb8\u7a0b\u5e8f\u80fd\u591f\u5728\u8fd0\u884c\u65f6\u6839\u636e\u5de5\u4f5c\u6d41\u3001\u7528\u6237\u4e60\u60ef\u6216\u8005\u6a21\u578b\u72b6\u6001\u6765\u52a8\u6001\u9009\u62e9\u4e0d\u540c\u7684\u7528\u6237\u754c\u9762\u3002\u56e0\u6b64\uff0cMVC\u6a21\u5f0f\u5e7f\u6cdb\u7528\u4e8eWeb\u7a0b\u5e8f\u3001GUI\u7a0b\u5e8f\u7684\u67b6\u6784\u3002","title":"\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_1","text":"\u8bbe\u8ba1\u6a21\u5f0f\u662f\u4e00\u5957\u88ab\u53cd\u590d\u4f7f\u7528\u7684\u3001\u591a\u6570\u4eba\u77e5\u6653\u7684\u3001\u7ecf\u8fc7\u5206\u7c7b\u7f16\u76ee\u7684\u3001\u4ee3\u7801\u8bbe\u8ba1\u7ecf\u9a8c\u7684\u603b\u7ed3\u3002\u4f7f\u7528\u8bbe\u8ba1\u6a21\u5f0f\u662f\u4e3a\u4e86\u91cd\u7528\u4ee3\u7801\u3001\u8ba9\u4ee3\u7801\u66f4\u5bb9\u6613\u88ab\u4ed6\u4eba\u7406\u89e3\u3001\u4fdd\u8bc1\u4ee3\u7801\u53ef\u9760\u6027\u3002 GOF\uff08\u56db\u4eba\u5e2e\uff0c\u5168\u62fc Gang of Four\uff09 \u3002\u4ed6\u4eec\u6240\u63d0\u51fa\u7684\u8bbe\u8ba1\u6a21\u5f0f\u4e3b\u8981\u662f\u57fa\u4e8e\u4ee5\u4e0b\u7684\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u539f\u5219\u3002 \u5bf9\u63a5\u53e3\u7f16\u7a0b\u800c\u4e0d\u662f\u5bf9\u5b9e\u73b0\u7f16\u7a0b\u3002 \u4f18\u5148\u4f7f\u7528\u5bf9\u8c61\u7ec4\u5408\u800c\u4e0d\u662f\u7ee7\u627f\u3002 \u5e8f\u53f7 \u6a21\u5f0f & \u63cf\u8ff0 \u5305\u62ec 1 \u521b\u5efa\u578b\u6a21\u5f0f \u8fd9\u4e9b\u8bbe\u8ba1\u6a21\u5f0f\u63d0\u4f9b\u4e86\u4e00\u79cd\u5728\u521b\u5efa\u5bf9\u8c61\u7684\u540c\u65f6\u9690\u85cf\u521b\u5efa\u903b\u8f91\u7684\u65b9\u5f0f\uff0c\u800c\u4e0d\u662f\u4f7f\u7528 new \u8fd0\u7b97\u7b26\u76f4\u63a5\u5b9e\u4f8b\u5316\u5bf9\u8c61\u3002\u8fd9\u4f7f\u5f97\u7a0b\u5e8f\u5728\u5224\u65ad\u9488\u5bf9\u67d0\u4e2a\u7ed9\u5b9a\u5b9e\u4f8b\u9700\u8981\u521b\u5efa\u54ea\u4e9b\u5bf9\u8c61\u65f6\u66f4\u52a0\u7075\u6d3b\u3002 \u5de5\u5382\u6a21\u5f0f\uff08Factory Pattern\uff09\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\uff08Abstract Factory Pattern\uff09\u5355\u4f8b\u6a21\u5f0f\uff08Singleton Pattern\uff09\u5efa\u9020\u8005\u6a21\u5f0f\uff08Builder Pattern\uff09\u539f\u578b\u6a21\u5f0f\uff08Prototype Pattern\uff09 2 \u7ed3\u6784\u578b\u6a21\u5f0f \u8fd9\u4e9b\u8bbe\u8ba1\u6a21\u5f0f\u5173\u6ce8\u7c7b\u548c\u5bf9\u8c61\u7684\u7ec4\u5408\u3002\u7ee7\u627f\u7684\u6982\u5ff5\u88ab\u7528\u6765\u7ec4\u5408\u63a5\u53e3\u548c\u5b9a\u4e49\u7ec4\u5408\u5bf9\u8c61\u83b7\u5f97\u65b0\u529f\u80fd\u7684\u65b9\u5f0f\u3002 \u9002\u914d\u5668\u6a21\u5f0f\uff08Adapter Pattern\uff09\u6865\u63a5\u6a21\u5f0f\uff08Bridge Pattern\uff09\u8fc7\u6ee4\u5668\u6a21\u5f0f\uff08Filter\u3001Criteria Pattern\uff09\u7ec4\u5408\u6a21\u5f0f\uff08Composite Pattern\uff09\u88c5\u9970\u5668\u6a21\u5f0f\uff08Decorator Pattern\uff09\u5916\u89c2\u6a21\u5f0f\uff08Facade Pattern\uff09\u4eab\u5143\u6a21\u5f0f\uff08Flyweight Pattern\uff09\u4ee3\u7406\u6a21\u5f0f\uff08Proxy Pattern\uff09 3 \u884c\u4e3a\u578b\u6a21\u5f0f \u8fd9\u4e9b\u8bbe\u8ba1\u6a21\u5f0f\u7279\u522b\u5173\u6ce8\u5bf9\u8c61\u4e4b\u95f4\u7684\u901a\u4fe1\u3002 \u8d23\u4efb\u94fe\u6a21\u5f0f\uff08Chain of Responsibility Pattern\uff09\u547d\u4ee4\u6a21\u5f0f\uff08Command Pattern\uff09\u89e3\u91ca\u5668\u6a21\u5f0f\uff08Interpreter Pattern\uff09\u8fed\u4ee3\u5668\u6a21\u5f0f\uff08Iterator Pattern\uff09\u4e2d\u4ecb\u8005\u6a21\u5f0f\uff08Mediator Pattern\uff09\u5907\u5fd8\u5f55\u6a21\u5f0f\uff08Memento Pattern\uff09\u89c2\u5bdf\u8005\u6a21\u5f0f\uff08Observer Pattern\uff09\u72b6\u6001\u6a21\u5f0f\uff08State Pattern\uff09\u7a7a\u5bf9\u8c61\u6a21\u5f0f\uff08Null Object Pattern\uff09\u7b56\u7565\u6a21\u5f0f\uff08Strategy Pattern\uff09\u6a21\u677f\u6a21\u5f0f\uff08Template Pattern\uff09\u8bbf\u95ee\u8005\u6a21\u5f0f\uff08Visitor Pattern\uff09 4 J2EE \u6a21\u5f0f \u8fd9\u4e9b\u8bbe\u8ba1\u6a21\u5f0f\u7279\u522b\u5173\u6ce8\u8868\u793a\u5c42\u3002\u8fd9\u4e9b\u6a21\u5f0f\u662f\u7531 Sun Java Center \u9274\u5b9a\u7684\u3002 MVC \u6a21\u5f0f\uff08MVC Pattern\uff09\u4e1a\u52a1\u4ee3\u8868\u6a21\u5f0f\uff08Business Delegate Pattern\uff09\u7ec4\u5408\u5b9e\u4f53\u6a21\u5f0f\uff08Composite Entity Pattern\uff09\u6570\u636e\u8bbf\u95ee\u5bf9\u8c61\u6a21\u5f0f\uff08Data Access Object Pattern\uff09\u524d\u7aef\u63a7\u5236\u5668\u6a21\u5f0f\uff08Front Controller Pattern\uff09\u62e6\u622a\u8fc7\u6ee4\u5668\u6a21\u5f0f\uff08Intercepting Filter Pattern\uff09\u670d\u52a1\u5b9a\u4f4d\u5668\u6a21\u5f0f\uff08Service Locator Pattern\uff09\u4f20\u8f93\u5bf9\u8c61\u6a21\u5f0f\uff08Transfer Object Pattern\uff09","title":"\u8bbe\u8ba1\u6a21\u5f0f"},{"location":"%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_2","text":"","title":"\u516d\u5927\u539f\u5219"},{"location":"%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#single-responsibility-principle","text":"\u5355\u4e00\u804c\u8d23\u539f\u5219\u7684\u5b9a\u4e49\u662f\uff1a\u5e94\u8be5\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u539f\u56e0\u5f15\u8d77\u7c7b\u7684\u53d8\u66f4\u3002 \u5355\u4e00\u804c\u8d23\u539f\u5219\u4e0d\u4ec5\u9002\u7528\u4e8e\u63a5\u53e3\u548c\u7c7b\uff0c\u4e5f\u9002\u7528\u4e8e\u65b9\u6cd5\u3002\u4e00\u4e2a\u65b9\u6cd5\u5c3d\u53ef\u80fd\u53ea\u505a\u4e00\u4ef6\u4e8b\u3002","title":"\u5355\u4e00\u804c\u8d23\u539f\u5219\uff08Single Responsibility Principle\uff09"},{"location":"%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#open-closed-principle","text":"https://blog.csdn.net/lovelion/article/details/7537584 \u5f00\u95ed\u539f\u5219\u662f\u6307\u4e00\u4e2a\u8f6f\u4ef6\u5b9e\u4f53\u5982\u7c7b\u3001\u6a21\u5757\u548c\u51fd\u6570\u5e94\u8be5\u5bf9 \u6269\u5c55 \u5f00\u653e\uff0c\u5bf9 \u4fee\u6539 \u5173\u95ed\u3002\u8f6f\u4ef6\u5b9e\u4f53\u5e94\u5c3d\u91cf\u5728\u4e0d\u4fee\u6539\u539f\u6709\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u6269\u5c55\u3002 \u8f6f\u4ef6\u5b9e\u4f53\u53ef\u4ee5\u6307\u4e00\u4e2a\u8f6f\u4ef6\u6a21\u5757\uff0c\u4e00\u4e2a\u7531\u591a\u4e2a\u7c7b\u7ec4\u6210\u7684\u5c40\u90e8\u7ed3\u6784\u6216\u4e00\u4e2a\u72ec\u7acb\u7684\u7c7b\u3002 \u62bd\u8c61\u5316 \u662f\u5f00\u95ed\u539f\u5219\u7684\u5173\u952e\u2014\u2014Q\uff1a\u4ec0\u4e48\u662f\u62bd\u8c61\u5462\uff1f \u4f8b\uff1a \u65b0\u52a0\u4e00\u4e2a\u56fe\u8868\u5c31\u8981\u65b0\u52a0if\u6761\u4ef6\u5224\u65ad\u903b\u8f91\u3002 \u91cd\u6784\uff1a","title":"\u5f00\u95ed\u539f\u5219\uff08Open Closed Principle\uff09"},{"location":"%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#liskov-substitution-principle","text":"","title":"\u91cc\u6c0f\u66ff\u6362\u539f\u5219\uff08Liskov Substitution Principle\uff09"},{"location":"%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_3","text":"\u8fd9\u79cd\u6a21\u5f0f\u6d89\u53ca\u5230\u4e00\u4e2a\u5355\u4e00\u7684\u7c7b\uff0c\u8be5\u7c7b\u8d1f\u8d23\u521b\u5efa\u81ea\u5df1\u7684\u5bf9\u8c61\uff0c\u540c\u65f6\u786e\u4fdd\u53ea\u6709\u5355\u4e2a\u5bf9\u8c61\u88ab\u521b\u5efa\u3002\u8fd9\u4e2a\u7c7b\u63d0\u4f9b\u4e86\u4e00\u79cd\u8bbf\u95ee\u5176\u552f\u4e00\u7684\u5bf9\u8c61\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\uff0c\u4e0d\u9700\u8981\u5b9e\u4f8b\u5316\u8be5\u7c7b\u7684\u5bf9\u8c61\u3002 \u6ce8\u610f\uff1a \u5355\u4f8b\u7c7b\u53ea\u80fd\u6709\u4e00\u4e2a\u5b9e\u4f8b\u3002 \u5355\u4f8b\u7c7b\u5fc5\u987b\u81ea\u5df1\u521b\u5efa\u81ea\u5df1\u7684\u552f\u4e00\u5b9e\u4f8b\u3002 \u5355\u4f8b\u7c7b\u5fc5\u987b\u7ed9\u6240\u6709\u5176\u4ed6\u5bf9\u8c61\u63d0\u4f9b\u8fd9\u4e00\u5b9e\u4f8b\u3002 \u4f18\u70b9\uff1a \u5185\u5b58\u91cc\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u51cf\u5c11\u4e86\u5185\u5b58\u5f00\u9500\u3002\uff08\u9891\u7e41\u7684\u521b\u5efa\u548c\u9500\u6bc1\u5b9e\u4f8b\uff09 \u907f\u514d\u5bf9\u8d44\u6e90\u7684\u591a\u91cd\u5360\u7528\u3002\uff08\u6bd4\u5982\u5199\u6587\u4ef6\u64cd\u4f5c\uff09 \u7f3a\u70b9\uff1a \u6ca1\u6709\u63a5\u53e3\uff0c\u4e0d\u80fd\u7ee7\u627f\uff0c\u4e0e\u5355\u4e00\u804c\u8d23\u539f\u5219\u51b2\u7a81\uff0c\u4e00\u4e2a\u7c7b\u5e94\u8be5\u53ea\u5173\u5fc3\u5185\u90e8\u903b\u8f91\uff0c\u800c\u4e0d\u5173\u5fc3\u5916\u9762\u600e\u4e48\u6837\u6765\u5b9e\u4f8b\u5316\u3002 C++\u5b9e\u73b0 \u61d2\u6c49\u5f0f\uff08lazy-Initialzation\uff09 \u76f4\u5230\u4f7f\u7528\u65f6\u624d\u5b9e\u4f8b\u5316\u5bf9\u8c61\uff0c\u5373\u76f4\u5230\u8c03\u7528GetInstance\u65f6\u624dnew\u4e00\u4e2a\u5bf9\u8c61\u3002 class Singleton { public: static Singleton* GetInstance() //\u516c\u6709\u9759\u6001\u65b9\u6cd5\uff0c\u83b7\u53d6\u8be5\u5b9e\u4f8b { if(pInstance == nullptr) //\u5224\u65ad\u662f\u5426\u7b2c\u4e00\u6b21\u8c03\u7528 pInstance = new Singleton(); return pInstance; } private: Singleton(); //\u5c06\u6784\u9020\u51fd\u6570\u8bbe\u4e3a\u79c1\u6709 static Singleton *pInstance; //\u79c1\u6709\u9759\u6001\u6307\u9488\u53d8\u91cf\uff0c\u6307\u5411\u552f\u4e00\u5b9e\u4f8b }; \u6784\u9020\u51fd\u6570\u662f\u79c1\u6709\u7684\uff0c\u5bfc\u81f4\u5728\u5916\u90e8\u4efb\u4f55\u5c1d\u8bd5\u521b\u5efa\u5b9e\u4f8b\u7684\u5c1d\u8bd5\u90fd\u4f1a\u5931\u8d25\u3002 \u7981\u6b62\u62f7\u8d1d\u548c\u8d4b\u503c\u3002 \u552f\u4e00\u65b9\u6cd5\u662f\u901a\u8fc7\u8c03\u7528\u516c\u6709\u9759\u6001\u51fd\u6570GetInstance\uff0c\u8fd4\u56de\u7684\u5b9e\u4f8b\u662f\u8be5\u51fd\u6570\u9996\u6b21\u88ab\u8bbf\u95ee\u65f6\u521b\u5efa\u7684\u3002 \u7cfb\u7edf\u4f1a\u5728\u7a0b\u5e8f\u7ed3\u675f\u540e\u91ca\u653e\u6240\u6709\u5168\u5c40\u53d8\u91cf\u5e76\u6790\u6784\u6240\u6709\u7c7b\u7684\u9759\u6001\u5bf9\u8c61\u3002 \u997f\u6c49\u5f0f //Singleton.h class Singleton { public: static Singleton* getInstance(); private: Singleton(); Singleton(const Singleton&); Singleton& operator=(const Singleton&); static Singleton* instance_; }; //Singleton.cpp #include \"Singleton.h\" Singleton* Singleton::instance_ = new Singleton(); Singleton::Singleton() {} Singleton* Singleton::getInstance() { return instance_; } \u4e0e\u61d2\u6c49\u5f0f\u533a\u522b\u5728\u4e8e\uff0c\u5728\u5168\u5c40\u4f5c\u7528\u57df\u8fdb\u884c\u5355\u4f8b\u7c7b\u7684\u5b9e\u4f8b\u5316\uff0c\u5e76\u4e14\u6b64\u5b9e\u4f8b\u521d\u59cb\u5316\u5355\u4f8b\u7c7b\u7684\u9759\u6001\u6210\u5458\u6307\u9488\u3002 Meyers's Singleton class Singleton { public: Singleton(const Singleton&)=delete; Singleton& operator=(const Singleton&)=delete; ~Singleton(){}\uff1b static Singleton& GetInstance() { static Singleton instance; return instance; } private: Singleton()\uff1b }; static Singleton* GetInstance() { static Singleton instance; return &instance; } \u7ebf\u7a0b\u5b89\u5168\u7684\u5355\u4f8b\u6a21\u5f0f Singleton* Singleton::GetInstance() { lock(); //\u4e0a\u9501 if (NULL == instance) { instance = new Singleton(); } unlock(); return instance; } \u6bcf\u6b21\u83b7\u53d6\u5b9e\u4f8b\u7684\u65f6\u5019\u90fd\u8981\u5148\u4e0a\u9501\uff0c\u4e4b\u540e\u5728\u89e3\u9501\uff0c\u5982\u679c\u6709\u5f88\u591a\u7ebf\u7a0b\u7684\u8bdd\uff0c\u53ef\u80fd\u4f1a\u9020\u6210\u5927\u91cf\u7ebf\u7a0b\u963b\u585e\u3002 Singleton* Singleton::GetInstance() { if (NULL == instance) { lock(); //\u4e0a\u9501 if (NULL == instance) { instance = new Singleton(); } unlock(); } return instance; } \u6539\u8fdb\u540e\uff0c\u7edd\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u662f\u76f4\u63a5\u8fd4\u56de\u5b9e\u4f8b\uff0c\u53ea\u6709\u5728\u6ca1\u6709\u5b9e\u4f8b\u7684\u65f6\u5019\uff0c\u624d\u4f1a\u4e0a\u9501\u3001\u89e3\u9501\u3002 How should it be used You need to have one and only one object of a type in system \u4f60\u9700\u8981\u7cfb\u7edf\u4e2d\u53ea\u6709 \u552f\u4e00 \u4e00\u4e2a\u5b9e\u4f8b\u5b58\u5728\u7684\u7c7b\u7684 \u5168\u5c40 \u53d8\u91cf\u7684\u65f6\u5019\u624d\u4f7f\u7528\u5355\u4f8b\u3002 How to create the best singleton: The smaller, the better. I am a minimalist Make sure it is thread safe Make sure it is never null Make sure it is created only once Lazy or system initialization? Up to your requirements Sometimes the OS or the JVM creates singletons for you (e.g. in Java every class definition is a singleton) Provide a destructor or somehow figure out how to dispose resources Use little memory \u8d8a\u5c0f\u8d8a\u597d\uff0c\u8d8a\u7b80\u5355\u8d8a\u597d\uff0c\u7ebf\u7a0b\u5b89\u5168\uff0c\u5185\u5b58\u4e0d\u6cc4\u9732 \u201cSingleton\u4ec5\u4ec5\u662f\u4e00\u4e2a\u5305\u88c5\u597d\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u90a3\u4f60\u80fd\u8bf4\u8bf4\u5b83\u548c\u5168\u5c40\u53d8\u91cf\u7684\u76f8\u540c\u4e0e\u4e0d\u540c\u4e48\uff1f\u201d \u5355\u4f8b\u53ef\u4ee5\u8bf4\u662f\u5168\u5c40\u53d8\u91cf\u7684\u66ff\u4ee3\u54c1\u3002\u5176\u62e5\u6709\u5168\u5c40\u53d8\u91cf\u7684\u4f17\u591a\u7279\u70b9\uff1a \u5168\u5c40\u53ef\u89c1\u4e14\u8d2f\u7a7f\u5e94\u7528\u7a0b\u5e8f\u7684\u6574\u4e2a\u751f\u547d\u5468\u671f\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u5355\u4f8b\u6a21\u5f0f\u8fd8\u62e5\u6709\u4e00\u4e9b\u5168\u5c40\u53d8\u91cf\u6240\u4e0d\u5177\u6709\u7684\u6027\u8d28\uff1a\u540c\u4e00\u7c7b\u578b\u7684\u5bf9\u8c61\u5b9e\u4f8b\u53ea\u80fd\u6709\u4e00\u4e2a\uff0c\u540c\u65f6\u9002\u5f53\u7684\u5b9e\u73b0\u8fd8\u62e5\u6709\u5ef6\u8fdf\u521d\u59cb\u5316\uff08Lazy\uff09\u7684\u529f\u80fd\uff0c\u53ef\u4ee5\u907f\u514d\u8017\u65f6\u7684\u5168\u5c40\u53d8\u91cf\u521d\u59cb\u5316\u6240\u5bfc\u81f4\u7684\u542f\u52a8\u901f\u5ea6\u4e0d\u4f73\u7b49\u95ee\u9898\u3002\u8981\u8bf4\u660e\u7684\u662f\uff0cSingleton\u7684\u6700\u4e3b\u8981\u76ee\u7684\u5e76\u4e0d\u662f\u4f5c\u4e3a\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\u4f7f\u7528\uff0c\u800c\u662f\u4fdd\u8bc1\u7c7b\u578b\u5b9e\u4f8b\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u3002\u5b83\u6240\u5177\u6709\u7684\u5168\u5c40\u8bbf\u95ee\u7279\u6027\u4ec5\u4ec5\u662f\u5b83\u7684\u4e00\u4e2a\u526f\u4f5c\u7528\u3002\u4f46\u6b63\u662f\u8fd9\u4e2a\u526f\u4f5c\u7528\u4f7f\u5b83\u66f4\u7c7b\u4f3c\u4e8e\u5305\u88c5\u597d\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u4ece\u800c\u5141\u8bb8\u5404\u90e8\u5206\u4ee3\u7801\u5bf9\u5176\u76f4\u63a5\u8fdb\u884c\u64cd\u4f5c\u3002\u8f6f\u4ef6\u5f00\u53d1\u4eba\u5458\u9700\u8981\u901a\u8fc7\u4ed4\u7ec6\u5730\u9605\u8bfb\u5404\u90e8\u5206\u5bf9\u5176\u8fdb\u884c\u64cd\u4f5c\u7684\u4ee3\u7801\u624d\u80fd\u4e86\u89e3\u5176\u771f\u6b63\u7684\u4f7f\u7528\u65b9\u5f0f\uff0c\u800c\u4e0d\u80fd\u901a\u8fc7\u63a5\u53e3\u5f97\u5230\u7ec4\u4ef6\u4f9d\u8d56\u6027\u7b49\u4fe1\u606f\u3002\u5982\u679cSingleton\u8bb0\u5f55\u4e86\u7a0b\u5e8f\u7684\u8fd0\u884c\u72b6\u6001\uff0c\u90a3\u4e48\u8be5\u72b6\u6001\u5c06\u662f\u4e00\u4e2a\u5168\u5c40\u72b6\u6001\u3002\u5404\u4e2a\u7ec4\u4ef6\u5bf9\u5176\u8fdb\u884c\u64cd\u4f5c\u7684\u8c03\u7528\u65f6\u5e8f\u5c06\u53d8\u5f97\u5341\u5206\u91cd\u8981\uff0c\u4ece\u800c\u4f7f\u5404\u4e2a\u7ec4\u4ef6\u4e4b\u95f4\u5b58\u5728\u7740\u4e00\u79cd\u9690\u5f0f\u7684\u4f9d\u8d56\u3002 \u5bf9\u8c61\u91ca\u653e\u95ee\u9898 \u7a0b\u5e8f\u4e2d\u53ea\u6709new\u6ca1\u6709delete A\uff1a\u4e00\u822c\u60c5\u51b5\u4e0b\u5355\u4f8b\u6a21\u5f0f\u7684\u5b9e\u4f8b\u662f\u5e38\u9a7b\u5185\u5b58\u7684\uff0c\u56e0\u6b64\u4e0d\u9700\u8981\u624b\u52a8\u91ca\u653e\uff0c\u5982\u679c\u7684\u786e\u9700\u8981\u91ca\u653e\u5b9e\u4f8b\u5360\u7528\u7684\u5185\u5b58\uff0c\u4e00\u5b9a\u4e0d\u80fd\u5728\u5355\u4f8b\u5185\u7684\u6790\u6784\u51fd\u6570\u4e2d\u8fdb\u884cdelete\u64cd\u4f5c\uff0c\u8fd9\u6837\u4f1a\u9020\u6210\u65e0\u9650\u5faa\u73af\u3002 \u5982\u679c\u5728\u7c7b\u7684\u6790\u6784\u51fd\u6570\u4e2d\u6709\u5fc5\u8981\u7684\u64cd\u4f5c\uff0c\u4f8b\u5982\u5173\u95ed\u6587\u4ef6\uff0c\u91ca\u653e\u5916\u90e8\u8d44\u6e90\uff0c\u9700\u8981\u6b63\u5e38\u5220\u9664\u5b9e\u4f8b\u3002 bad idea\uff1a\u53ef\u4ee5\u5728\u7a0b\u5e8f\u7ed3\u675f\u65f6\u8c03\u7528GetInstance\uff0c\u7136\u540edelete\uff0c\u4f46\u662fdelete\u4e4b\u540e\u65e0\u6cd5\u4fdd\u8bc1\u540e\u9762\u8fd8\u6709\u6ca1\u6709\u4eba\u8c03\u7528GetInstance\u3002 \u4e00\u4e2a\u59a5\u5584\u7684\u65b9\u6cd5\u662f\u8ba9\u8fd9\u4e2a\u7c7b\u81ea\u5df1\u77e5\u9053\u5728\u5408\u9002\u7684\u65f6\u5019\u628a\u81ea\u5df1\u5220\u9664\uff0c\u6216\u8005\u8bf4\u628a\u5220\u9664\u81ea\u5df1\u7684\u64cd\u4f5c\u6302\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u7684\u67d0\u4e2a\u5408\u9002\u7684\u70b9\u4e0a\uff0c\u4f7f\u5176\u5728\u6070\u5f53\u7684\u65f6\u5019\u88ab\u81ea\u52a8\u6267\u884c\u3002 \u7a0b\u5e8f\u5728\u7ed3\u675f\u7684\u65f6\u5019\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u6790\u6784\u6240\u6709\u7684\u5168\u5c40\u53d8\u91cf\u3002\u4e8b\u5b9e\u4e0a\uff0c\u7cfb\u7edf\u4e5f\u4f1a\u6790\u6784\u6240\u6709\u7684\u7c7b\u7684\u9759\u6001\u6210\u5458\u53d8\u91cf\uff0c\u5c31\u50cf\u8fd9\u4e9b\u9759\u6001\u6210\u5458\u4e5f\u662f\u5168\u5c40\u53d8\u91cf\u4e00\u6837\u3002\u5229\u7528\u8fd9\u4e2a\u7279\u5f81\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5355\u4f8b\u7c7b\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u8fd9\u6837\u7684\u9759\u6001\u6210\u5458\u53d8\u91cf\uff0c\u800c\u5b83\u7684\u552f\u4e00\u5de5\u4f5c\u5c31\u662f\u5728\u6790\u6784\u51fd\u6570\u4e2d\u5220\u9664\u5355\u4f8b\u7c7b\u7684\u5b9e\u4f8b\u3002\u5982\u4e0b\u9762\u7684\u4ee3\u7801\u4e2d\u7684CGarbo\u7c7b\uff08Garbo\u610f\u4e3a\u5783\u573e\u5de5\u4eba\uff09\uff1a class CSingleton { private: CSingleton() { } static CSingleton *m_pInstance; class CGarbo //\u5b83\u7684\u552f\u4e00\u5de5\u4f5c\u5c31\u662f\u5728\u6790\u6784\u51fd\u6570\u4e2d\u5220\u9664CSingleton\u7684\u5b9e\u4f8b { public: ~CGarbo() { if(CSingleton::m_pInstance) delete CSingleton::m_pInstance; // delete } }; static CGarbo Garbo; //\u5b9a\u4e49\u4e00\u4e2a\u9759\u6001\u6210\u5458\u53d8\u91cf\uff0c\u7a0b\u5e8f\u7ed3\u675f\u65f6\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u8c03\u7528\u5b83\u7684\u6790\u6784\u51fd\u6570 public: static CSingleton * GetInstance() { if(m_pInstance == NULL) //\u5224\u65ad\u662f\u5426\u7b2c\u4e00\u6b21\u8c03\u7528 m_pInstance = new CSingleton(); return m_pInstance; } }; Reference\uff1a https://www.cnblogs.com/leaves1024/p/10985599.html https://www.cnblogs.com/faith0217/articles/4083476.html https://zhuanlan.zhihu.com/p/37469260","title":"\u5355\u4f8b\u6a21\u5f0f"},{"location":"%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_4","text":"","title":"\u5de5\u5382\u6a21\u5f0f"},{"location":"%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_5","text":"\u5de5\u5382\u7c7b\uff1a\u521b\u5efa\u6307\u5b9a\u5177\u4f53\u5b9e\u4f8b\u5bf9\u8c61\u7684\u63a5\u53e3 \u62bd\u8c61\u4ea7\u54c1\u7c7b\uff1a\u5177\u4f53\u4ea7\u54c1\u7c7b\u7684\u7236\u7c7b\u6216\u63a5\u53e3 \u5177\u4f53\u4ea7\u54c1\u7c7b\uff1a\u5de5\u5382\u7c7b\u521b\u5efa\u7684\u5bf9\u8c61\u662f\u5177\u4f53\u4ea7\u54c1\u7c7b\u7684\u5b9e\u4f8b \u7279\u70b9 \uff1a\u5de5\u5382\u7c7b\u5c01\u88c5\u4e86\u521b\u5efa\u4ea7\u54c1\u5bf9\u8c61\u7684\u51fd\u6570 \u7f3a\u70b9 \uff1a\u6269\u5c55\u5dee\uff0c\u65b0\u589e\u4ea7\u54c1\u7684\u65f6\u5019\u9700\u8981\u4fee\u6539\u5de5\u5382\u7c7b \u4f8b\uff1a // \u978b\u5b50\u62bd\u8c61\u7c7b class Shoes //interface { public: virtual ~Shoes() {} virtual void Show() = 0; }; // \u8010\u514b\u978b\u5b50 class NiKeShoes : public Shoes { public: void Show() { std::cout << \"\u6211\u662f\u8010\u514b\u7403\u978b\uff0c\u6211\u7684\u5e7f\u544a\u8bed\uff1aJust do it\" << std::endl; } }; // \u963f\u8fea\u8fbe\u65af\u978b\u5b50 class AdidasShoes : public Shoes { public: void Show() { std::cout << \"\u6211\u662f\u963f\u8fea\u8fbe\u65af\u7403\u978b\uff0c\u6211\u7684\u5e7f\u544a\u8bed:Impossible is nothing\" << std::endl; } }; // \u674e\u5b81\u978b\u5b50 class LiNingShoes : public Shoes { public: void Show() { std::cout << \"\u6211\u662f\u674e\u5b81\u7403\u978b\uff0c\u6211\u7684\u5e7f\u544a\u8bed\uff1aEverything is possible\" << std::endl; } }; //ShoesFactory\u4e3a\u5de5\u5382\u7c7b\uff0c\u7c7b\u91cc\u5b9e\u73b0\u6839\u636e\u978b\u5b50\u7c7b\u578b\u521b\u5efa\u5bf9\u5e94\u978b\u5b50\u4ea7\u54c1\u5bf9\u8c61\u7684CreateShoes(SHOES_TYPE type)\u51fd\u6570\u3002 enum SHOES_TYPE { NIKE, LINING, ADIDAS }; // \u603b\u978b\u5382 class ShoesFactory { public: // \u6839\u636e\u978b\u5b50\u7c7b\u578b\u521b\u5efa\u5bf9\u5e94\u7684\u978b\u5b50\u5bf9\u8c61 Shoes *CreateShoes(SHOES_TYPE type) { switch (type) { case NIKE: return new NiKeShoes(); break; case LINING: return new LiNingShoes(); break; case ADIDAS: return new AdidasShoes(); break; default: return NULL; break; } } }; int main() { // \u6784\u9020\u5de5\u5382\u5bf9\u8c61 ShoesFactory shoesFactory; // \u4ece\u978b\u5de5\u5382\u5bf9\u8c61\u521b\u5efa\u963f\u8fea\u8fbe\u65af\u978b\u5bf9\u8c61 Shoes *pNikeShoes = shoesFactory.CreateShoes(NIKE); if (pNikeShoes != NULL) { // \u8010\u514b\u7403\u978b\u5e7f\u544a\u558a\u8d77 pNikeShoes->Show(); // \u91ca\u653e\u8d44\u6e90 delete pNikeShoes; pNikeShoes = NULL; } // \u4ece\u978b\u5de5\u5382\u5bf9\u8c61\u521b\u5efa\u963f\u8fea\u8fbe\u65af\u978b\u5bf9\u8c61 Shoes *pLiNingShoes = shoesFactory.CreateShoes(LINING); if (pLiNingShoes != NULL) { // \u674e\u5b81\u7403\u978b\u5e7f\u544a\u558a\u8d77 pLiNingShoes->Show(); // \u91ca\u653e\u8d44\u6e90 delete pLiNingShoes; pLiNingShoes = NULL; } // \u4ece\u978b\u5de5\u5382\u5bf9\u8c61\u521b\u5efa\u963f\u8fea\u8fbe\u65af\u978b\u5bf9\u8c61 Shoes *pAdidasShoes = shoesFactory.CreateShoes(ADIDAS); if (pAdidasShoes != NULL) { // \u963f\u8fea\u8fbe\u65af\u7403\u978b\u5e7f\u544a\u558a\u8d77 pAdidasShoes->Show(); // \u91ca\u653e\u8d44\u6e90 delete pAdidasShoes; pAdidasShoes = NULL; } return 0; }","title":"\u7b80\u5355\u5de5\u5382\u6a21\u5f0f"},{"location":"%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_6","text":"\u60c5\u666f\uff1a\u4e3a\u4e86\u751f\u4ea7\u67d0\u79cd\u978b\u5b50\uff0c\u9700\u8981\u4e3a\u4e0d\u540c\u724c\u5b50\u7684\u978b\u5f00\u8bbe\u72ec\u7acb\u7684\u751f\u4ea7\u7ebf\u3002 \u62bd\u8c61\u5de5\u5382\u7c7b\uff1a\u63d0\u4f9b\u521b\u5efa\u5177\u4f53\u4ea7\u54c1\u7c7b\u7684\u63a5\u53e3 \u5177\u4f53\u5de5\u5382\u7c7b\uff1a\u7ee7\u627f\u62bd\u8c61\u5de5\u5382\uff0c\u5b9e\u73b0\u521b\u5efa\u5177\u4f53\u4ea7\u54c1\u5bf9\u8c61 \u62bd\u8c61\u4ea7\u54c1\u7c7b\uff1a\u5177\u4f53\u4ea7\u54c1\u7c7b\u7684\u63a5\u53e3 \u5177\u4f53\u4ea7\u54c1\u7c7b\uff1a\u5177\u4f53\u5de5\u5382\u8981\u521b\u5efa\u7684\u5bf9\u8c61 \u7279\u70b9\uff1a \u5de5\u5382\u90e8\u5206\u62bd\u8c61\u51fa\u4e86\u63a5\u53e3\uff0c\u5b9e\u73b0\u4ea4\u7ed9\u5b50\u7c7b \u7f3a\u70b9\uff1a \u65b0\u589e\u4ea7\u54c1\u65f6\uff0c\u8981\u589e\u52a0\u5bf9\u5e94\u4ea7\u54c1\u7684\u5177\u4f53\u5de5\u5382\u7c7b\u3002 // \u603b\u978b\u5382 class ShoesFactory // Factory interface { public: virtual Shoes *CreateShoes() = 0; virtual ~ShoesFactory() {} }; // \u8010\u514b\u751f\u4ea7\u8005/\u751f\u4ea7\u94fe class NiKeProducer : public ShoesFactory { public: Shoes *CreateShoes() { return new NiKeShoes(); } }; // \u963f\u8fea\u8fbe\u65af\u751f\u4ea7\u8005/\u751f\u4ea7\u94fe class AdidasProducer : public ShoesFactory { public: Shoes *CreateShoes() { return new AdidasShoes(); } }; // \u674e\u5b81\u751f\u4ea7\u8005/\u751f\u4ea7\u94fe class LiNingProducer : public ShoesFactory { public: Shoes *CreateShoes() { return new LiNingShoes(); } }; int main() { // ================ \u751f\u4ea7\u8010\u514b\u6d41\u7a0b ==================== // // \u978b\u5382\u5f00\u8bbe\u8010\u514b\u751f\u4ea7\u7ebf ShoesFactory *niKeProducer = new NiKeProducer(); // \u8010\u514b\u751f\u4ea7\u7ebf\u4ea7\u51fa\u7403\u978b Shoes *nikeShoes = niKeProducer->CreateShoes(); // \u8010\u514b\u7403\u978b\u5e7f\u544a\u558a\u8d77 nikeShoes->Show(); // \u91ca\u653e\u8d44\u6e90 delete nikeShoes; delete niKeProducer; // ================ \u751f\u4ea7\u963f\u8fea\u8fbe\u65af\u6d41\u7a0b ==================== // // \u978b\u5382\u5f00\u8bbe\u963f\u8fea\u8fbe\u65af\u751f\u4ea7\u8005 ShoesFactory *adidasProducer = new AdidasProducer(); // \u963f\u8fea\u8fbe\u65af\u751f\u4ea7\u7ebf\u4ea7\u51fa\u7403\u978b Shoes *adidasShoes = adidasProducer->CreateShoes(); // \u963f\u8fea\u8fbe\u65af\u7403\u978b\u5e7f\u558a\u8d77 adidasShoes->Show(); // \u91ca\u653e\u8d44\u6e90 delete adidasShoes; delete adidasProducer; return 0; }","title":"\u5de5\u5382\u6a21\u5f0f"},{"location":"%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#_7","text":"\u60c5\u666f\uff1a\u73b0\u5728\u5de5\u5382\u4e0d\u6b62\u4ea7\u978b\u5b50\u4e86\uff0c\u8863\u670d\u88e4\u5b50\u4e00\u8d77\u4ea7\u4e86\u3002 \u7ed3\u6784\u4e0e\u5de5\u5382\u6a21\u5f0f\u4e00\u6837\u3002 // \u57fa\u7c7b \u8863\u670d class Clothe { public: virtual void Show() = 0; virtual ~Clothe() {} }; // \u8010\u514b\u8863\u670d class NiKeClothe : public Clothe { public: void Show() { std::cout << \"\u6211\u662f\u8010\u514b\u8863\u670d\uff0c\u65f6\u5c1a\u6211\u6700\u5728\u884c\uff01\" << std::endl; } }; // \u57fa\u7c7b \u978b\u5b50 class Shoes { public: virtual void Show() = 0; virtual ~Shoes() {} }; // \u8010\u514b\u978b\u5b50 class NiKeShoes : public Shoes { public: void Show() { std::cout << \"\u6211\u662f\u8010\u514b\u7403\u978b\uff0c\u8ba9\u4f60\u9177\u8d77\u6765\uff01\" << std::endl; } }; //Factory\u4e3a\u62bd\u8c61\u5de5\u5382\uff0c\u63d0\u4f9b\u4e86\u521b\u5efa\u978b\u5b50CreateShoes()\u548c\u8863\u670d\u4ea7\u54c1CreateClothe()\u5bf9\u8c61\u7684\u63a5\u53e3\u3002 //NiKeProducer\u4e3a\u5177\u4f53\u5de5\u5382\uff0c\u5b9e\u73b0\u4e86\u521b\u5efa\u8010\u514b\u978b\u5b50\u548c\u8010\u514b\u8863\u670d\u7684\u65b9\u5f0f\u3002 // \u603b\u5382 class Factory { public: virtual Shoes *CreateShoes() = 0; virtual Clothe *CreateClothe() = 0; virtual ~Factory() {} }; // \u8010\u514b\u751f\u4ea7\u8005/\u751f\u4ea7\u94fe class NiKeProducer : public Factory { public: Shoes *CreateShoes() { return new NiKeShoes(); } Clothe *CreateClothe() { return new NiKeClothe(); } }; int main() { // ================ \u751f\u4ea7\u8010\u514b\u6d41\u7a0b ==================== // // \u978b\u5382\u5f00\u8bbe\u8010\u514b\u751f\u4ea7\u7ebf Factory *niKeProducer = new NiKeProducer(); // \u8010\u514b\u751f\u4ea7\u7ebf\u4ea7\u51fa\u7403\u978b Shoes *nikeShoes = niKeProducer->CreateShoes(); // \u8010\u514b\u751f\u4ea7\u7ebf\u4ea7\u51fa\u8863\u670d Clothe *nikeClothe = niKeProducer->CreateClothe(); // \u8010\u514b\u7403\u978b\u5e7f\u544a\u558a\u8d77 nikeShoes->Show(); // \u8010\u514b\u8863\u670d\u5e7f\u544a\u558a\u8d77 nikeClothe->Show(); // \u91ca\u653e\u8d44\u6e90 delete nikeShoes; delete nikeClothe; delete niKeProducer; return 0; } \u5c0f\u7ed3\uff1a \u7b80\u5355\u5de5\u5382\u6a21\u5f0f\uff0c\u8fdd\u80cc\u4e86\u5f00\u95ed\u539f\u5219\u3002 \u5de5\u5382\u548c\u62bd\u8c61\u5de5\u5382\uff0c\u589e\u52a0\u4ea7\u54c1\u7c7b\u65f6\u9700\u8981\u589e\u52a0\u5bf9\u5e94\u7684\u5177\u4f53\u5de5\u5382\u7c7b\u3002 Reference\uff1a https://zhuanlan.zhihu.com/p/83535678 https://zhuanlan.zhihu.com/p/83537599","title":"\u62bd\u8c61\u5de5\u5382"},{"location":"%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/#mvc","text":"Model-View-Controller(\u6a21\u578b-\u89c6\u56fe-\u63a7\u5236\u5668\u6a21\u5f0f) Model\uff08\u6a21\u578b\uff09 - \u6a21\u578b\u4ee3\u8868\u4e00\u4e2a\u5b58\u53d6\u6570\u636e\u7684\u5bf9\u8c61\u6216 JAVA POJO\u3002\u5b83\u4e5f\u53ef\u4ee5\u5e26\u6709\u903b\u8f91\uff0c\u5728\u6570\u636e\u53d8\u5316\u65f6\u66f4\u65b0\u63a7\u5236\u5668\u3002 View\uff08\u89c6\u56fe\uff09 - \u89c6\u56fe\u4ee3\u8868\u6a21\u578b\u5305\u542b\u7684\u6570\u636e\u7684\u53ef\u89c6\u5316\u3002 Controller\uff08\u63a7\u5236\u5668\uff09 - \u63a7\u5236\u5668\u4f5c\u7528\u4e8e\u6a21\u578b\u548c\u89c6\u56fe\u4e0a\u3002\u5b83\u63a7\u5236\u6570\u636e\u6d41\u5411\u6a21\u578b\u5bf9\u8c61\uff0c\u5e76\u5728\u6570\u636e\u53d8\u5316\u65f6\u66f4\u65b0\u89c6\u56fe\u3002\u5b83\u4f7f\u89c6\u56fe\u4e0e\u6a21\u578b\u5206\u79bb\u5f00\u3002 \u200b \u6a21\u578b\uff08Model\uff09 \uff1a\u5c01\u88c5\u7684\u662f\u6570\u636e\u6e90\u548c\u6240\u6709\u57fa\u4e8e\u5bf9\u8fd9\u4e9b\u6570\u636e\u7684\u64cd\u4f5c\u3002\u5728\u4e00\u4e2a\u7ec4\u4ef6\u4e2d\uff0cModel\u5f80\u5f80\u8868\u793a\u7ec4\u4ef6\u7684\u72b6\u6001\u548c\u64cd\u4f5c\u72b6\u6001\u7684\u65b9\u6cd5\u3002 \u200b \u89c6\u56fe\uff08View\uff09 \uff1a\u5c01\u88c5\u7684\u662f\u5bf9\u6570\u636e\u6e90Model\u7684\u4e00\u79cd\u663e\u793a\u3002\u4e00\u4e2a\u6a21\u578b\u53ef\u4ee5\u7531\u591a\u4e2a\u89c6\u56fe\uff0c\u800c\u4e00\u4e2a\u89c6\u56fe\u7406\u8bba\u4e0a\u4e5f\u53ef\u4ee5\u540c\u4e0d\u540c\u7684\u6a21\u578b\u5173\u8054\u8d77\u6765\u3002 \u200b \u63a7\u5236\u5668\uff08Control\uff09 \uff1a\u5c01\u88c5\u7684\u662f\u5916\u754c\u4f5c\u7528\u4e8e\u6a21\u578b\u7684\u64cd\u4f5c\u3002\u901a\u5e38\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u4f1a\u8f6c\u53d1\u5230\u6a21\u578b\u4e0a\uff0c\u5e76\u8c03\u7528\u6a21\u578b\u4e2d\u76f8\u5e94\u7684\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u65b9\u6cd5\u3002\u4e00\u822cController\u5728Model\u548cView\u4e4b\u95f4\u8d77\u5230\u4e86\u6c9f\u901a\u7684\u4f5c\u7528\uff0c\u5904\u7406\u7528\u6237\u5728View\u4e0a\u7684\u8f93\u5165\uff0c\u5e76\u8f6c\u53d1\u7ed9Model\u3002\u8fd9\u6837Model\u548cView\u4e24\u8005\u4e4b\u95f4\u53ef\u4ee5\u505a\u5230\u677e\u6563\u8026\u5408\uff0c\u751a\u81f3\u53ef\u4ee5\u5f7c\u6b64\u4e0d\u77e5\u9053\u5bf9\u65b9\uff0c\u800c\u7531Controller\u8fde\u63a5\u8d77\u8fd9\u4e24\u4e2a\u90e8\u5206\u3002 \u5728\u8bbe\u8ba1\u6a21\u5f0f\u4e2d\uff0cMVC\u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u6bd4\u8f83\u9ad8\u5c42\u7684\u6a21\u5f0f\uff0c\u5b83\u7531\u591a\u4e2a\u66f4\u57fa\u672c\u7684\u8bbe\u8ba1\u6a21\u5f0f\u7ec4\u5408\u800c\u6210\uff0c Model-View\u7684\u5173\u7cfb\u5b9e\u9645\u4e0a\u662fObserver\u6a21\u5f0f\uff0c\u6a21\u578b\u7684\u72b6\u6001\u548c\u8bd5\u56fe\u7684\u663e\u793a\u76f8\u4e92\u54cd\u5e94\uff0c\u800cView-Controller\u5219\u662f\u7531Strategy\u6a21\u5f0f\u6240\u63cf\u8ff0\u7684\uff0cView\u7528\u4e00\u4e2a\u7279\u5b9a\u7684Controller\u7684\u5b9e\u4f8b\u6765\u5b9e\u73b0\u4e00\u4e2a\u7279\u5b9a\u7684\u54cd\u5e94\u7b56\u7565\uff0c\u66f4\u6362\u4e0d\u540c\u7684Controller\uff0c\u53ef\u4ee5\u6539\u53d8View\u5bf9\u7528\u6237\u8f93\u5165\u7684\u54cd\u5e94\u3002\u800c\u5176\u5b83\u7684\u4e00\u4e9b\u8bbe\u8ba1\u6a21\u5f0f\u4e5f\u5f88\u5bb9\u6613\u7ec4\u5408\u5230\u8fd9\u4e2a\u4f53\u7cfb\u4e2d\u3002\u6bd4\u5982\uff0c\u901a\u8fc7Composite\u6a21\u5f0f\uff0c\u53ef\u4ee5\u5c06\u591a\u4e2aView\u5d4c\u5957\u7ec4\u5408\u8d77\u6765\uff1b\u901a\u8fc7FactoryMethod\u6a21\u5f0f\u6765\u6307\u5b9aView\u7684Controller\uff0c\u7b49\u7b49 \u3002\u5728GOF\u4e66\u7684 Introduction\u4e2d\uff0c\u6709\u4e00\u5c0f\u8282\u662f\u201cDesign Patterns in Smalltalk MVC\u201d\u5373\u4ecb\u7ecd\u5728MVC\u6a21\u5f0f\u91cc\u7528\u5230\u7684\u8bbe\u8ba1\u6a21\u5f0f\u3002\u5b83\u5927\u6982\u5411\u6211\u4eec\u4f20\u8fbe\u4e86\u8fd9\u6837\u7684\u4fe1\u606f\uff1a\u5408\u6210\u6a21\u5f0f+\u7b56\u7565\u6a21\u5f0f+\u89c2\u5bdf\u8005\u6a21\u5f0f\u7ea6\u7b49\u4e8eMVC\u6a21\u5f0f\uff08\u5f53\u7136MVC\u6a21\u5f0f\u8981\u591a\u4e00\u4e9b \u4e1c\u897f\uff09\u3002 \u4f18\u70b9\uff1a \u4f7f\u7528MVC\u7684\u597d\u5904\uff0c\u4e00\u65b9\u9762\uff0c\u5206\u79bb\u6570\u636e\u548c\u5176\u8868\u793a\uff0c\u4f7f\u5f97\u6dfb\u52a0\u6216\u8005\u5220\u9664\u4e00\u4e2a\u7528\u6237\u89c6\u56fe\u53d8\u5f97\u5f88\u5bb9\u6613\uff0c\u751a\u81f3\u53ef\u4ee5\u5728\u7a0b\u5e8f\u6267\u884c\u65f6\u52a8\u6001\u7684\u8fdb\u884c\u3002Model\u548cView\u80fd\u591f\u5355\u72ec\u7684\u5f00\u53d1\uff0c\u589e\u52a0\u4e86\u7a0b\u5e8f\u4e86\u53ef\u7ef4\u62a4\u6027\uff0c\u53ef\u6269\u5c55\u6027\uff0c\u5e76\u4f7f\u6d4b\u8bd5\u53d8\u5f97\u66f4\u4e3a\u5bb9\u6613\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5c06\u63a7\u5236\u903b\u8f91\u548c\u8868\u73b0\u754c\u9762\u5206\u79bb\uff0c\u5141\u8bb8\u7a0b\u5e8f\u80fd\u591f\u5728\u8fd0\u884c\u65f6\u6839\u636e\u5de5\u4f5c\u6d41\u3001\u7528\u6237\u4e60\u60ef\u6216\u8005\u6a21\u578b\u72b6\u6001\u6765\u52a8\u6001\u9009\u62e9\u4e0d\u540c\u7684\u7528\u6237\u754c\u9762\u3002\u56e0\u6b64\uff0cMVC\u6a21\u5f0f\u5e7f\u6cdb\u7528\u4e8eWeb\u7a0b\u5e8f\u3001GUI\u7a0b\u5e8f\u7684\u67b6\u6784\u3002","title":"MVC\u6a21\u5f0f"}]}