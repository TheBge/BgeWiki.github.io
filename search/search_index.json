{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"Test/","text":"","title":"Test"},{"location":"Untitled/","text":"(\uff5e\ufe43\uff5e)~zZ 1/13/2021 \u627e\u4e00\u5e74\u7ea7\u7684\u8981\u4e86\u8001\u5e08\u5199\u7684suSlicer\uff0c\u50cf\u662f\u4e2a\u5207\u7247\u7b97\u6cd5\uff0c\u8ba9\u6211\u52a0\u70b9\u4e1c\u897f\u4e0a\u53bb\uff0c\u60f3\u8d77\u6765\u4e00\u5e74\u7ea7\u521a\u5165\u5b66\u7684\u65f6\u5019\u8001\u5e08\u4e5f\u8ba9\u505a\u4e00\u4e2a\u53ebsuCAM\u7684\u73a9\u610f\uff0c\u7ed3\u679c\u4e00\u884ccode\u6ca1\u4ea4\u4e0a\u53bb\u3002\u5408\u7406\ud83d\udc0e sail\u6bcf\u5468\u4e09\u7ed9\u4e86\u534a\u5929\u4e0b\u5348\u65f6\u95f4\u5e72\u5e72\u5b66\u6821\u7684\u4e8b\u60c5\uff0c\u5176\u5b9e\u611f\u89c9\u4e3b\u8981\u5de5\u4f5c\u65f6\u95f4\u5c31\u662f\u4e0b\u5348\uff0c\u4e0a\u5348\u5750\u5b8c\u5730\u94c1\u8fc7\u6765\u65e9\u9910\u5348\u996d\u4e24\u8fde\u5e72\u996d\u5c31\u6ca1\u4e86\u3002 \u5f00\u59cb\u770b\u770b8 (\u00b0\u30fc\u00b0\u3003) main......blablablabla \u8fd9\u4e2ae\u662f\u4e2a\u4ec0\u4e48\u73a9\u610f\u554a h? p? P? A? N? \u5927\u81f4\u770b\u4e86\u4e00\u904d\uff0cTask\u521b\u5efa>>>>Do Refactor functions //\u627e\u5b57\u7b26\u4e32\uff0c\u627e\u5230ture\uff0c\u6ca1\u627e\u5230false //\u63a5\u53d7-i\uff0c-o\uff0c-t bool findOption(const char tag) //\u8fd4\u56de\u4e0b\u4e00\u4e2a\u5b57\u7b26\u4e32 std::string findOptionValue(const char tag)","title":"suSlicer"},{"location":"Welcome%20to%20Marxico/","text":"C++ \u6570\u636e\u7ed3\u6784 categories: C++ date: 2021-01-21 22:12:00 Welcome to Marxico @(Sample notebook)[Marxico|Manual|Markdown] Marxico is a delicate Markdown editor for Evernote. With reliable storage and sync powered by Evernote, Marxico offers greate writing experience. Versatile - supporting code highlight, LaTeX & flow charts, inserting images & attachments by all means. Exquisite - neat but powerful editor, featuring offline docs, live preview, and offering the desktop client and offline Chrome App . Sophisticated - deeply integrated with Evernote, supporting notebook & tags, two-way bind editing. Welcome to Marxico Introducing Markdown Code block LaTeX expression Table Diagrams Flow charts Sequence diagrams Checkbox Dancing with Evernote Notebook & Tags Title Quick Editing Data Synchronization Offline Storage Shortcuts About Pro Credits Feedback & Bug Report Introducing Markdown Markdown is a plain text formatting syntax designed to be converted to HTML. Markdown is popularly used as format for readme files, ... or in text editors for the quick creation of rich text documents. - Wikipedia As showed in this manual, it uses hash(#) to identify headings, emphasizes some text to be bold or italic . You can insert a link , or a footnote[^demo]. Serveral advanced syntax are listed below, please press Ctrl + / to view Markdown cheatsheet. Code block @requires_authorization def somefunc(param1='', param2=0): '''A docstring''' if param1 > param2: # interesting print 'Greater' return (param2 - param1 + 1) or None class SomeClass: pass >>> message = '''interpreter ... prompt''' LaTeX expression $$ x = \\dfrac{-b \\pm \\sqrt{b^2 - 4ac}}{2a} $$ Table Item Value Qty Computer 1600 USD 5 Phone 12 USD 12 Pipe 1 USD 234 Diagrams Flow charts st=>start: Start e=>end op=>operation: My Operation cond=>condition: Yes or No? st->op->cond cond(yes)->e cond(no)->op Sequence diagrams Alice->Bob: Hello Bob, how are you? Note right of Bob: Bob thinks Bob-->Alice: I am good thanks! Note: You can find more information: about Sequence diagrams syntax here , about Flow charts syntax here . Checkbox You can use - [ ] and - [x] to create checkboxes, for example: [x] Item1 [ ] Item2 [ ] Item3 Note: Currently it is only partially supported. You can't toggle checkboxes in Evernote. You can only modify the Markdown in Marxico to do that. Next version will fix this. Dancing with Evernote Notebook & Tags Marxico add @(Notebook)[tag1|tag2|tag3] syntax to select notebook and set tags for the note. After typing @( , the notebook list would appear, please select one from it. Title Marxico would adopt the first heading encountered as the note title. For example, in this manual the first line Welcome to Marxico is the title. Quick Editing Note saved by Marxico in Evernote would have a red ribbon button on the top-right corner. Click it and it would bring you back to Marxico to edit the note. Note: Currently Marxico is unable to detect and merge any modifications in Evernote by user. Please go back to Marxico to edit. Data Synchronization While saving rich HTML content in Evernote, Marxico puts the Markdown text in a hidden area of the note, which makes it possible to get the original text in Marxico and edit it again. This is a really brilliant design because: it is beyond just one-way exporting HTML which other services do; and it avoids privacy and security problems caused by storing content in a intermediate server. Privacy Statement: All of your notes data are saved in Evernote. Marxico doesn't save any of them. Offline Storage Marxico stores your unsynchronized content locally in browser storage, so no worries about network and broswer crash. It also keeps the recent file list you've edited in Document Management(Ctrl + O) . Note: Although browser storage is reliable in the most time, Evernote is born to do that. So please sync the document regularly while writing. Shortcuts Help Ctrl + / Sync Doc Ctrl + S Create Doc Ctrl + Alt + N Maximize Editor Ctrl + Enter Preview Doc Ctrl + Alt + Enter Doc Management Ctrl + O Menu Ctrl + M Bold Ctrl + B Insert Image Ctrl + G Insert Link Ctrl + L Convert Heading Ctrl + H About Pro Marixo offers a free trial of 10 days. After that, you need to purchase the Pro service. Otherwise, you would not be able to sync new notes. Previous notes can be edited and synced all the time. Credits Marxico was first built upon Dillinger , and the newest version is almost based on the awesome StackEdit . Acknowledgments to them and other incredible open source projects! Feedback & Bug Report Twitter: @gock2 Email: hustgock@gmail.com Thank you for reading this manual. Now please press Ctrl + M and click Link with Evernote . Enjoy your Marxico journey! [^demo]: This is a demo footnote. Read the MultiMarkdown Syntax Guide to learn more. Note that Evernote disables ID attributes in its notes , so footnote and TOC are not actually working.","title":"Welcome to Marxico"},{"location":"Welcome%20to%20Marxico/#welcome-to-marxico","text":"@(Sample notebook)[Marxico|Manual|Markdown] Marxico is a delicate Markdown editor for Evernote. With reliable storage and sync powered by Evernote, Marxico offers greate writing experience. Versatile - supporting code highlight, LaTeX & flow charts, inserting images & attachments by all means. Exquisite - neat but powerful editor, featuring offline docs, live preview, and offering the desktop client and offline Chrome App . Sophisticated - deeply integrated with Evernote, supporting notebook & tags, two-way bind editing. Welcome to Marxico Introducing Markdown Code block LaTeX expression Table Diagrams Flow charts Sequence diagrams Checkbox Dancing with Evernote Notebook & Tags Title Quick Editing Data Synchronization Offline Storage Shortcuts About Pro Credits Feedback & Bug Report","title":"Welcome to Marxico"},{"location":"Welcome%20to%20Marxico/#introducing-markdown","text":"Markdown is a plain text formatting syntax designed to be converted to HTML. Markdown is popularly used as format for readme files, ... or in text editors for the quick creation of rich text documents. - Wikipedia As showed in this manual, it uses hash(#) to identify headings, emphasizes some text to be bold or italic . You can insert a link , or a footnote[^demo]. Serveral advanced syntax are listed below, please press Ctrl + / to view Markdown cheatsheet.","title":"Introducing Markdown"},{"location":"Welcome%20to%20Marxico/#code-block","text":"@requires_authorization def somefunc(param1='', param2=0): '''A docstring''' if param1 > param2: # interesting print 'Greater' return (param2 - param1 + 1) or None class SomeClass: pass >>> message = '''interpreter ... prompt'''","title":"Code block"},{"location":"Welcome%20to%20Marxico/#latex-expression","text":"$$ x = \\dfrac{-b \\pm \\sqrt{b^2 - 4ac}}{2a} $$","title":"LaTeX expression"},{"location":"Welcome%20to%20Marxico/#table","text":"Item Value Qty Computer 1600 USD 5 Phone 12 USD 12 Pipe 1 USD 234","title":"Table"},{"location":"Welcome%20to%20Marxico/#diagrams","text":"","title":"Diagrams"},{"location":"Welcome%20to%20Marxico/#flow-charts","text":"st=>start: Start e=>end op=>operation: My Operation cond=>condition: Yes or No? st->op->cond cond(yes)->e cond(no)->op","title":"Flow charts"},{"location":"Welcome%20to%20Marxico/#sequence-diagrams","text":"Alice->Bob: Hello Bob, how are you? Note right of Bob: Bob thinks Bob-->Alice: I am good thanks! Note: You can find more information: about Sequence diagrams syntax here , about Flow charts syntax here .","title":"Sequence diagrams"},{"location":"Welcome%20to%20Marxico/#checkbox","text":"You can use - [ ] and - [x] to create checkboxes, for example: [x] Item1 [ ] Item2 [ ] Item3 Note: Currently it is only partially supported. You can't toggle checkboxes in Evernote. You can only modify the Markdown in Marxico to do that. Next version will fix this.","title":"Checkbox"},{"location":"Welcome%20to%20Marxico/#dancing-with-evernote","text":"","title":"Dancing with Evernote"},{"location":"Welcome%20to%20Marxico/#notebook-tags","text":"Marxico add @(Notebook)[tag1|tag2|tag3] syntax to select notebook and set tags for the note. After typing @( , the notebook list would appear, please select one from it.","title":"Notebook &amp; Tags"},{"location":"Welcome%20to%20Marxico/#title","text":"Marxico would adopt the first heading encountered as the note title. For example, in this manual the first line Welcome to Marxico is the title.","title":"Title"},{"location":"Welcome%20to%20Marxico/#quick-editing","text":"Note saved by Marxico in Evernote would have a red ribbon button on the top-right corner. Click it and it would bring you back to Marxico to edit the note. Note: Currently Marxico is unable to detect and merge any modifications in Evernote by user. Please go back to Marxico to edit.","title":"Quick Editing"},{"location":"Welcome%20to%20Marxico/#data-synchronization","text":"While saving rich HTML content in Evernote, Marxico puts the Markdown text in a hidden area of the note, which makes it possible to get the original text in Marxico and edit it again. This is a really brilliant design because: it is beyond just one-way exporting HTML which other services do; and it avoids privacy and security problems caused by storing content in a intermediate server. Privacy Statement: All of your notes data are saved in Evernote. Marxico doesn't save any of them.","title":"Data Synchronization"},{"location":"Welcome%20to%20Marxico/#offline-storage","text":"Marxico stores your unsynchronized content locally in browser storage, so no worries about network and broswer crash. It also keeps the recent file list you've edited in Document Management(Ctrl + O) . Note: Although browser storage is reliable in the most time, Evernote is born to do that. So please sync the document regularly while writing.","title":"Offline Storage"},{"location":"Welcome%20to%20Marxico/#shortcuts","text":"Help Ctrl + / Sync Doc Ctrl + S Create Doc Ctrl + Alt + N Maximize Editor Ctrl + Enter Preview Doc Ctrl + Alt + Enter Doc Management Ctrl + O Menu Ctrl + M Bold Ctrl + B Insert Image Ctrl + G Insert Link Ctrl + L Convert Heading Ctrl + H","title":"Shortcuts"},{"location":"Welcome%20to%20Marxico/#about-pro","text":"Marixo offers a free trial of 10 days. After that, you need to purchase the Pro service. Otherwise, you would not be able to sync new notes. Previous notes can be edited and synced all the time.","title":"About Pro"},{"location":"Welcome%20to%20Marxico/#credits","text":"Marxico was first built upon Dillinger , and the newest version is almost based on the awesome StackEdit . Acknowledgments to them and other incredible open source projects!","title":"Credits"},{"location":"Welcome%20to%20Marxico/#feedback-bug-report","text":"Twitter: @gock2 Email: hustgock@gmail.com Thank you for reading this manual. Now please press Ctrl + M and click Link with Evernote . Enjoy your Marxico journey! [^demo]: This is a demo footnote. Read the MultiMarkdown Syntax Guide to learn more. Note that Evernote disables ID attributes in its notes , so footnote and TOC are not actually working.","title":"Feedback &amp; Bug Report"},{"location":"%E5%8C%BF%E5%90%8D%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4/","text":"C++ categories: C++ date: 2020-12-02 10:59:00 unnamed namespace \u901a\u5e38\u9664\u4e86\u7c7b\u7684\u9759\u6001\u6210\u5458\u51fd\u6570\u548c\u9759\u6001\u6570\u636e\u6210\u5458\u5916\uff0c\u5176\u5b83\u7684static\u9700\u6c42\u90fd\u63d0\u5021\u4f7f\u7528\u533f\u540d\u547d\u540d\u7a7a\u95f4\u6765\u4ee3\u66ff\u3002 1.\u4ee3\u66ffstatic\u7528\u6cd5 \u5728\u6807\u51c6C\u4e2d\uff0c\u5982\u679c\u671f\u671b\u4e00\u4e2a\u53d8\u91cf\u6216\u8005\u4e00\u79cd\u51fd\u6570\u53ea\u80fd\u88ab\u672c\u6e90\u6587\u4ef6(\u540c\u4e2atranslation unit)\u4f7f\u7528\uff0c\u901a\u5e38\u7684\u505a\u6cd5\u662f\u4f7f\u7528static\u6765\u4fee\u9970\u8fd9\u4e2a\u53d8\u91cf/\u51fd\u6570\uff0c\u6765\u4fdd\u8bc1\u8fd9\u4e2a\u53d8\u91cf/\u51fd\u6570\u5177\u6709\u5185\u90e8\u94fe\u63a5(internal linkage)\u3002\u8fd9\u79cd\u6280\u672f\u79f0\u4e3a\u4fe1\u606f\u9690\u85cf\u3002 \u5728C++\u4e2d\uff0c\u4ecd\u7136\u652f\u6301\u8fd9\u79cd\u505a\u6cd5\uff0c\u4f46\u662f\u5df2\u7ecf\u4e0d\u63d0\u5021\uff0cC++\u53ea\u63d0\u5021static\u4ec5\u4ec5\u7528\u4e8e\u4fee\u9970\u7c7b\u6210\u5458\uff0c\u4e0d\u518d\u63d0\u5021\u7528static\u6765\u4fee\u9970\u975e\u7c7b\u6210\u5458\u3002\u5728\u4ee5\u540e\u7684\u7f16\u8bd1\u5668\u4e2d\uff0c\u53ef\u80fd\u4f1a\u5bf9\u4f7f\u7528static\u6765\u4fee\u9970\u975e\u7c7b\u6210\u5458\u7684\u65b9\u5f0f\u7ed9\u51fa\u7f16\u8bd1\u8b66\u544a\u3002 2.\u4e0d\u8981\u5728.h\u6587\u4ef6\u4e2d\u4f7f\u7528\u533f\u540d\u547d\u540d\u7a7a\u95f4 \u63d0\u5021\u5728cpp/c\u6e90\u6587\u4ef6\u4e2d\u4f7f\u7528unnamed namespace\uff0c\u4e0d\u8981(\u4e0d\u63d0\u5021)\u5728.h\u6587\u4ef6\u4e2d\u4f7f\u7528\u533f\u540d\u547d\u4ee4\u7a7a\u95f4\uff0c\u56e0\u4e3a\u5176\u5c06\u751f\u6210\u5927\u91cf\u4e0d\u88ab\u4f7f\u7528\u7c7b\u578b\u6216\u8005\u6570\u636e---\u8fd9\u4e9b\u6570\u636e\u4e0d\u662f\u526f\u672c\uff0c\u662f\u5168\u5c40\u552f\u4e00\u7684(\u539f\u56e0\u89c1\u4e0b\u9762)\u3002 \u8fd9\u91cc\u91cd\u63d0\u4e00\u4e0b\uff1a.h\u6587\u4ef6\u4e0e.cpp\u6587\u4ef6\u3002.h\u6587\u4ef6\u4e0d\u662f\u7f16\u8bd1\u5355\u5143\uff0c\u6240\u4ee5\u4e0d\u80fd\u76f4\u63a5\u7f16\u8bd1.h\u6587\u4ef6\uff1b.cpp/.cc\u6587\u4ef6\u624d\u662f\u7f16\u8bd1\u5355\u5143\uff0c\u7f16\u8bd1\u5668\u53ef\u4ee5\u76f4\u63a5\u7f16\u8bd1.cpp/.cc\u6587\u4ef6\u3002\u90a3\u4e48\u5982\u679c\u4e00\u4e2a.cpp\u6587\u4ef6include\u4e86.h\u6587\u4ef6\uff0c\u662f\u4ec0\u4e48\u6548\u679c\u5462\uff1f\u76f4\u767d\u7684\u610f\u601d\u5c31\u662f\uff1a\u628a\u6240\u6709(\u76f4\u63a5/\u95f4\u63a5)include\u7684.h\u7684\u6587\u4ef6\u5185\u5bb9\u76f4\u63a5\u590d\u5236\u5230\u8be5.cpp\u6587\u4ef6\u4e2d\uff0c\u518d\u5bf9\u8be5.cpp\u6587\u4ef6\u7f16\u8bd1\u3002\u8fd9\u5c31\u610f\u5473\u7740\uff0c\u5982\u679c\u5728\u4e00\u4e2a\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e86unnamed namespace\uff0c\u90a3\u4e48\u6240\u6709include\u8be5.h\u7684\u7f16\u8bd1\u5355\u5143(.cpp/.cc\u6587\u4ef6)\uff0c\u90fd\u4f1a\u5b8c\u5168\u5305\u542b\u8be5.h\u6587\u4ef6\u4e2d\u7684\u6240\u6709\u5185\u5bb9\uff0c\u90a3\u4e48\uff0c\u4e00\u4e2a.cpp/.cc\u4e2d\u5305\u542b\u7684\u533f\u540d\u7a7a\u95f4\u91cc\u7684\u6570\u636e\uff0c\u5b83\u81ea\u5df1\u5f53\u7136\u80fd\u8bbf\u95ee\u4e86\u3002\u65e0\u8bba\u5b83\u5177\u6709\u7684\u662f\u5185\u90e8\u94fe\u63a5\u5c5e\u6027\uff0c\u8fd8\u662f\u5916\u90e8\u94fe\u63a5\u5c5e\u6027\uff0c\u90fd\u4e0d\u5f71\u54cd\u8bbf\u95ee\u3002(\u9664\u975e\u5bf9\u8bbf\u95ee\u5bf9\u8c61\u6709\u94fe\u63a5\u5c5e\u6027\u8981\u6c42\u7684\u573a\u666f\uff1a\u6bd4\u5982\u6a21\u5757\u7684\u975e\u7c7b\u578b\u53c2\u6570\uff0d\u6570\u636e\u5b9e\u53c2)\u3002 3.\u5728\u6a21\u677f\u5143\u8bbe\u8ba1\u4e2d\u5c0f\u5fc3\u4f7f\u7528\u533f\u540d\u547d\u540d\u7a7a\u95f4 \u533f\u540d\u7a7a\u95f4\u5177\u6709\u5185\u90e8\u94fe\u63a5\u5c5e\u6027\uff0c\u5176\u5185\u90e8\u5b9a\u4e49\u7684\u51fd\u6570/\u7c7b\u578b/\u53d8\u91cf/\u5e38\u91cf\u5728\u4e0d\u540c\u7684\u7f16\u8bd1\u5355\u5143\u90fd\u662f\u4e0d\u540c\u7684\uff0c\u6240\u4ee5\u5728\u8fdb\u884c\u6a21\u677f\u8bbe\u8ba1\u65f6\uff0c\u5c24\u5176\u8981\u5c0f\u5fc3\uff0c\u4ee5\u9632\u6b62\u4f20\u5165\u7684\u7c7b\u578b\u53c2\u6570\u6765\u81ea\u4e8e\u4e0d\u540c\u7f16\u8bd1\u5355\u5143\u7684\u533f\u540d\u547d\u540d\u7a7a\u95f4\uff0c\u8fd9\u6837\u5f00\u53d1\u8005\u5b57\u9762\u610f\u601d\u770b\u5230\u7684\u662f\u540c\u4e00\u7c7b\u578b\uff0c\u4f46\u662f\u6a21\u677f\u5143\u903b\u8f91\u5904\u7406\u4e2d\uff0c\u7adf\u7136\u662f\u4e0d\u540c\u7684\u7c7b\u578b\uff0c\u5f88\u5bb9\u6613\u88ab\u8ba4\u4e3a\u662f\u7f16\u8bd1\u5668\u7684bug\u3002 \u51fa\u4e8e\u8fd9\u4e2a\u76ee\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5728\u6a21\u677f\u5143\u8bbe\u8ba1\u4e2d\u7981\u6b62\u4f7f\u7528\u533f\u540d\u547d\u540d\u7a7a\u95f4\u3002 \u8fd9\u5176\u5b9e\u662f\u4e0a\u4e00\u6761\u89c4\u5219\u4e2d\u7684\u4e00\u4e2a\u5b9e\u4f8b\uff1a\u56e0\u4e3a\u6a21\u677f\u5143\u4ee3\u7801\u90fd\u662f\u5728.h\u6587\u4ef6\u4e2d\u7684\uff0c\u800c\"\u4e0d\u8981\u5728.h\u6587\u4ef6\u4e2d\u4f7f\u7528\u533f\u540d\u547d\u540d\u7a7a\u95f4\"\u3002","title":"\u533f\u540d\u547d\u540d\u7a7a\u95f4"},{"location":"%E5%8C%BF%E5%90%8D%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4/#unnamed-namespace","text":"\u901a\u5e38\u9664\u4e86\u7c7b\u7684\u9759\u6001\u6210\u5458\u51fd\u6570\u548c\u9759\u6001\u6570\u636e\u6210\u5458\u5916\uff0c\u5176\u5b83\u7684static\u9700\u6c42\u90fd\u63d0\u5021\u4f7f\u7528\u533f\u540d\u547d\u540d\u7a7a\u95f4\u6765\u4ee3\u66ff\u3002","title":"unnamed namespace"},{"location":"%E5%8C%BF%E5%90%8D%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4/#1static","text":"\u5728\u6807\u51c6C\u4e2d\uff0c\u5982\u679c\u671f\u671b\u4e00\u4e2a\u53d8\u91cf\u6216\u8005\u4e00\u79cd\u51fd\u6570\u53ea\u80fd\u88ab\u672c\u6e90\u6587\u4ef6(\u540c\u4e2atranslation unit)\u4f7f\u7528\uff0c\u901a\u5e38\u7684\u505a\u6cd5\u662f\u4f7f\u7528static\u6765\u4fee\u9970\u8fd9\u4e2a\u53d8\u91cf/\u51fd\u6570\uff0c\u6765\u4fdd\u8bc1\u8fd9\u4e2a\u53d8\u91cf/\u51fd\u6570\u5177\u6709\u5185\u90e8\u94fe\u63a5(internal linkage)\u3002\u8fd9\u79cd\u6280\u672f\u79f0\u4e3a\u4fe1\u606f\u9690\u85cf\u3002 \u5728C++\u4e2d\uff0c\u4ecd\u7136\u652f\u6301\u8fd9\u79cd\u505a\u6cd5\uff0c\u4f46\u662f\u5df2\u7ecf\u4e0d\u63d0\u5021\uff0cC++\u53ea\u63d0\u5021static\u4ec5\u4ec5\u7528\u4e8e\u4fee\u9970\u7c7b\u6210\u5458\uff0c\u4e0d\u518d\u63d0\u5021\u7528static\u6765\u4fee\u9970\u975e\u7c7b\u6210\u5458\u3002\u5728\u4ee5\u540e\u7684\u7f16\u8bd1\u5668\u4e2d\uff0c\u53ef\u80fd\u4f1a\u5bf9\u4f7f\u7528static\u6765\u4fee\u9970\u975e\u7c7b\u6210\u5458\u7684\u65b9\u5f0f\u7ed9\u51fa\u7f16\u8bd1\u8b66\u544a\u3002","title":"1.\u4ee3\u66ffstatic\u7528\u6cd5"},{"location":"%E5%8C%BF%E5%90%8D%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4/#2h","text":"\u63d0\u5021\u5728cpp/c\u6e90\u6587\u4ef6\u4e2d\u4f7f\u7528unnamed namespace\uff0c\u4e0d\u8981(\u4e0d\u63d0\u5021)\u5728.h\u6587\u4ef6\u4e2d\u4f7f\u7528\u533f\u540d\u547d\u4ee4\u7a7a\u95f4\uff0c\u56e0\u4e3a\u5176\u5c06\u751f\u6210\u5927\u91cf\u4e0d\u88ab\u4f7f\u7528\u7c7b\u578b\u6216\u8005\u6570\u636e---\u8fd9\u4e9b\u6570\u636e\u4e0d\u662f\u526f\u672c\uff0c\u662f\u5168\u5c40\u552f\u4e00\u7684(\u539f\u56e0\u89c1\u4e0b\u9762)\u3002 \u8fd9\u91cc\u91cd\u63d0\u4e00\u4e0b\uff1a.h\u6587\u4ef6\u4e0e.cpp\u6587\u4ef6\u3002.h\u6587\u4ef6\u4e0d\u662f\u7f16\u8bd1\u5355\u5143\uff0c\u6240\u4ee5\u4e0d\u80fd\u76f4\u63a5\u7f16\u8bd1.h\u6587\u4ef6\uff1b.cpp/.cc\u6587\u4ef6\u624d\u662f\u7f16\u8bd1\u5355\u5143\uff0c\u7f16\u8bd1\u5668\u53ef\u4ee5\u76f4\u63a5\u7f16\u8bd1.cpp/.cc\u6587\u4ef6\u3002\u90a3\u4e48\u5982\u679c\u4e00\u4e2a.cpp\u6587\u4ef6include\u4e86.h\u6587\u4ef6\uff0c\u662f\u4ec0\u4e48\u6548\u679c\u5462\uff1f\u76f4\u767d\u7684\u610f\u601d\u5c31\u662f\uff1a\u628a\u6240\u6709(\u76f4\u63a5/\u95f4\u63a5)include\u7684.h\u7684\u6587\u4ef6\u5185\u5bb9\u76f4\u63a5\u590d\u5236\u5230\u8be5.cpp\u6587\u4ef6\u4e2d\uff0c\u518d\u5bf9\u8be5.cpp\u6587\u4ef6\u7f16\u8bd1\u3002\u8fd9\u5c31\u610f\u5473\u7740\uff0c\u5982\u679c\u5728\u4e00\u4e2a\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e86unnamed namespace\uff0c\u90a3\u4e48\u6240\u6709include\u8be5.h\u7684\u7f16\u8bd1\u5355\u5143(.cpp/.cc\u6587\u4ef6)\uff0c\u90fd\u4f1a\u5b8c\u5168\u5305\u542b\u8be5.h\u6587\u4ef6\u4e2d\u7684\u6240\u6709\u5185\u5bb9\uff0c\u90a3\u4e48\uff0c\u4e00\u4e2a.cpp/.cc\u4e2d\u5305\u542b\u7684\u533f\u540d\u7a7a\u95f4\u91cc\u7684\u6570\u636e\uff0c\u5b83\u81ea\u5df1\u5f53\u7136\u80fd\u8bbf\u95ee\u4e86\u3002\u65e0\u8bba\u5b83\u5177\u6709\u7684\u662f\u5185\u90e8\u94fe\u63a5\u5c5e\u6027\uff0c\u8fd8\u662f\u5916\u90e8\u94fe\u63a5\u5c5e\u6027\uff0c\u90fd\u4e0d\u5f71\u54cd\u8bbf\u95ee\u3002(\u9664\u975e\u5bf9\u8bbf\u95ee\u5bf9\u8c61\u6709\u94fe\u63a5\u5c5e\u6027\u8981\u6c42\u7684\u573a\u666f\uff1a\u6bd4\u5982\u6a21\u5757\u7684\u975e\u7c7b\u578b\u53c2\u6570\uff0d\u6570\u636e\u5b9e\u53c2)\u3002","title":"2.\u4e0d\u8981\u5728.h\u6587\u4ef6\u4e2d\u4f7f\u7528\u533f\u540d\u547d\u540d\u7a7a\u95f4"},{"location":"%E5%8C%BF%E5%90%8D%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4/#3","text":"\u533f\u540d\u7a7a\u95f4\u5177\u6709\u5185\u90e8\u94fe\u63a5\u5c5e\u6027\uff0c\u5176\u5185\u90e8\u5b9a\u4e49\u7684\u51fd\u6570/\u7c7b\u578b/\u53d8\u91cf/\u5e38\u91cf\u5728\u4e0d\u540c\u7684\u7f16\u8bd1\u5355\u5143\u90fd\u662f\u4e0d\u540c\u7684\uff0c\u6240\u4ee5\u5728\u8fdb\u884c\u6a21\u677f\u8bbe\u8ba1\u65f6\uff0c\u5c24\u5176\u8981\u5c0f\u5fc3\uff0c\u4ee5\u9632\u6b62\u4f20\u5165\u7684\u7c7b\u578b\u53c2\u6570\u6765\u81ea\u4e8e\u4e0d\u540c\u7f16\u8bd1\u5355\u5143\u7684\u533f\u540d\u547d\u540d\u7a7a\u95f4\uff0c\u8fd9\u6837\u5f00\u53d1\u8005\u5b57\u9762\u610f\u601d\u770b\u5230\u7684\u662f\u540c\u4e00\u7c7b\u578b\uff0c\u4f46\u662f\u6a21\u677f\u5143\u903b\u8f91\u5904\u7406\u4e2d\uff0c\u7adf\u7136\u662f\u4e0d\u540c\u7684\u7c7b\u578b\uff0c\u5f88\u5bb9\u6613\u88ab\u8ba4\u4e3a\u662f\u7f16\u8bd1\u5668\u7684bug\u3002 \u51fa\u4e8e\u8fd9\u4e2a\u76ee\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u8003\u8651\u5728\u6a21\u677f\u5143\u8bbe\u8ba1\u4e2d\u7981\u6b62\u4f7f\u7528\u533f\u540d\u547d\u540d\u7a7a\u95f4\u3002 \u8fd9\u5176\u5b9e\u662f\u4e0a\u4e00\u6761\u89c4\u5219\u4e2d\u7684\u4e00\u4e2a\u5b9e\u4f8b\uff1a\u56e0\u4e3a\u6a21\u677f\u5143\u4ee3\u7801\u90fd\u662f\u5728.h\u6587\u4ef6\u4e2d\u7684\uff0c\u800c\"\u4e0d\u8981\u5728.h\u6587\u4ef6\u4e2d\u4f7f\u7528\u533f\u540d\u547d\u540d\u7a7a\u95f4\"\u3002","title":"3.\u5728\u6a21\u677f\u5143\u8bbe\u8ba1\u4e2d\u5c0f\u5fc3\u4f7f\u7528\u533f\u540d\u547d\u540d\u7a7a\u95f4"},{"location":"%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/","text":"\u9762\u7ecf categories: \u9762\u7ecf date: 2020-12-20 21:49:00 \u4ece\u5341\u4e00\u5f00\u59cb\u5df2\u7ecf\u5feb\u8fc7\u53bb\u4e09\u4e2a\u6708\u4e86\uff0c\u4ecederek\u90a3\u91cc\u62ff\u5230\u4e86\u5f88\u591a\u4e66\uff0c\u53ea\u80fd\u6bcf\u5929\u62bd\u51fa\u96f6\u788e\u65f6\u95f4\u6765\u770b\uff0c\u5230\u73b0\u5728\u611f\u89c9\u4e5f\u6ca1\u770b\u8fdb\u53bb\u4ec0\u4e48\uff0c\u300a\u7b97\u6cd5\u56fe\u89e3\u300b\u8fc7\u5b8c\u4e00\u904d\u4e86\uff0c\u4f46\u662f\u8fd8\u5f97\u627e\u65f6\u95f4\u8fc7\u8bfe\u540e\u4e60\u9898\uff0cC++\u7816\u5934\u4e66\u3001\u7b97\u6cd5\u4e0e\u6570\u636e\u7ed3\u6784\u8fd8\u5728\u5543\uff0c\u611f\u89c9\u5b66\u4e60\u8fd8\u662f\u5f97\u9700\u8981\u5757\u72b6\u65f6\u95f4\u3002\u5c31\u7b97\u770b\u5b8c\u4e86\u4e66\uff0c\u7f51\u8bfe\u611f\u89c9\u8fd8\u662f\u5f97\u5feb\u901f\u8fc7\u4e00\u904d\uff0c\u514d\u5f97\u81ea\u5df1\u7684\u7406\u89e3\u6709\u51fa\u5165\u3002 \u73b0\u5728\u5c31\u5148\u6574\u7406\u4e00\u4e2a\u5b66\u4e60\u8def\u7ebf8\uff0c\u6700\u597d\u8fd8\u662f\u5f97\u6bcf\u5929\u80fd\u62bd\u7a7a\u8bdd\u65f6\u95f4\u51e0\u53e5\u8bdd\u603b\u7ed3\u4e00\u4e0b\u770b\u4e86\u5565\u3002 \u8def\u7ebf \u8bed\u8a00\uff08C\u3001C++\u3001Go\u3001Python\u7b49\uff09 \u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\uff08\u4e00\u5207\u7684\u57fa\u77f3\uff09 \u64cd\u4f5c\u7cfb\u7edf\uff08\u64cd\u4f5c\u7cfb\u7edf\u7406\u8bba\u77e5\u8bc6\u3001Linux\u4e2d\u600e\u4e48\u5b9e\u73b0\uff09 \u8ba1\u7b97\u673a\u7f51\u7edc\uff08\u7f51\u7edc\u5206\u5c42\u3001TCP\u534f\u8bae\uff09 \u7cfb\u7edf\u7f16\u7a0b\u548c\u7f51\u7edc\u7f16\u7a0b\uff08Linux/Unix\u7684\u7cfb\u7edf\u7f16\u7a0b\u63a5\u53e3\u548c\u7f51\u7edc\u7f16\u7a0b\u6a21\u578b\uff09","title":"\u5b66\u4e60\u8def\u7ebf"},{"location":"%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/#_1","text":"\u8bed\u8a00\uff08C\u3001C++\u3001Go\u3001Python\u7b49\uff09 \u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\uff08\u4e00\u5207\u7684\u57fa\u77f3\uff09 \u64cd\u4f5c\u7cfb\u7edf\uff08\u64cd\u4f5c\u7cfb\u7edf\u7406\u8bba\u77e5\u8bc6\u3001Linux\u4e2d\u600e\u4e48\u5b9e\u73b0\uff09 \u8ba1\u7b97\u673a\u7f51\u7edc\uff08\u7f51\u7edc\u5206\u5c42\u3001TCP\u534f\u8bae\uff09 \u7cfb\u7edf\u7f16\u7a0b\u548c\u7f51\u7edc\u7f16\u7a0b\uff08Linux/Unix\u7684\u7cfb\u7edf\u7f16\u7a0b\u63a5\u53e3\u548c\u7f51\u7edc\u7f16\u7a0b\u6a21\u578b\uff09","title":"\u8def\u7ebf"},{"location":"%E9%9D%A2%E7%BB%8F%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/","text":"\u9762\u7ecf categories: \u9762\u7ecf date: 2020-11-22 20:57:00 \u8bed\u8a00\u57fa\u7840 \u865a\u51fd\u6570 1.\u5728\u6709\u7ee7\u627f\u5173\u7cfb\u7684\u7236\u5b50\u7c7b\u4e2d\uff0c\u6784\u5efa\u548c\u6790\u6784\u4e00\u4e2a\u5b50\u7c7b\u5bf9\u8c61\u65f6\uff0c\u7236\u5b50\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u7684\u6267\u884c\u987a\u5e8f\u5206\u522b\u662f\u600e\u6837\u7684\uff1f 2.\u5728\u6709\u7ee7\u627f\u5173\u7cfb\u7684\u7c7b\u4f53\u7cfb\u4e2d\uff0c\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u4e00\u5b9a\u8981\u7533\u660e\u4e3a virtual \u5417\uff1f\u5982\u679c\u4e0d\u7533\u660e\u4e3a virtual \u4f1a\u600e\u6837\uff1f 3.\u4ec0\u4e48\u662f C++ \u591a\u6001\uff1fC++ \u591a\u6001\u7684\u5b9e\u73b0\u539f\u7406\u662f\u4ec0\u4e48\uff1f 4.\u4ec0\u4e48\u662f\u865a\u51fd\u6570\uff1f\u865a\u51fd\u6570\u7684\u5b9e\u73b0\u539f\u7406\u662f\u4ec0\u4e48\uff1f 5.\u4ec0\u4e48\u662f\u865a\u8868\uff1f\u865a\u8868\u7684\u5185\u5b58\u7ed3\u6784\u5e03\u5c40\u5982\u4f55\uff1f\u865a\u8868\u7684\u7b2c\u4e00\u9879\uff08\u6216\u7b2c\u4e8c\u9879\uff09\u662f\u4ec0\u4e48\uff1f \u83f1\u5f62\u7ee7\u627f\uff08\u7c7bD\u540c\u65f6\u7ee7\u627fB\u548cC\uff0cB\u548cC\u53c8\u7ee7\u627f\u81eaA\uff09\u4f53\u7cfb\u4e0b\uff0c\u865a\u8868\u5728\u5404\u4e2a\u7c7b\u4e2d\u7684\u5e03\u5c40\u5982\u4f55\uff1f\u5982\u679c\u7c7bB\u548c\u7c7bC\u540c\u65f6\u6709\u4e00\u4e2a\u6210\u5458\u53d8\u4e86m\uff0cm\u5982\u4f55\u5728D\u5bf9\u8c61\u7684\u5185\u5b58\u5730\u5740\u4e0a\u5206\u5e03\u7684\uff1f\u662f\u5426\u4f1a\u76f8\u4e92\u8986\u76d6\uff1f","title":"\u9762\u7ecf\u95ee\u9898\u603b\u7ed3"},{"location":"%E9%9D%A2%E7%BB%8F%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/#_1","text":"\u865a\u51fd\u6570 1.\u5728\u6709\u7ee7\u627f\u5173\u7cfb\u7684\u7236\u5b50\u7c7b\u4e2d\uff0c\u6784\u5efa\u548c\u6790\u6784\u4e00\u4e2a\u5b50\u7c7b\u5bf9\u8c61\u65f6\uff0c\u7236\u5b50\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u7684\u6267\u884c\u987a\u5e8f\u5206\u522b\u662f\u600e\u6837\u7684\uff1f 2.\u5728\u6709\u7ee7\u627f\u5173\u7cfb\u7684\u7c7b\u4f53\u7cfb\u4e2d\uff0c\u7236\u7c7b\u7684\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u4e00\u5b9a\u8981\u7533\u660e\u4e3a virtual \u5417\uff1f\u5982\u679c\u4e0d\u7533\u660e\u4e3a virtual \u4f1a\u600e\u6837\uff1f 3.\u4ec0\u4e48\u662f C++ \u591a\u6001\uff1fC++ \u591a\u6001\u7684\u5b9e\u73b0\u539f\u7406\u662f\u4ec0\u4e48\uff1f 4.\u4ec0\u4e48\u662f\u865a\u51fd\u6570\uff1f\u865a\u51fd\u6570\u7684\u5b9e\u73b0\u539f\u7406\u662f\u4ec0\u4e48\uff1f 5.\u4ec0\u4e48\u662f\u865a\u8868\uff1f\u865a\u8868\u7684\u5185\u5b58\u7ed3\u6784\u5e03\u5c40\u5982\u4f55\uff1f\u865a\u8868\u7684\u7b2c\u4e00\u9879\uff08\u6216\u7b2c\u4e8c\u9879\uff09\u662f\u4ec0\u4e48\uff1f \u83f1\u5f62\u7ee7\u627f\uff08\u7c7bD\u540c\u65f6\u7ee7\u627fB\u548cC\uff0cB\u548cC\u53c8\u7ee7\u627f\u81eaA\uff09\u4f53\u7cfb\u4e0b\uff0c\u865a\u8868\u5728\u5404\u4e2a\u7c7b\u4e2d\u7684\u5e03\u5c40\u5982\u4f55\uff1f\u5982\u679c\u7c7bB\u548c\u7c7bC\u540c\u65f6\u6709\u4e00\u4e2a\u6210\u5458\u53d8\u4e86m\uff0cm\u5982\u4f55\u5728D\u5bf9\u8c61\u7684\u5185\u5b58\u5730\u5740\u4e0a\u5206\u5e03\u7684\uff1f\u662f\u5426\u4f1a\u76f8\u4e92\u8986\u76d6\uff1f","title":"\u8bed\u8a00\u57fa\u7840"},{"location":"C%2B%2B/C-STL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E4%B8%8E%E5%86%85%E6%A0%B8%E5%88%86%E6%9E%90-1/","text":"C++ \u6570\u636e\u7ed3\u6784 categories: C++ date: 2020-12-30 20:07:00 OOP(object-oriented programming) vs GP(Generic Programing) OOP\u5c06datas\u4e0emethods\u5173\u8054\u5728\u4e00\u8d77 GP\u5c06datas\u4e0emethods\u5206\u5f00 \u4f7f\u7528 GP \uff1a 1 Containers/Algorithms\u56e2\u961f\u5404\u53f8\u5176\u804c\uff0c\u4ee5Iterator\u6c9f\u901a 2 Algorithms\u901a\u8fc7Iterators\u786e\u5b9a\u64cd\u4f5c\u8303\u56f4\uff0c\u901a\u8fc7Iterators\u53d6\u7528Containers\u5143\u7d20 ![upload successful](\\images\\pasted-11.png) \u9605\u8bfbC++\u6807\u51c6\u5e93\uff0c\u57fa\u7840 1 Operator Overloading \u64cd\u4f5c\u7b26\u91cd\u8f7d 2 Templates \u6a21\u677f \u7c7b\u6a21\u677f/\u51fd\u6570\u6a21\u677f/\u6210\u5458\u6a21\u677f \u6a21\u677f\u7279\u5316/\u504f\u7279\u5316 STL \u516d\u5927\u90e8\u4ef6 \u5bb9\u5668\uff08Containiers\uff09 \u5206\u914d\u5668\uff08Allocators\uff09 \u7b97\u6cd5\uff08Alogrithms\uff09 \u8fed\u4ee3\u5668\uff08Iterators\uff09 \u9002\u914d\u5668\uff08Adapters\uff09 \u4eff\u51fd\u6570\uff08Functors\uff09 ![upload successful](\\images\\pasted-8.png) \u5bb9\u5668 Sequance Containers\uff1a Array Vector Deque List Forward List Associative Containers\uff1a Set/MultiSet Map/Multimap ![upload successful](\\images\\pasted-9.png) Unordered Containers\uff1a Unordered Set/MultiSet Unordered Map/Multimap \u7528hash table\u5b9e\u73b0\u7684 ![upload successful](\\images\\pasted-10.png) ![upload successful](\\images\\pasted-12.png) 1 list \u73af\u72b6\u94fe\u8868\uff0c\u5728list\u7684\u5c3e\u7aef\u6709\u4e00\u7a7a\u767d\u8282\u70b9\uff0c\u7528\u4ee5\u7b26\u5408STL\u7684\u524d\u95ed\u540e\u5f00\u533a\u95f4\u7279\u70b9\u3002 \u6709iterator\u3002 2 vector data\u67093\u4e2a\u6307\u9488 strat finish end_of_storage\uff08\u6ce8\u610f\u6807\u51c6\u5e93\u7684\u7248\u672c\uff09\uff0c\u4e8c\u500d\u6210\u957f\u7684\u5bb9\u5668\u3002\u8fde\u7eed\u7a7a\u95f4\u3002\u6709iterator\u3002 3 array \u6ca1\u6709ctor\uff0c\u6ca1\u6709dtor\u3002\u6709iterator\u3002 4 forwrad_list \u7ebf\u72b6\u5355\u9879\u4e32\u5217 5 deque \u5206\u6bb5\u8fde\u7eed\uff0c\u53cc\u5411\u8fdb\u51fa\u3002deque iterator\u6a21\u62df\u4e86\u8fde\u7eed\u7a7a\u95f4\u3002 6.stack \u5148\u8fdb\u5148\u51fa queue \u5148\u8fdb\u5148\u51fa deque\u4f5c\u4e3a\u5e95\u5c42\u5bb9\u5668\uff0c\u4e0d\u5141\u8bb8\u904d\u5386\uff0c\u4e5f\u4e0d\u63d0\u4f9biterator\u3002 stack\u548cqueue\u90fd\u53ef\u4ee5\u9009\u62e9list\u6216\u8005deque\u4f5c\u4e3a\u5e95\u5c42\u5bb9\u5668\u3002stack\u53ef\u9009vector\u505a\u5e95\u5c42\u7ed3\u6784\uff0cqueue\u4e0d\u53ef\u9009vector\u505a\u5e95\u5c42\u7ed3\u6784\uff0c\u90fd\u4e0d\u53ef\u9009set\u6216map 7 rb_tree \u7ea2\u9ed1\u6811\uff0c\u662f\u5e73\u8861\u4e8c\u5143\u641c\u5bfb\u6811\u5e38\u4f7f\u7528\u7684\u4e00\u79cd\uff0c\u5e73\u8861\u4e8c\u5143\u641c\u5bfb\u6811\u7684\u7279\u5f81\uff1a\u6392\u5217\u89c4\u5219\u6709\u5229\u4e8esearch\u548cinset\uff0c\u5e76\u4fdd\u6301\u9002\u5ea6\u5e73\u8861-\u65e0\u8282\u70b9\u8fc7\u6df1\u3002 \u63d0\u4f9b\u904d\u5386\u64cd\u4f5c\u548citerator\uff0c\u6309\u6b63\u5e38\u89c4\u5219++ite\u904d\u5386\uff0c\u4fbf\u80fd\u83b7\u5f97\u6392\u5e8f\u72b6\u6001\u3002 \u4e3aset\u548cmap\u4f5c\u5176\u5e95\u5c42\u652f\u6301\u3002 8 set/multiset \u4ee5\u7ea2\u9ed1\u6811\u4f5c\u4e3a\u5e95\u5c42\u7ed3\u6784\uff0c\u56e0\u6b64\u5143\u7d20\u81ea\u52a8\u6392\u5e8f\uff0c\u6392\u5e8f\u4f9d\u636e\u662fkey\uff0c\u800cset/\u548cmultiset\u7684value\u548ckey\u5408\u4e00\u3002 \u65e0\u6cd5\u4f7f\u7528iterator\u6539\u53d8\u5143\u7d20\u503c\uff0cset/multiset\u7684iterator\u662f\u5e95\u90e8\u7ea2\u9ed1\u6811\u7684const iterator\uff0c\u7981\u6b62\u4e86user\u5bf9\u5143\u7d20\u7684\u8d4b\u503c\u3002 9 map/multimap \u4ee5\u7ea2\u9ed1\u6811\u4e3a\u5e95\u5c42\u7ed3\u6784\uff0c\u5143\u7d20\u81ea\u52a8\u6392\u5e8f\uff0c\u6392\u5e8f\u7684\u4f9d\u636e\u662fkey\u3002\u63d0\u4f9b\u904d\u5386\u64cd\u4f5c\u4ee5\u53caiterator\uff0c\u6309\u6b63\u5e38\u89c4\u5219++ite\u904d\u5386\u53ef\u5f97\u5230\u6392\u5e8f\u72b6\u6001\u3002 \u65e0\u6cd5\u4f7f\u7528iterator\u6539\u53d8\u5143\u7d20\u7684key\uff0c\u4f46\u662f\u53ef\u4ee5\u6539\u53d8\u5143\u7d20\u7684data\uff0c\u56e0\u6b64map/multimap\u5185\u90e8\u81ea\u52a8\u5c06user\u5236\u5b9a\u7684key_type\u8bbe\u5b9a\u4e3aconst,\u5982\u6b64\u6765\u7981\u6b62user\u5bf9\u5143\u7d20\u7684key\u8d4b\u503c\u3002 template<class Key, class T, ...> class map { typedef pair<const Key, T> value_type; typedef rb_tree<key_type, value_type, ...> rep_type; rep_type t; ... } 10 hashtable \u6709\u4e00\u4e2abuckets vector\uff0c\u6bcf\u4e00\u4e2abucket\u90fd\u662f\u4e00\u4e2a\u94fe\u8868\uff0c\u53ef\u4ee5\u4f7f\u7528hashtable iterator\u6539\u53d8\u5143\u7d20\u7684data\uff0c\u4f46\u4e0d\u80fd\u6539\u53d8key \u5143\u7d20\u4e2a\u6570\u8d85\u8fc7buckets\u6570\u65f6\u8fdb\u884crehashing\uff0c\u65b0\u7684buckets\u6570\u662f\u7ffb\u500d\u540e\u6700\u8fd1\u90bb\u7684\u7d20\u6570\u3002 \u8fed\u4ee3\u5668 Iterator\u8981\u9075\u5faa\u7684\u539f\u5219\u3002\u5fc5\u987b\u6709\u80fd\u529b\u56de\u7b54Algorithms\u7684\u63d0\u95ee\uff0c\u8bbe\u8ba1\u4e86\u4e94\u79cd\u7279\u6b8a\u7684typedef\u3002 ![upload successful](\\images\\pasted-13.png) Iterator Traits \u7528\u4e8e\u5206\u79bbclass iterator\u548cnon-class iterators\u3002\uff08\u6a21\u677f\u7684\u7279\u5316\uff09 \u58f0\u660e\u4e00\u4e2a\u65e0\u6cd5\u88ab\u8d4b\u503c\u7684\u53d8\u91cf\u6ca1\u6709\u610f\u4e49\uff0c\u6240\u4ee5\u5373\u4f7f\u662fconst iterator\u7684value_type\u4e5f\u4e0d\u5e94\u8be5\u52a0\u4e0aconst\uff0citerator\u82e5\u662fconst int*, \u90a3value_type\u662fint\u800c\u4e0d\u662fconst int\u3002 \u5206\u914d\u5668 example\uff1a template<typename T, typename _Alloc = std::allocator<T>> class vector:protected _Vector_base<T, _Alloc> \u4eff\u51fd\u6570 \u4e3a\u7b97\u6cd5\u670d\u52a1\uff0c\u5fc5\u987b\u91cd\u8f7d\uff08\uff09 \u9002\u914d\u5668Adapter \u4eff\u51fd\u6570\u9002\u914d\u5668 \uff1fbind\u51fd\u6570 \u7ed1\u5b9a\u6210\u5458\u51fd\u6570\u65f6\uff0c\u4e3a\u4ec0\u4e48\u8981\u52a0\u4e0a&","title":"C++ STL\u4f53\u7cfb\u7ed3\u6784\u4e0e\u5185\u6838\u5206\u6790"},{"location":"C%2B%2B/C-STL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E4%B8%8E%E5%86%85%E6%A0%B8%E5%88%86%E6%9E%90-1/#oopobject-oriented-programming-vs-gpgeneric-programing","text":"OOP\u5c06datas\u4e0emethods\u5173\u8054\u5728\u4e00\u8d77 GP\u5c06datas\u4e0emethods\u5206\u5f00 \u4f7f\u7528 GP \uff1a 1 Containers/Algorithms\u56e2\u961f\u5404\u53f8\u5176\u804c\uff0c\u4ee5Iterator\u6c9f\u901a 2 Algorithms\u901a\u8fc7Iterators\u786e\u5b9a\u64cd\u4f5c\u8303\u56f4\uff0c\u901a\u8fc7Iterators\u53d6\u7528Containers\u5143\u7d20 ![upload successful](\\images\\pasted-11.png)","title":"OOP(object-oriented programming) vs GP(Generic Programing)"},{"location":"C%2B%2B/C-STL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E4%B8%8E%E5%86%85%E6%A0%B8%E5%88%86%E6%9E%90-1/#c","text":"1 Operator Overloading \u64cd\u4f5c\u7b26\u91cd\u8f7d 2 Templates \u6a21\u677f \u7c7b\u6a21\u677f/\u51fd\u6570\u6a21\u677f/\u6210\u5458\u6a21\u677f \u6a21\u677f\u7279\u5316/\u504f\u7279\u5316","title":"\u9605\u8bfbC++\u6807\u51c6\u5e93\uff0c\u57fa\u7840"},{"location":"C%2B%2B/C-STL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E4%B8%8E%E5%86%85%E6%A0%B8%E5%88%86%E6%9E%90-1/#stl","text":"\u5bb9\u5668\uff08Containiers\uff09 \u5206\u914d\u5668\uff08Allocators\uff09 \u7b97\u6cd5\uff08Alogrithms\uff09 \u8fed\u4ee3\u5668\uff08Iterators\uff09 \u9002\u914d\u5668\uff08Adapters\uff09 \u4eff\u51fd\u6570\uff08Functors\uff09 ![upload successful](\\images\\pasted-8.png)","title":"STL \u516d\u5927\u90e8\u4ef6"},{"location":"C%2B%2B/C-STL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E4%B8%8E%E5%86%85%E6%A0%B8%E5%88%86%E6%9E%90-1/#_1","text":"Sequance Containers\uff1a Array Vector Deque List Forward List Associative Containers\uff1a Set/MultiSet Map/Multimap ![upload successful](\\images\\pasted-9.png) Unordered Containers\uff1a Unordered Set/MultiSet Unordered Map/Multimap \u7528hash table\u5b9e\u73b0\u7684 ![upload successful](\\images\\pasted-10.png) ![upload successful](\\images\\pasted-12.png) 1 list \u73af\u72b6\u94fe\u8868\uff0c\u5728list\u7684\u5c3e\u7aef\u6709\u4e00\u7a7a\u767d\u8282\u70b9\uff0c\u7528\u4ee5\u7b26\u5408STL\u7684\u524d\u95ed\u540e\u5f00\u533a\u95f4\u7279\u70b9\u3002 \u6709iterator\u3002 2 vector data\u67093\u4e2a\u6307\u9488 strat finish end_of_storage\uff08\u6ce8\u610f\u6807\u51c6\u5e93\u7684\u7248\u672c\uff09\uff0c\u4e8c\u500d\u6210\u957f\u7684\u5bb9\u5668\u3002\u8fde\u7eed\u7a7a\u95f4\u3002\u6709iterator\u3002 3 array \u6ca1\u6709ctor\uff0c\u6ca1\u6709dtor\u3002\u6709iterator\u3002 4 forwrad_list \u7ebf\u72b6\u5355\u9879\u4e32\u5217 5 deque \u5206\u6bb5\u8fde\u7eed\uff0c\u53cc\u5411\u8fdb\u51fa\u3002deque iterator\u6a21\u62df\u4e86\u8fde\u7eed\u7a7a\u95f4\u3002 6.stack \u5148\u8fdb\u5148\u51fa queue \u5148\u8fdb\u5148\u51fa deque\u4f5c\u4e3a\u5e95\u5c42\u5bb9\u5668\uff0c\u4e0d\u5141\u8bb8\u904d\u5386\uff0c\u4e5f\u4e0d\u63d0\u4f9biterator\u3002 stack\u548cqueue\u90fd\u53ef\u4ee5\u9009\u62e9list\u6216\u8005deque\u4f5c\u4e3a\u5e95\u5c42\u5bb9\u5668\u3002stack\u53ef\u9009vector\u505a\u5e95\u5c42\u7ed3\u6784\uff0cqueue\u4e0d\u53ef\u9009vector\u505a\u5e95\u5c42\u7ed3\u6784\uff0c\u90fd\u4e0d\u53ef\u9009set\u6216map 7 rb_tree \u7ea2\u9ed1\u6811\uff0c\u662f\u5e73\u8861\u4e8c\u5143\u641c\u5bfb\u6811\u5e38\u4f7f\u7528\u7684\u4e00\u79cd\uff0c\u5e73\u8861\u4e8c\u5143\u641c\u5bfb\u6811\u7684\u7279\u5f81\uff1a\u6392\u5217\u89c4\u5219\u6709\u5229\u4e8esearch\u548cinset\uff0c\u5e76\u4fdd\u6301\u9002\u5ea6\u5e73\u8861-\u65e0\u8282\u70b9\u8fc7\u6df1\u3002 \u63d0\u4f9b\u904d\u5386\u64cd\u4f5c\u548citerator\uff0c\u6309\u6b63\u5e38\u89c4\u5219++ite\u904d\u5386\uff0c\u4fbf\u80fd\u83b7\u5f97\u6392\u5e8f\u72b6\u6001\u3002 \u4e3aset\u548cmap\u4f5c\u5176\u5e95\u5c42\u652f\u6301\u3002 8 set/multiset \u4ee5\u7ea2\u9ed1\u6811\u4f5c\u4e3a\u5e95\u5c42\u7ed3\u6784\uff0c\u56e0\u6b64\u5143\u7d20\u81ea\u52a8\u6392\u5e8f\uff0c\u6392\u5e8f\u4f9d\u636e\u662fkey\uff0c\u800cset/\u548cmultiset\u7684value\u548ckey\u5408\u4e00\u3002 \u65e0\u6cd5\u4f7f\u7528iterator\u6539\u53d8\u5143\u7d20\u503c\uff0cset/multiset\u7684iterator\u662f\u5e95\u90e8\u7ea2\u9ed1\u6811\u7684const iterator\uff0c\u7981\u6b62\u4e86user\u5bf9\u5143\u7d20\u7684\u8d4b\u503c\u3002 9 map/multimap \u4ee5\u7ea2\u9ed1\u6811\u4e3a\u5e95\u5c42\u7ed3\u6784\uff0c\u5143\u7d20\u81ea\u52a8\u6392\u5e8f\uff0c\u6392\u5e8f\u7684\u4f9d\u636e\u662fkey\u3002\u63d0\u4f9b\u904d\u5386\u64cd\u4f5c\u4ee5\u53caiterator\uff0c\u6309\u6b63\u5e38\u89c4\u5219++ite\u904d\u5386\u53ef\u5f97\u5230\u6392\u5e8f\u72b6\u6001\u3002 \u65e0\u6cd5\u4f7f\u7528iterator\u6539\u53d8\u5143\u7d20\u7684key\uff0c\u4f46\u662f\u53ef\u4ee5\u6539\u53d8\u5143\u7d20\u7684data\uff0c\u56e0\u6b64map/multimap\u5185\u90e8\u81ea\u52a8\u5c06user\u5236\u5b9a\u7684key_type\u8bbe\u5b9a\u4e3aconst,\u5982\u6b64\u6765\u7981\u6b62user\u5bf9\u5143\u7d20\u7684key\u8d4b\u503c\u3002 template<class Key, class T, ...> class map { typedef pair<const Key, T> value_type; typedef rb_tree<key_type, value_type, ...> rep_type; rep_type t; ... } 10 hashtable \u6709\u4e00\u4e2abuckets vector\uff0c\u6bcf\u4e00\u4e2abucket\u90fd\u662f\u4e00\u4e2a\u94fe\u8868\uff0c\u53ef\u4ee5\u4f7f\u7528hashtable iterator\u6539\u53d8\u5143\u7d20\u7684data\uff0c\u4f46\u4e0d\u80fd\u6539\u53d8key \u5143\u7d20\u4e2a\u6570\u8d85\u8fc7buckets\u6570\u65f6\u8fdb\u884crehashing\uff0c\u65b0\u7684buckets\u6570\u662f\u7ffb\u500d\u540e\u6700\u8fd1\u90bb\u7684\u7d20\u6570\u3002","title":"\u5bb9\u5668"},{"location":"C%2B%2B/C-STL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E4%B8%8E%E5%86%85%E6%A0%B8%E5%88%86%E6%9E%90-1/#_2","text":"Iterator\u8981\u9075\u5faa\u7684\u539f\u5219\u3002\u5fc5\u987b\u6709\u80fd\u529b\u56de\u7b54Algorithms\u7684\u63d0\u95ee\uff0c\u8bbe\u8ba1\u4e86\u4e94\u79cd\u7279\u6b8a\u7684typedef\u3002 ![upload successful](\\images\\pasted-13.png) Iterator Traits \u7528\u4e8e\u5206\u79bbclass iterator\u548cnon-class iterators\u3002\uff08\u6a21\u677f\u7684\u7279\u5316\uff09 \u58f0\u660e\u4e00\u4e2a\u65e0\u6cd5\u88ab\u8d4b\u503c\u7684\u53d8\u91cf\u6ca1\u6709\u610f\u4e49\uff0c\u6240\u4ee5\u5373\u4f7f\u662fconst iterator\u7684value_type\u4e5f\u4e0d\u5e94\u8be5\u52a0\u4e0aconst\uff0citerator\u82e5\u662fconst int*, \u90a3value_type\u662fint\u800c\u4e0d\u662fconst int\u3002","title":"\u8fed\u4ee3\u5668"},{"location":"C%2B%2B/C-STL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E4%B8%8E%E5%86%85%E6%A0%B8%E5%88%86%E6%9E%90-1/#_3","text":"example\uff1a template<typename T, typename _Alloc = std::allocator<T>> class vector:protected _Vector_base<T, _Alloc>","title":"\u5206\u914d\u5668"},{"location":"C%2B%2B/C-STL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E4%B8%8E%E5%86%85%E6%A0%B8%E5%88%86%E6%9E%90-1/#_4","text":"\u4e3a\u7b97\u6cd5\u670d\u52a1\uff0c\u5fc5\u987b\u91cd\u8f7d\uff08\uff09","title":"\u4eff\u51fd\u6570"},{"location":"C%2B%2B/C-STL%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84%E4%B8%8E%E5%86%85%E6%A0%B8%E5%88%86%E6%9E%90-1/#adapter","text":"\u4eff\u51fd\u6570\u9002\u914d\u5668 \uff1fbind\u51fd\u6570 \u7ed1\u5b9a\u6210\u5458\u51fd\u6570\u65f6\uff0c\u4e3a\u4ec0\u4e48\u8981\u52a0\u4e0a&","title":"\u9002\u914d\u5668Adapter"},{"location":"C%2B%2B/const%E5%9C%A8%E9%87%8D%E8%BD%BD%E4%B8%8A%E7%9A%84%E5%8C%BA%E5%88%AB/","text":"C++ \u5185\u5b58\u7ba1\u7406 categories: C++ date: 2020-12-16 14:11:00 \u91cd\u8f7dnew\u548cdelete operator new\uff08\uff09\u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2avoid*,\u800c\u4e0d\u662f\u6307\u5411\u4efb\u4f55\u7279\u5b9a\u7c7b\u578b\u7684\u6307\u9488\u3002\u6240\u505a\u7684\u662f\u5206\u914d\u5185\u5b58\uff0c\u800c\u4e0d\u662f\u5b8c\u6210\u4e00\u4e2a\u5bf9\u8c61\u5efa\u7acb\u2014\u2014\u76f4\u5230\u6784\u9020\u51fd\u6570\u8c03\u7528\u4e86\u624d\u5b8c\u6210\u4e86\u5bf9\u8c61\u7684\u521b\u5efa\uff0c\u5b83\u662f\u7f16\u8bd1\u5668\u786e\u4fdd\u7684\u52a8\u4f5c\uff0c\u4e0d\u5728\u6211\u4eec\u7684\u63a7\u5236\u8303\u56f4\u4e4b\u5185\u3002 operator delete\uff08\uff09\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u6307\u5411\u7531operator new\uff08\uff09\u5206\u914d\u7684\u5185\u5b58\u7684void ,\u800c\u4e0d\u662f\u6307\u5411\u4efb\u4f55\u7279\u5b9a\u7c7b\u578b\u7684\u6307\u9488\u3002\u53c2\u6570\u662f\u4e00\u4e2avoid \u662f\u56e0\u4e3a\u5b83\u662f\u5728\u8c03\u7528\u6790\u6784\u51fd\u6570\u540e\u5f97\u5230\u7684\u6307\u9488\u3002\u6790\u6784\u51fd\u6570\u4ece\u5b58\u50a8\u5355\u5143\u91cc\u79fb\u53bb\u5bf9\u8c61\u3002operator delete\uff08\uff09\u7684\u8fd4\u56de\u7c7b\u578b\u662fvoid\u3002","title":"new and delete"},{"location":"C%2B%2B/const%E5%9C%A8%E9%87%8D%E8%BD%BD%E4%B8%8A%E7%9A%84%E5%8C%BA%E5%88%AB/#newdelete","text":"operator new\uff08\uff09\u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2avoid*,\u800c\u4e0d\u662f\u6307\u5411\u4efb\u4f55\u7279\u5b9a\u7c7b\u578b\u7684\u6307\u9488\u3002\u6240\u505a\u7684\u662f\u5206\u914d\u5185\u5b58\uff0c\u800c\u4e0d\u662f\u5b8c\u6210\u4e00\u4e2a\u5bf9\u8c61\u5efa\u7acb\u2014\u2014\u76f4\u5230\u6784\u9020\u51fd\u6570\u8c03\u7528\u4e86\u624d\u5b8c\u6210\u4e86\u5bf9\u8c61\u7684\u521b\u5efa\uff0c\u5b83\u662f\u7f16\u8bd1\u5668\u786e\u4fdd\u7684\u52a8\u4f5c\uff0c\u4e0d\u5728\u6211\u4eec\u7684\u63a7\u5236\u8303\u56f4\u4e4b\u5185\u3002 operator delete\uff08\uff09\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u6307\u5411\u7531operator new\uff08\uff09\u5206\u914d\u7684\u5185\u5b58\u7684void ,\u800c\u4e0d\u662f\u6307\u5411\u4efb\u4f55\u7279\u5b9a\u7c7b\u578b\u7684\u6307\u9488\u3002\u53c2\u6570\u662f\u4e00\u4e2avoid \u662f\u56e0\u4e3a\u5b83\u662f\u5728\u8c03\u7528\u6790\u6784\u51fd\u6570\u540e\u5f97\u5230\u7684\u6307\u9488\u3002\u6790\u6784\u51fd\u6570\u4ece\u5b58\u50a8\u5355\u5143\u91cc\u79fb\u53bb\u5bf9\u8c61\u3002operator delete\uff08\uff09\u7684\u8fd4\u56de\u7c7b\u578b\u662fvoid\u3002","title":"\u91cd\u8f7dnew\u548cdelete"},{"location":"C%2B%2B/%E4%BA%94%E5%A4%A7%E5%87%BD%E6%95%B0/","text":"C++ categories: C++ date: 2020-11-13 17:51:00","title":"\u4e94\u5927\u51fd\u6570"},{"location":"C%2B%2B/%E4%BE%AF%E6%8D%B7C-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1-%E6%80%BB%E7%BB%93/","text":"C++ categories: C++ date: 2020-12-25 16:25:00 //(I)C++\u9762\u5411\u5bf9\u8c61\u5f00\u53d1 //complex class 1.\u5e26\u6307\u9488\u7684class/\u4e0d\u5e26\u6307\u9488\u7684class 2.\u521d\u59cb\u5316\u5217\u8868/\u4e0d\u4f7f\u7528\u521d\u59cb\u5316\u5217\u8868\u8d4b\u503c \uff08\u5934\u6587\u4ef6\u4e0e\u7c7b\u7684\u58f0\u660e \u6784\u9020\u51fd\u6570\uff09 3.constructor\u653e\u5728private\u91cc\uff08\u53c2\u6570\u4f20\u9012\u4e0e\u8fd4\u56de\u503c\uff09 singleton 4.\u8003\u8651return by value\u4e0ereturn by reference //string class \u53ea\u8981\u4f60\u7684\u7c7b\u91cc\u9762\u5e26\u6307\u9488\uff0c\u5fc5\u987b\u6709\u62f7\u8d1d\u6784\u9020/\u62f7\u8d1d\u8d4b\u503c\u3002 1.\u8c03\u8bd5\u6a21\u5f0f\u548crelease\u6a21\u5f0f //Object Oriented Programming, Object Oriented Design (OOP, OOD) Inheritance \u7ee7\u627f Composition \u590d\u5408 Delegation \u59d4\u6258 1.Composition\uff08\u7ec4\u5408\u4e0e\u7ee7\u627f\uff09 Adapter 2.pimpl pointer to implementation 3.Inheritance with virtual template method 4.Delegation + Inheritance Observer Composite 5.Prototype //\uff08II\uff09\u9762\u5411\u5bf9\u8c61\u5f00\u53d1--\u517c\u8c08\u5bf9\u8c61\u6a21\u578b 1.non-explicit-one-argument ctor \u8f6c\u6362\u51fd\u6570 \u5173\u952e\u5b57 explicit 2.pointer-like classes share-pointer iterator 3.function-like classes \u4eff\u51fd\u6570 4.namespace 5.class template 6.function template 7.member template 8.specialization\u7279\u5316 9.\u6a21\u677f\u504f\u7279\u5316 10.template template parameter 11.C++11\u65b0\u7279\u6027 12.reference 13.Object model 14.Vptr & Vtbl \u865a\u51fd\u6570 \u865a\u8868 \u52a8\u6001\u7ed1\u5b9a\uff1a1\u901a\u8fc7\u6307\u9488\u8c03\u7528 2\u5411\u4e0a\u8f6c\u578b 3\u8c03\u7528\u7684\u662f\u865a\u51fd\u6570 \u591a\u6001\uff1a A *p = new B; //A\u662f\u7236\u7c7b B\u662f\u5b50\u7c7b \u867d\u7136P\u662f\u4e00\u4e2a\u57fa\u7c7b\u7684\u6307\u9488\u3002\u4f46\u662fnew B\u8c03\u7528\u7684\u662f\u6d3e\u751f\u7c7bB\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u6240\u4ee5\u6784\u9020\u7684\u662fB\u7c7b\u5bf9\u8c61\u3002\u5148\u8c03\u7528A\u7684\u6784\u9020\u51fd\u6570\uff0c\u518d\u8c03\u7528B\u7684\u6784\u9020\u51fd\u6570\u3002\u6784\u9020\u5b8c\u540e\u4f1a\u8fd4\u56deB\u7c7b\u5bf9\u8c61\u7684\u5730\u5740\uff0c\u7136\u540e\u5c06\u5b83\u8d4b\u7ed9\u4e00\u4e2a\u57fa\u7c7b\u6307\u9488P\u3002 15.const 1\u653e\u5728\u5c0f\u62ec\u53f7\u540e\u9762\u5927\u62ec\u53f7\u524d\u9762 \u4fee\u9970\u6210\u5458\u51fd\u6570\uff0c\u4e0d\u6539\u53d8class\u7684data const\u4e5f\u7b97\u51fd\u6570\u7b7e\u540d\u7684\u4e00\u90e8\u5206 \u5f53\u6210\u5458\u51fd\u6570\u7684const\u548cnon-const\u7248\u672c\u540c\u65f6\u5b58\u5728\u7684\u65f6\u5019\uff0cconst object\u53ea\u80fd\u53ea\u4f1a\u8c03\u7528const\u7248\u672c\uff0cnon-const object\u53ea\u80fd\u53ea\u4f1a\u8c03\u7528non-const\u7248\u672c\u3002 16.new & delete new \u5148\u5206\u914dmemory\uff0c\u518d\u8c03\u7528ctor delete \u5148\u8c03\u7528dtor\uff0c\u518d\u91ca\u653ememory new\u548cdelete\u90fd\u662fexpression\uff0c\u8c03\u7528\u7684\u662foperator new/operator delete\uff0c\u5e95\u5c42\u662f\u8c03\u7528malloc 17.\u91cd\u8f7doperator new/operator delete/operator new\u3010\u3011/operator delete\u3010\u3011 18.placement new()","title":"\u4faf\u6377C++ \u9762\u5411\u5bf9\u8c61 \u603b\u7ed3"},{"location":"C%2B%2B/%E5%AE%B9%E5%99%A8%E6%93%8D%E4%BD%9C/","text":"C++ categories: [] date: 2021-01-14 16:36:00 push_back vs emplace_back For emplace_back constructor A (int x_arg) will be called. And for push_back A (int x_arg) is called first and move A (A &&rhs) is called afterwards. Of course, the constructor has to be marked as explicit, but for current example is good to remove explicitness. #include <iostream> #include <vector> class A { public: A (int x_arg) : x (x_arg) { std::cout << \"A (x_arg)\\n\"; } A () { x = 0; std::cout << \"A ()\\n\"; } A (const A &rhs) noexcept { x = rhs.x; std::cout << \"A (A &)\\n\"; } A (A &&rhs) noexcept { x = rhs.x; std::cout << \"A (A &&)\\n\"; } private: int x; }; int main () { { std::vector<A> a; std::cout << \"call emplace_back:\\n\"; a.emplace_back (0); } { std::vector<A> a; std::cout << \"call push_back:\\n\"; a.push_back (1); } return 0; } output: call emplace_back: A (x_arg) call push_back: A (x_arg) A (A &&) emplace_back\u7684\u7279\u70b9 1\u3001\u5f53\u8c03\u7528push_back\u6216insert\u6210\u5458\u51fd\u6570\u65f6\uff0c\u662f\u628a\u5143\u7d20\u7c7b\u578b\u7684\u5bf9\u8c61\u4f20\u9012\u7ed9\u5b83\u4eec\uff0c\u8fd9\u4e9b\u5bf9\u8c61\u88ab\u62f7\u8d1d\u5230\u5bb9\u5668\u4e2d\u3002\u800c\u5f53\u6211\u4eec\u8c03\u7528\u4e00\u4e2aemplace\u7cfb\u5217\u51fd\u6570\u65f6\uff0c\u5219\u662f\u5c06\u76f8\u5e94\u53c2\u6570\u4f20\u9012\u7ed9\u5143\u7d20\u7c7b\u578b\u7684\u6784\u9020\u51fd\u6570\u3002 2\u3001\u8fd9\u6837emplace_back\u80fd\u5c31\u5730\u901a\u8fc7\u53c2\u6570\u6784\u9020\u5bf9\u8c61\uff0c\u4e0d\u9700\u8981\u62f7\u8d1d\u64cd\u4f5c\uff0c\u76f8\u6bd4push_back\u80fd\u66f4\u597d\u7684\u907f\u514d\u5185\u5b58\u7684\u62f7\u8d1d\u548c\u79fb\u52a8\uff0c\u63d0\u5347\u5bb9\u5668\u63d2\u5165\u5143\u7d20\u7684\u6027\u80fd\u3002 3\u3001\u5927\u591a\u6570\u60c5\u51b5\u90fd\u5e94\u8be5\u4f7f\u7528emplace\u7cfb\u5217\u51fd\u6570\uff1aemplace; emplace_back; emplace_hit; emplace_fornt; emplace_after Be careful 1\u3001emplace\u51fd\u6570\u9700\u8981\u5bf9\u5e94\u7684\u53c2\u6570\u5bf9\u8c61\u6709\u5bf9\u5e94\u7684\u6784\u9020\u51fd\u6570\uff0c\u4e0d\u7136\u7f16\u8bd1\u62a5\u9519 2\u3001emplace\u51fd\u6570\u5728\u5bb9\u5668\u4e2d\u76f4\u63a5\u6784\u9020\u5143\u7d20\u3002\u4f20\u9012\u7ed9emplace\u51fd\u6570\u7684\u53c2\u6570\u5fc5\u987b\u4e0e\u5143\u7d20\u7c7b\u578b\u7684\u6784\u9020\u51fd\u6570\u76f8\u5339\u914d","title":"\u5bb9\u5668\u64cd\u4f5c"},{"location":"C%2B%2B/%E6%8C%87%E9%92%88%E5%B8%B8%E9%87%8F-%E5%B8%B8%E9%87%8F%E6%8C%87%E9%92%88/","text":"C++ categories: C++ date: 2020-11-10 17:20:00 pointer to const \u6307\u5411\u5e38\u91cf\u7684\u6307\u9488 const pointer \u5e38\u91cf\u6307\u9488 int *p =&x;//p\u4e3a\u6307\u9488,\u6307\u9488\u6307\u5411int\u7c7b\u578b x const int *p = &x; //\u6307\u9488p,\u6307\u9488\u6307\u5411const int\u7c7b\u578b\u7684x int *const p = &x; //\u6307\u9488\u662fconst p \u5730\u5740\u4e3a\u5e38\u91cf\uff0c\u8bf4\u660e\u6307\u9488\u6307\u5411\u7684\u5bf9\u8c61\u4e0d\u80fd\u6539\u53d8 const int *const p =&x; //\u6307\u9488\u662fconst p\uff0c\u6307\u5411cosnt int\u7c7b\u578b\u7684x","title":"\u6307\u9488\u5e38\u91cf \u5e38\u91cf\u6307\u9488"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/","text":"C++ \u6570\u636e\u7ed3\u6784 categories: C++ date: 2020-11-23 14:42:00 vector & list vector \u4f18\u70b9\uff1a\u5e38\u6570\u65f6\u95f4\u7d22\u5f15\u3002 \u7f3a\u70b9\uff1a\u63d2\u5165\u65b0\u9879\u548c\u5220\u9664\u5df2\u6709\u9879\u4ee3\u4ef7\u9ad8\u6602\u3002\uff08\u9664\u975e\u53d1\u751f\u5728\u5c3e\u7aef\uff09 list \u4f18\u70b9\uff1a\u63d2\u5165\u65b0\u9879\u548c\u5220\u9664\u4ee3\u4ef7\u4f4e\u5ec9\uff0c\u4f46\u5047\u8bbe\u53d8\u52a8\u7684\u4f4d\u7f6e\u662f\u5df2\u77e5\u7684\u3002 \u7f3a\u70b9\uff1alist\u4e0d\u5bb9\u6613\u88ab\u7d22\u5f15\u3002 \u67e5\u627e\u65f6\u4e24\u8005\u90fd\u662f\u4f4e\u6548\u7684 set & map set\u662f\u4e0d\u5141\u8bb8\u6709\u91cd\u590d\u5143\u7684\u6709\u5e8f\u5bb9\u5668 map\u7528\u6765\u5b58\u50a8\u7531\u5173\u952e\u5b57\u4e0e\u503c\u6784\u6210\u7684\u6709\u5e8f\u9879\u7684\u96c6\u5408 \u4ee5\u5bf9\u6570\u6700\u574f\u60c5\u5f62\u65f6\u95f4\u6765\u652f\u6301\u57fa\u672c\u7684inset/erase/find\u64cd\u4f5c \uff0c\u5e95\u5c42\u4e3a\u81ea\u9876\u5411\u4e0b\u7684\u7ea2\u9ed1\u6811","title":"\u6570\u636e\u7ed3\u6784"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#vector-list","text":"vector \u4f18\u70b9\uff1a\u5e38\u6570\u65f6\u95f4\u7d22\u5f15\u3002 \u7f3a\u70b9\uff1a\u63d2\u5165\u65b0\u9879\u548c\u5220\u9664\u5df2\u6709\u9879\u4ee3\u4ef7\u9ad8\u6602\u3002\uff08\u9664\u975e\u53d1\u751f\u5728\u5c3e\u7aef\uff09 list \u4f18\u70b9\uff1a\u63d2\u5165\u65b0\u9879\u548c\u5220\u9664\u4ee3\u4ef7\u4f4e\u5ec9\uff0c\u4f46\u5047\u8bbe\u53d8\u52a8\u7684\u4f4d\u7f6e\u662f\u5df2\u77e5\u7684\u3002 \u7f3a\u70b9\uff1alist\u4e0d\u5bb9\u6613\u88ab\u7d22\u5f15\u3002 \u67e5\u627e\u65f6\u4e24\u8005\u90fd\u662f\u4f4e\u6548\u7684","title":"vector &amp; list"},{"location":"C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#set-map","text":"set\u662f\u4e0d\u5141\u8bb8\u6709\u91cd\u590d\u5143\u7684\u6709\u5e8f\u5bb9\u5668 map\u7528\u6765\u5b58\u50a8\u7531\u5173\u952e\u5b57\u4e0e\u503c\u6784\u6210\u7684\u6709\u5e8f\u9879\u7684\u96c6\u5408 \u4ee5\u5bf9\u6570\u6700\u574f\u60c5\u5f62\u65f6\u95f4\u6765\u652f\u6301\u57fa\u672c\u7684inset/erase/find\u64cd\u4f5c \uff0c\u5e95\u5c42\u4e3a\u81ea\u9876\u5411\u4e0b\u7684\u7ea2\u9ed1\u6811","title":"set &amp; map"},{"location":"C%2B%2B/%E6%9E%9A%E4%B8%BE%E7%B1%BB%E5%9E%8B/","text":"C++ categories: C++ date: 2020-12-30 22:19:00 enum <\u7c7b\u578b\u540d> {<\u679a\u4e3e\u5e38\u91cf\u8868>}; \u8bf4\u660e\uff1a \u5173\u952e\u5b57enum\u2014\u2014\u6307\u660e\u5176\u540e\u7684\u6807\u8bc6\u7b26\u662f\u4e00\u4e2a\u679a\u4e3e\u7c7b\u578b\u7684\u540d\u5b57\u3002 \u679a\u4e3e\u5e38\u91cf\u8868\u2014\u2014\u7531\u679a\u4e3e\u5e38\u91cf\u6784\u6210\u3002\"\u679a\u4e3e\u5e38\u91cf\"\u6216\u79f0\"\u679a\u4e3e\u6210\u5458\"\uff0c\u662f\u4ee5\u6807\u8bc6\u7b26\u5f62\u5f0f\u8868\u793a\u7684\u6574\u578b\u91cf\uff0c\u8868\u793a\u679a\u4e3e\u7c7b\u578b\u7684\u53d6\u503c\u3002\u679a\u4e3e\u5e38\u91cf\u8868\u5217\u51fa\u679a\u4e3e\u7c7b\u578b\u7684\u6240\u6709\u53d6\u503c\uff0c\u5404\u679a\u4e3e\u5e38\u91cf\u4e4b\u95f4\u4ee5\"\uff0c\"\u95f4\u9694\uff0c\u4e14\u5fc5\u987b\u5404\u4e0d\u76f8\u540c\u3002\u53d6\u503c\u7c7b\u578b\u4e0e\u6761\u4ef6\u8868\u8fbe\u5f0f\u76f8\u540c\u3002 enum color_set1 {RED, BLUE, WHITE, BLACK}; // \u5b9a\u4e49\u679a\u4e3e\u7c7b\u578bcolor_set1 enum week {Sun, Mon, Tue, Wed, Thu, Fri, Sat}; // \u5b9a\u4e49\u679a\u4e3e\u7c7b\u578bweek \u63d0\u793a\uff1a \u679a\u4e3e\u5e38\u91cf\u4ee3\u8868\u8be5\u679a\u4e3e\u7c7b\u578b\u7684\u53d8\u91cf\u53ef\u80fd\u53d6\u7684\u503c\uff0c\u7f16\u8bd1\u7cfb\u7edf\u4e3a\u6bcf\u4e2a\u679a\u4e3e\u5e38\u91cf\u6307\u5b9a\u4e00\u4e2a\u6574\u6570\u503c\uff0c\u9ed8\u8ba4\u72b6\u6001\u4e0b\uff0c\u8fd9\u4e2a\u6574\u6570\u5c31\u662f\u6240\u5217\u4e3e\u5143\u7d20\u7684\u5e8f\u53f7\uff0c\u5e8f\u53f7\u4ece0\u5f00\u59cb\u3002 \u53ef\u4ee5\u5728\u5b9a\u4e49\u679a\u4e3e\u7c7b\u578b\u65f6\u4e3a\u90e8\u5206\u6216\u5168\u90e8\u679a\u4e3e\u5e38\u91cf\u6307\u5b9a\u6574\u6570\u503c \uff0c\u5728\u6307\u5b9a\u503c \u4e4b\u524d \u7684\u679a\u4e3e\u5e38\u91cf\u4ecd\u6309\u9ed8\u8ba4\u65b9\u5f0f\u53d6\u503c\uff0c\u800c\u6307\u5b9a\u503c \u4e4b\u540e \u7684\u679a\u4e3e\u5e38\u91cf\u6309\u4f9d\u6b21\u52a01\u7684\u539f\u5219\u53d6\u503c\u3002 \u5404\u679a\u4e3e\u5e38\u91cf\u7684\u503c\u53ef\u4ee5\u91cd\u590d\u3002\u4f8b\u5982\uff1a enum fruit_set {apple, orange, banana=1, peach, grape} //\u679a\u4e3e\u5e38\u91cfapple=0,orange=1, banana=1,peach=2,grape=3\u3002 enum week {Sun=7, Mon=1, Tue, Wed, Thu, Fri, Sat}; //\u679a\u4e3e\u5e38\u91cfSun,Mon,Tue,Wed,Thu,Fri,Sat\u7684\u503c\u5206\u522b\u4e3a7\u30011\u30012\u30013\u30014\u30015\u30016\u3002 \u679a\u4e3e\u5e38\u91cf\u53ea\u80fd\u4ee5\u6807\u8bc6\u7b26\u5f62\u5f0f\u8868\u793a \uff0c\u800c\u4e0d\u80fd\u662f\u6574\u578b\u3001\u5b57\u7b26\u578b\u7b49\u6587\u5b57\u5e38\u91cf enum letter_set {'a','d','F','s','T'}; //\u679a\u4e3e\u5e38\u91cf\u4e0d\u80fd\u662f\u5b57\u7b26\u5e38\u91cf enum year_set{2000,2001,2002,2003,2004,2005}; //\u679a\u4e3e\u5e38\u91cf\u4e0d\u80fd\u662f\u6574\u578b\u5e38\u91cf \u4f7f\u7528 \u5b9a\u4e49\u679a\u4e3e\u7c7b\u578b\u7684\u4e3b\u8981\u76ee\u7684\u662f\uff1a\u589e\u52a0\u7a0b\u5e8f\u7684\u53ef\u8bfb\u6027\u3002\u679a\u4e3e\u7c7b\u578b\u6700\u5e38\u89c1\u4e5f\u6700\u6709\u610f\u4e49\u7684\u7528\u5904\u4e4b\u4e00\u5c31\u662f\u7528\u6765\u63cf\u8ff0\u72b6\u6001\u91cf\uff0c\u8fd9\u70b9\u5c06\u5728\u7b2c9\u7ae0 \u8f93\u5165\u8f93\u51fa\u6d41\u7c7b\u770b\u5230\u3002 \u5b9a\u4e49\u683c\u5f0f\uff1a\u5b9a\u4e49\u679a\u4e3e\u7c7b\u578b\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u5b9a\u4e49\u8be5\u679a\u4e3e\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u5982\uff1a color_set1 color1, color2; \u4ea6\u53ef\u7c7b\u578b\u4e0e\u53d8\u91cf\u540c\u65f6\u5b9a\u4e49\uff08\u751a\u81f3\u7c7b\u578b\u540d\u53ef\u7701\uff09\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a enum {Sun,Mon,Tue,Wed,Thu,Fri,Sat} weekday1, weekday2;","title":"\u679a\u4e3e\u7c7b\u578b"},{"location":"C%2B%2B/%E6%9E%9A%E4%B8%BE%E7%B1%BB%E5%9E%8B/#_1","text":"\u5b9a\u4e49\u679a\u4e3e\u7c7b\u578b\u7684\u4e3b\u8981\u76ee\u7684\u662f\uff1a\u589e\u52a0\u7a0b\u5e8f\u7684\u53ef\u8bfb\u6027\u3002\u679a\u4e3e\u7c7b\u578b\u6700\u5e38\u89c1\u4e5f\u6700\u6709\u610f\u4e49\u7684\u7528\u5904\u4e4b\u4e00\u5c31\u662f\u7528\u6765\u63cf\u8ff0\u72b6\u6001\u91cf\uff0c\u8fd9\u70b9\u5c06\u5728\u7b2c9\u7ae0 \u8f93\u5165\u8f93\u51fa\u6d41\u7c7b\u770b\u5230\u3002 \u5b9a\u4e49\u683c\u5f0f\uff1a\u5b9a\u4e49\u679a\u4e3e\u7c7b\u578b\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u5b9a\u4e49\u8be5\u679a\u4e3e\u7c7b\u578b\u7684\u53d8\u91cf\uff0c\u5982\uff1a color_set1 color1, color2; \u4ea6\u53ef\u7c7b\u578b\u4e0e\u53d8\u91cf\u540c\u65f6\u5b9a\u4e49\uff08\u751a\u81f3\u7c7b\u578b\u540d\u53ef\u7701\uff09\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a enum {Sun,Mon,Tue,Wed,Thu,Fri,Sat} weekday1, weekday2;","title":"\u4f7f\u7528"},{"location":"C%2B%2B/%E7%90%86%E8%A7%A3%E5%A4%9A%E6%80%81/","text":"C++ categories: C++ date: 2020-12-29 14:48:00 A* P=new B; //A\u662f\u7236\u7c7b,B\u662f\u5b50\u7c7b \u867d\u7136P\u662f\u4e00\u4e2a\u57fa\u7c7b\u7684\u6307\u9488\u3002\u4f46\u662fnew B\u8c03\u7528\u7684\u662f\u6d3e\u751f\u7c7bB\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u6240\u4ee5\u6784\u9020\u7684\u662fB\u7c7b\u5bf9\u8c61\u3002\u5148\u8c03\u7528A\u7684\u6784\u9020\u51fd\u6570\uff0c\u518d\u8c03\u7528B\u7684\u6784\u9020\u51fd\u6570\u3002\u6784\u9020\u5b8c\u540e\u4f1a\u8fd4\u56deB\u7c7b\u5bf9\u8c61\u7684\u5730\u5740\uff0c\u7136\u540e\u5c06\u5b83\u8d4b\u7ed9\u4e00\u4e2a\u57fa\u7c7b\u6307\u9488P\u3002 B* q=new B;//\u8fd9\u91cc\u548c\u4e0a\u9762\u552f\u4e00\u7684\u533a\u522b\u5c31\u662f\uff0c\u5c06B\u7c7b\u5bf9\u8c61\u7684\u5730\u5740\u8d4b\u7ed9\u4e86\u6d3e\u751f\u7c7b\u6307\u9488q \u800c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff1a\u53ef\u4ee5\u5c06\u4e00\u4e2a\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u5730\u5740\u8d4b\u7ed9\u57fa\u7c7b\u6307\u9488\u548c\u6d3e\u751f\u7c7b\u6307\u9488\uff0c\u800c\u4e00\u4e2a\u57fa\u7c7b\u5bf9\u8c61\u7684\u5730\u5740\u53ea\u80fd\u8d4b\u7ed9\u57fa\u7c7b\u6307\u9488\uff0c\u4e0d\u80fd\u8d4b\u7ed9\u6d3e\u751f\u7c7b\u7684\u6307\u9488\u3002\u56e0\u4e3a\u6d3e\u751f\u7c7b\u4e0d\u4f46\u62e5\u6709\u57fa\u7c7b\u7684\u65b9\u6cd5\u5c5e\u6027\uff0c\u8fd8\u6709\u57fa\u7c7b\u6ca1\u6709\u7684\u5c5e\u6027\u65b9\u6cd5\u3002 \u5c06\u4e00\u4e2a\u5730\u5740\u8d4b\u7ed9\u4e00\u4e2a\u6307\u9488\u524d\uff0c\u901a\u5e38\u4f1a\u5c06\u8be5\u5730\u5740\u5904\u7684\u5bf9\u8c61\u7c7b\u578b\u8f6c\u6362\u4e3a\u6307\u9488\u6240\u6307\u7684\u7c7b\u578b\u3002\u800c\u5c06\u4e00\u4e2a\u57fa\u7c7b\u5730\u5740\u8d4b\u7ed9\u4e00\u4e2a\u6d3e\u751f\u7c7b\u6307\u9488\u662f\u4e0d\u5141\u8bb8\u7684\uff0c\u5982\u679c\u53ef\u4ee5\u7684\u8bdd\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6307\u9488\u5c31\u53ef\u4ee5\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u65b9\u6cd5\u548c\u5c5e\u6027\u3002\u4f46\u6307\u9488\u6307\u5411\u7684\u662f\u4e00\u4e2a\u57fa\u7c7b\u5bf9\u8c61\uff0c\u800c\u57fa\u7c7b\u53ef\u80fd\u5e76\u6ca1\u6709\u8fd9\u4e9b\u65b9\u6cd5\u548c\u5c5e\u6027\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u65b9\u6cd5\u548c\u5c5e\u6027\u662f\u6d3e\u751f\u7c7b\u65b0\u589e\u7684\uff0c\u6240\u4ee5\uff0c\u57fa\u7c7b\u5730\u5740\u8d4b\u7ed9\u4e00\u4e2a\u6d3e\u751f\u7c7b\u6307\u9488\u662f\u4e0d\u5141\u8bb8\u7684\u3002\u4f46\u5c06\u4e00\u4e2a\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u5730\u5740\u8d4b\u7ed9\u4e00\u4e2a\u57fa\u7c7b\u6307\u9488\u662f\u53ef\u4ee5\u7684\uff0c\u56e0\u4e3a\uff0c\u57fa\u7c7b\u6307\u9488\u80fd\u8c03\u7528\u7684\u65b9\u6cd5\u548c\u5c5e\u6027\uff0c\u6d3e\u751f\u7c7b\u90fd\u6709\uff0c\u6240\u4ee5\u5e76\u4e0d\u4f1a\u6709\u4ec0\u4e48\u95ee\u9898\u3002","title":"\u7406\u89e3\u591a\u6001"},{"location":"C%2B%2B/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/","text":"C++ categories: C++ date: 2020-11-12 14:13:00 const_cast const\u4fee\u9970\u51fd\u6570\u8fd4\u56de\u503c\u8868\u793a\u8fd4\u56de\u503c\u4e0d\u53ef\u6539\u53d8,\u591a\u7528\u4e8e\u8fd4\u56de\u6307\u9488\u7684\u60c5\u5f62 1\u3001\u5e38\u91cf\u6307\u9488\u88ab\u8f6c\u5316\u6210\u975e\u5e38\u91cf\u7684\u6307\u9488\uff0c\u5e76\u4e14\u4ecd\u7136\u6307\u5411\u539f\u6765\u7684\u5bf9\u8c61\uff1b 2\u3001\u5e38\u91cf\u5f15\u7528\u88ab\u8f6c\u6362\u6210\u975e\u5e38\u91cf\u7684\u5f15\u7528\uff0c\u5e76\u4e14\u4ecd\u7136\u6307\u5411\u539f\u6765\u7684\u5bf9\u8c61\uff1b 3\u3001const_cast\u4e00\u822c\u7528\u4e8e\u4fee\u6539\u6307\u9488\u3002\u5982const char *p\u5f62\u5f0f\uff1b const int a = 233; int &b = const_cast<int&>(a); //\u53bbconst\u5f15\u7528 int *c = const_cast<int*>(&a); //\u53bbconst\u6307\u9488 static_cast 1\u3001static_cast \u4f5c\u7528\u548cC\u8bed\u8a00\u98ce\u683c\u5f3a\u5236\u8f6c\u6362\u7684\u6548\u679c\u57fa\u672c\u4e00\u6837\uff0c\u7531\u4e8e\u6ca1\u6709\u8fd0\u884c\u65f6\u7c7b\u578b\u68c0\u67e5\u6765\u4fdd\u8bc1\u8f6c\u6362\u7684\u5b89\u5168\u6027\uff0c\u6240\u4ee5\u8fd9\u7c7b\u578b\u7684\u5f3a\u5236\u8f6c\u6362\u548cC\u8bed\u8a00\u98ce\u683c\u7684\u5f3a\u5236\u8f6c\u6362\u90fd\u6709\u5b89\u5168\u9690\u60a3\u3002 2\u3001\u7528\u4e8e\u7c7b\u5c42\u6b21\u7ed3\u6784\u4e2d\u57fa\u7c7b\uff08\u7236\u7c7b\uff09\u548c\u6d3e\u751f\u7c7b\uff08\u5b50\u7c7b\uff09\u4e4b\u95f4\u6307\u9488\u6216\u5f15\u7528\u7684\u8f6c\u6362\u3002\u6ce8\u610f\uff1a\u8fdb\u884c \u4e0a\u884c\u8f6c\u6362 \uff08\u628a\u6d3e\u751f\u7c7b\u7684\u6307\u9488\u6216\u5f15\u7528\u8f6c\u6362\u6210\u57fa\u7c7b\u8868\u793a\uff09\u662f\u5b89\u5168\u7684\uff1b\u8fdb\u884c \u4e0b\u884c\u8f6c\u6362 \uff08\u628a\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8f6c\u6362\u6210\u6d3e\u751f\u7c7b\u8868\u793a\uff09\u65f6\uff0c\u7531\u4e8e\u6ca1\u6709\u52a8\u6001\u7c7b\u578b\u68c0\u67e5\uff0c\u6240\u4ee5\u662f\u4e0d\u5b89\u5168\u7684\u3002 \u8f6c\u6362\u81ea\u5b9a\u4e49\u7c7b\u578b\uff0c\u53ea\u6709\u5728\u76f8\u4e92\u8054\u7cfb\uff08\u7ee7\u627f\uff09\u7684\u7c7b\u578b\u4e4b\u95f4\u624d\u80fd\u8fdb\u884c\u8f6c\u6362 \u3002 dynamic_cast 1\u3001\u5176\u4ed6\u4e09\u79cd\u90fd\u662f\u7f16\u8bd1\u65f6\u5b8c\u6210\u7684\u3002dynamic_cast\u662f\u8fd0\u884c\u65f6\u5904\u7406\u7684\uff0c\u8fd0\u884c\u65f6\u8981\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\u3002 2\u3001\u4e0d\u80fd\u7528\u4e8e\u5185\u7f6e\u57fa\u672c\u6570\u636e\u7c7b\u578b\u95f4\u7684\u5f3a\u5236\u8f6c\u6362\u3002\u4f8b\u5982\uff1a double dValue = 12.12; int nDValue = dynamic_cast<int>(dValue); // error C2680 : \u201cint\u201d : dynamic_cast \u7684\u76ee\u6807\u7c7b\u578b\u65e0\u6548\u3002\u76ee\u6807\u7c7b\u578b\u5fc5\u987b\u662f\u6307\u5411\u5df2\u5b9a\u4e49\u7c7b\u7684\u6307\u9488\u6216\u5f15\u7528 3\u3001\u4f7f\u7528dynamic_cast\u8fdb\u884c\u8f6c\u6362\u65f6\uff0c\u57fa\u7c7b\u4e2d\u4e00\u5b9a\u8981\u6709\u865a\u51fd\u6570\uff0c\u5426\u5219\u7f16\u8bd1\u4e0d\u901a\u8fc7\u3002 \u539f\u56e0\uff1a\u7c7b\u4e2d\u5b58\u5728\u865a\u51fd\u6570\uff0c\u5c31\u8bf4\u660e\u5b83\u6709\u60f3\u8981\u8ba9\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u5fc5\u8981\uff0c\u6b64\u65f6\u8f6c\u6362\u624d\u6709\u610f\u4e49\u3002 \u7531\u4e8e\u8fd0\u884c\u65f6\u7c7b\u578b\u68c0\u67e5\u9700\u8981\u8fd0\u884c\u65f6\u7c7b\u578b\u4fe1\u606f\uff0c\u800c\u8fd9\u4e2a\u4fe1\u606f\u5b58\u50a8\u5728\u7c7b\u7684\u865a\u51fd\u6570\u8868\u4e2d\uff0c\u53ea\u6709\u5b9a\u4e49\u4e86\u865a\u51fd\u6570\u7684\u7c7b\u624d\u6709\u865a\u51fd\u6570\u8868\u3002 4\u3001dynamic_cast\u8f6c\u6362\u82e5\u6210\u529f\uff0c\u8fd4\u56de\u7684\u662f\u6307\u5411\u7c7b\u7684\u6307\u9488\u6216\u5f15\u7528\uff1b\u82e5\u5931\u8d25\u5219\u4f1a\u8fd4\u56deNULL\u3002 5\u3001\u5728\u7c7b\u7684\u8f6c\u6362\u65f6\uff0c\u5728\u7c7b\u5c42\u6b21\u95f4\u8fdb\u884c\u4e0a\u884c\u8f6c\u6362\u65f6\uff0cdynamic_cast\u548cstatic_cast\u7684\u6548\u679c\u662f\u4e00\u6837\u7684\u3002 \u5728\u8fdb\u884c\u4e0b\u884c\u8f6c\u6362\u65f6\uff0cdynamic_cast\u5177\u6709\u7c7b\u578b\u68c0\u67e5\u7684\u529f\u80fd\uff0c\u6bd4static_cast\u66f4\u5b89\u5168\u3002 \u5411\u4e0a\u8f6c\u6362\u5373\u4e3a\u6307\u5411\u5b50\u7c7b\u5bf9\u8c61\u7684\u5411\u4e0a\u8f6c\u6362\uff0c\u5373\u5c06\u5b50\u7c7b\u6307\u9488\u8f6c\u5316\u7236\u7c7b\u6307\u9488\u3002 \u5411\u4e0b\u8f6c\u6362\u7684\u6210\u8d25\u53d6\u51b3\u4e8e\u5c06\u8981\u8f6c\u6362\u7684\u7c7b\u578b\uff0c\u5373\u8981\u5f3a\u5236\u8f6c\u6362\u7684\u6307\u9488\u6240\u6307\u5411\u7684\u5bf9\u8c61\u5b9e\u9645\u7c7b\u578b\u4e0e\u5c06\u8981\u8f6c\u6362\u540e\u7684\u7c7b\u578b\u4e00\u5b9a\u8981\u76f8\u540c\uff0c\u5426\u5219\u8f6c\u6362\u5931\u8d25\u3002 reinterpret_cast emmmmmm.....\u6ca1\u7528\u8fc7","title":"\u7c7b\u578b\u8f6c\u6362"},{"location":"C%2B%2B/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/#const_cast","text":"const\u4fee\u9970\u51fd\u6570\u8fd4\u56de\u503c\u8868\u793a\u8fd4\u56de\u503c\u4e0d\u53ef\u6539\u53d8,\u591a\u7528\u4e8e\u8fd4\u56de\u6307\u9488\u7684\u60c5\u5f62 1\u3001\u5e38\u91cf\u6307\u9488\u88ab\u8f6c\u5316\u6210\u975e\u5e38\u91cf\u7684\u6307\u9488\uff0c\u5e76\u4e14\u4ecd\u7136\u6307\u5411\u539f\u6765\u7684\u5bf9\u8c61\uff1b 2\u3001\u5e38\u91cf\u5f15\u7528\u88ab\u8f6c\u6362\u6210\u975e\u5e38\u91cf\u7684\u5f15\u7528\uff0c\u5e76\u4e14\u4ecd\u7136\u6307\u5411\u539f\u6765\u7684\u5bf9\u8c61\uff1b 3\u3001const_cast\u4e00\u822c\u7528\u4e8e\u4fee\u6539\u6307\u9488\u3002\u5982const char *p\u5f62\u5f0f\uff1b const int a = 233; int &b = const_cast<int&>(a); //\u53bbconst\u5f15\u7528 int *c = const_cast<int*>(&a); //\u53bbconst\u6307\u9488","title":"const_cast"},{"location":"C%2B%2B/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/#static_cast","text":"1\u3001static_cast \u4f5c\u7528\u548cC\u8bed\u8a00\u98ce\u683c\u5f3a\u5236\u8f6c\u6362\u7684\u6548\u679c\u57fa\u672c\u4e00\u6837\uff0c\u7531\u4e8e\u6ca1\u6709\u8fd0\u884c\u65f6\u7c7b\u578b\u68c0\u67e5\u6765\u4fdd\u8bc1\u8f6c\u6362\u7684\u5b89\u5168\u6027\uff0c\u6240\u4ee5\u8fd9\u7c7b\u578b\u7684\u5f3a\u5236\u8f6c\u6362\u548cC\u8bed\u8a00\u98ce\u683c\u7684\u5f3a\u5236\u8f6c\u6362\u90fd\u6709\u5b89\u5168\u9690\u60a3\u3002 2\u3001\u7528\u4e8e\u7c7b\u5c42\u6b21\u7ed3\u6784\u4e2d\u57fa\u7c7b\uff08\u7236\u7c7b\uff09\u548c\u6d3e\u751f\u7c7b\uff08\u5b50\u7c7b\uff09\u4e4b\u95f4\u6307\u9488\u6216\u5f15\u7528\u7684\u8f6c\u6362\u3002\u6ce8\u610f\uff1a\u8fdb\u884c \u4e0a\u884c\u8f6c\u6362 \uff08\u628a\u6d3e\u751f\u7c7b\u7684\u6307\u9488\u6216\u5f15\u7528\u8f6c\u6362\u6210\u57fa\u7c7b\u8868\u793a\uff09\u662f\u5b89\u5168\u7684\uff1b\u8fdb\u884c \u4e0b\u884c\u8f6c\u6362 \uff08\u628a\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u8f6c\u6362\u6210\u6d3e\u751f\u7c7b\u8868\u793a\uff09\u65f6\uff0c\u7531\u4e8e\u6ca1\u6709\u52a8\u6001\u7c7b\u578b\u68c0\u67e5\uff0c\u6240\u4ee5\u662f\u4e0d\u5b89\u5168\u7684\u3002 \u8f6c\u6362\u81ea\u5b9a\u4e49\u7c7b\u578b\uff0c\u53ea\u6709\u5728\u76f8\u4e92\u8054\u7cfb\uff08\u7ee7\u627f\uff09\u7684\u7c7b\u578b\u4e4b\u95f4\u624d\u80fd\u8fdb\u884c\u8f6c\u6362 \u3002","title":"static_cast"},{"location":"C%2B%2B/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/#dynamic_cast","text":"1\u3001\u5176\u4ed6\u4e09\u79cd\u90fd\u662f\u7f16\u8bd1\u65f6\u5b8c\u6210\u7684\u3002dynamic_cast\u662f\u8fd0\u884c\u65f6\u5904\u7406\u7684\uff0c\u8fd0\u884c\u65f6\u8981\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\u3002 2\u3001\u4e0d\u80fd\u7528\u4e8e\u5185\u7f6e\u57fa\u672c\u6570\u636e\u7c7b\u578b\u95f4\u7684\u5f3a\u5236\u8f6c\u6362\u3002\u4f8b\u5982\uff1a double dValue = 12.12; int nDValue = dynamic_cast<int>(dValue); // error C2680 : \u201cint\u201d : dynamic_cast \u7684\u76ee\u6807\u7c7b\u578b\u65e0\u6548\u3002\u76ee\u6807\u7c7b\u578b\u5fc5\u987b\u662f\u6307\u5411\u5df2\u5b9a\u4e49\u7c7b\u7684\u6307\u9488\u6216\u5f15\u7528 3\u3001\u4f7f\u7528dynamic_cast\u8fdb\u884c\u8f6c\u6362\u65f6\uff0c\u57fa\u7c7b\u4e2d\u4e00\u5b9a\u8981\u6709\u865a\u51fd\u6570\uff0c\u5426\u5219\u7f16\u8bd1\u4e0d\u901a\u8fc7\u3002 \u539f\u56e0\uff1a\u7c7b\u4e2d\u5b58\u5728\u865a\u51fd\u6570\uff0c\u5c31\u8bf4\u660e\u5b83\u6709\u60f3\u8981\u8ba9\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u5fc5\u8981\uff0c\u6b64\u65f6\u8f6c\u6362\u624d\u6709\u610f\u4e49\u3002 \u7531\u4e8e\u8fd0\u884c\u65f6\u7c7b\u578b\u68c0\u67e5\u9700\u8981\u8fd0\u884c\u65f6\u7c7b\u578b\u4fe1\u606f\uff0c\u800c\u8fd9\u4e2a\u4fe1\u606f\u5b58\u50a8\u5728\u7c7b\u7684\u865a\u51fd\u6570\u8868\u4e2d\uff0c\u53ea\u6709\u5b9a\u4e49\u4e86\u865a\u51fd\u6570\u7684\u7c7b\u624d\u6709\u865a\u51fd\u6570\u8868\u3002 4\u3001dynamic_cast\u8f6c\u6362\u82e5\u6210\u529f\uff0c\u8fd4\u56de\u7684\u662f\u6307\u5411\u7c7b\u7684\u6307\u9488\u6216\u5f15\u7528\uff1b\u82e5\u5931\u8d25\u5219\u4f1a\u8fd4\u56deNULL\u3002 5\u3001\u5728\u7c7b\u7684\u8f6c\u6362\u65f6\uff0c\u5728\u7c7b\u5c42\u6b21\u95f4\u8fdb\u884c\u4e0a\u884c\u8f6c\u6362\u65f6\uff0cdynamic_cast\u548cstatic_cast\u7684\u6548\u679c\u662f\u4e00\u6837\u7684\u3002 \u5728\u8fdb\u884c\u4e0b\u884c\u8f6c\u6362\u65f6\uff0cdynamic_cast\u5177\u6709\u7c7b\u578b\u68c0\u67e5\u7684\u529f\u80fd\uff0c\u6bd4static_cast\u66f4\u5b89\u5168\u3002 \u5411\u4e0a\u8f6c\u6362\u5373\u4e3a\u6307\u5411\u5b50\u7c7b\u5bf9\u8c61\u7684\u5411\u4e0a\u8f6c\u6362\uff0c\u5373\u5c06\u5b50\u7c7b\u6307\u9488\u8f6c\u5316\u7236\u7c7b\u6307\u9488\u3002 \u5411\u4e0b\u8f6c\u6362\u7684\u6210\u8d25\u53d6\u51b3\u4e8e\u5c06\u8981\u8f6c\u6362\u7684\u7c7b\u578b\uff0c\u5373\u8981\u5f3a\u5236\u8f6c\u6362\u7684\u6307\u9488\u6240\u6307\u5411\u7684\u5bf9\u8c61\u5b9e\u9645\u7c7b\u578b\u4e0e\u5c06\u8981\u8f6c\u6362\u540e\u7684\u7c7b\u578b\u4e00\u5b9a\u8981\u76f8\u540c\uff0c\u5426\u5219\u8f6c\u6362\u5931\u8d25\u3002","title":"dynamic_cast"},{"location":"C%2B%2B/%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2/#reinterpret_cast","text":"emmmmmm.....\u6ca1\u7528\u8fc7","title":"reinterpret_cast"},{"location":"C%2B%2B/%E7%BB%93%E6%9E%84%E4%BD%93/","text":"C++ categories: C++ date: 2020-12-02 11:53:00 struct inflatable hat\uff1b inflatable woopie_cushion inflatable mainframe struct inflatable goose\uff1b //C\u8bed\u8a00\u7ed3\u6784\u4f53\u5bf9\u8c61\u58f0\u660e\uff0c\u4e0eC++\u7ed3\u6784\u4f53\u58f0\u660e\u90fd\u53ef\u4ee5 inflatable Vincent\uff1b //\u53ea\u6709C++\u7ed3\u6784\u4f53\u58f0\u660e\u53ef\u4ee5\u7528 \u7531\u4e8ehat\u7684\u7c7b\u578b\u662finflatable\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u6210\u5458\u8fd0\u7b97\u7b26\uff08.\uff09\u6765\u8bbf\u95ee\u5404\u4e2a\u6210\u5458\u3002\u4f8b\u5982\uff0chat.volume\u6307\u7684\u662f\u7ed3\u6784\u7684volume\u6210\u5458\uff0chat.privce,\u6307\u7684\u662fprice\u6210\u5458\u3002 \u6307\u5411\u7ed3\u6784\u4f53\u53d8\u91cf\u7684\u6307\u9488 \u8981\u6ce8\u610f\u7684\u662f\uff0c\u53ea\u6709\u201c\u6307\u9488\u53d8\u91cf\u540d\u201d\u540e\u9762\u624d\u80fd\u52a0\u201c->\u201d\uff0c\u5343\u4e07\u4e0d\u8981\u5728\u6210\u5458\u540d\u540e\u9762\u52a0\u201c->\u201d\u3002 \u4ee5\u4e0b 3 \u79cd\u5f62\u5f0f\u662f\u7b49\u4ef7\u7684\uff1a \u2022 \u7ed3\u6784\u4f53\u53d8\u91cf.\u6210\u5458\u540d\u3002 \u2022 (*\u6307\u9488\u53d8\u91cf).\u6210\u5458\u540d\u3002 \u2022 \u6307\u9488\u53d8\u91cf->\u6210\u5458\u540d\u3002","title":"\u7ed3\u6784\u4f53"},{"location":"C%2B%2B/%E7%BB%93%E6%9E%84%E4%BD%93/#struct","text":"inflatable hat\uff1b inflatable woopie_cushion inflatable mainframe struct inflatable goose\uff1b //C\u8bed\u8a00\u7ed3\u6784\u4f53\u5bf9\u8c61\u58f0\u660e\uff0c\u4e0eC++\u7ed3\u6784\u4f53\u58f0\u660e\u90fd\u53ef\u4ee5 inflatable Vincent\uff1b //\u53ea\u6709C++\u7ed3\u6784\u4f53\u58f0\u660e\u53ef\u4ee5\u7528 \u7531\u4e8ehat\u7684\u7c7b\u578b\u662finflatable\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u6210\u5458\u8fd0\u7b97\u7b26\uff08.\uff09\u6765\u8bbf\u95ee\u5404\u4e2a\u6210\u5458\u3002\u4f8b\u5982\uff0chat.volume\u6307\u7684\u662f\u7ed3\u6784\u7684volume\u6210\u5458\uff0chat.privce,\u6307\u7684\u662fprice\u6210\u5458\u3002 \u6307\u5411\u7ed3\u6784\u4f53\u53d8\u91cf\u7684\u6307\u9488 \u8981\u6ce8\u610f\u7684\u662f\uff0c\u53ea\u6709\u201c\u6307\u9488\u53d8\u91cf\u540d\u201d\u540e\u9762\u624d\u80fd\u52a0\u201c->\u201d\uff0c\u5343\u4e07\u4e0d\u8981\u5728\u6210\u5458\u540d\u540e\u9762\u52a0\u201c->\u201d\u3002 \u4ee5\u4e0b 3 \u79cd\u5f62\u5f0f\u662f\u7b49\u4ef7\u7684\uff1a \u2022 \u7ed3\u6784\u4f53\u53d8\u91cf.\u6210\u5458\u540d\u3002 \u2022 (*\u6307\u9488\u53d8\u91cf).\u6210\u5458\u540d\u3002 \u2022 \u6307\u9488\u53d8\u91cf->\u6210\u5458\u540d\u3002","title":"struct"}]}